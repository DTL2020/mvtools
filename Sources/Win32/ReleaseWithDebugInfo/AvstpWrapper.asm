; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	c:\github\mvtools\sources\avstpwrapper.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_C@_1JG@FCOBIJME@?$AAA?$AAv?$AAs?$AAt?$AAp?$AAW?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAa?$AAv?$AAs?$AAt?$AAp?$AA?4@ ; `string'
PUBLIC	??_C@_0BM@EFPJMKOP@avstp_get_interface_version?$AA@ ; `string'
PUBLIC	??_C@_0BI@BJPFPOLM@avstp_create_dispatcher?$AA@	; `string'
PUBLIC	??_C@_0BJ@DFOAIFIJ@avstp_destroy_dispatcher?$AA@ ; `string'
PUBLIC	??_C@_0BG@NJHGAODH@avstp_get_nbr_threads?$AA@	; `string'
PUBLIC	??_C@_0BD@GBCAOOFA@avstp_enqueue_task?$AA@	; `string'
PUBLIC	??_C@_0BG@KJJMKHOG@avstp_wait_completion?$AA@	; `string'
PUBLIC	??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@ ; `string'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@AvstpWrapper@@8			; AvstpWrapper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAvstpWrapper@@@8			; AvstpWrapper `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?_dummy_dispatcher@AvstpWrapper@@0HA		; AvstpWrapper::_dummy_dispatcher
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	?_singleton_init_flag@AvstpWrapper@@0_NC	; AvstpWrapper::_singleton_init_flag
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R3AvstpWrapper@@8				; AvstpWrapper::`RTTI Class Hierarchy Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4AvstpWrapper@@6B@				; AvstpWrapper::`RTTI Complete Object Locator'
PUBLIC	??_R2AvstpWrapper@@8				; AvstpWrapper::`RTTI Base Class Array'
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_7AvstpWrapper@@6B@				; AvstpWrapper::`vftable'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp____std_terminate:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__OutputDebugStringW@4:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp____std_exception_copy:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp____std_exception_destroy:PROC
?_dummy_dispatcher@AvstpWrapper@@0HA DD 01H DUP (?)	; AvstpWrapper::_dummy_dispatcher
?_singleton_init_flag@AvstpWrapper@@0_NC DB 01H DUP (?)	; AvstpWrapper::_singleton_init_flag
_BSS	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_7AvstpWrapper@@6B@
CONST	SEGMENT
??_7AvstpWrapper@@6B@ DD FLAT:??_R4AvstpWrapper@@6B@	; AvstpWrapper::`vftable'
	DD	FLAT:??_EAvstpWrapper@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT ??_R2AvstpWrapper@@8
rdata$r	SEGMENT
??_R2AvstpWrapper@@8 DD FLAT:??_R1A@?0A@EA@AvstpWrapper@@8 ; AvstpWrapper::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R4AvstpWrapper@@6B@
rdata$r	SEGMENT
??_R4AvstpWrapper@@6B@ DD 00H				; AvstpWrapper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAvstpWrapper@@@8
	DD	FLAT:??_R3AvstpWrapper@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R3AvstpWrapper@@8
rdata$r	SEGMENT
??_R3AvstpWrapper@@8 DD 00H				; AvstpWrapper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2AvstpWrapper@@8
rdata$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAvstpWrapper@@@8
data$r	SEGMENT
??_R0?AVAvstpWrapper@@@8 DD FLAT:??_7type_info@@6B@	; AvstpWrapper `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAvstpWrapper@@', 00H
data$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AvstpWrapper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AvstpWrapper@@8 DD FLAT:??_R0?AVAvstpWrapper@@@8 ; AvstpWrapper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AvstpWrapper@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@
CONST	SEGMENT
??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@ DB 'Function '
	DB	'missing in avstp.dll.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KJJMKHOG@avstp_wait_completion?$AA@
CONST	SEGMENT
??_C@_0BG@KJJMKHOG@avstp_wait_completion?$AA@ DB 'avstp_wait_completion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBCAOOFA@avstp_enqueue_task?$AA@
CONST	SEGMENT
??_C@_0BD@GBCAOOFA@avstp_enqueue_task?$AA@ DB 'avstp_enqueue_task', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NJHGAODH@avstp_get_nbr_threads?$AA@
CONST	SEGMENT
??_C@_0BG@NJHGAODH@avstp_get_nbr_threads?$AA@ DB 'avstp_get_nbr_threads', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DFOAIFIJ@avstp_destroy_dispatcher?$AA@
CONST	SEGMENT
??_C@_0BJ@DFOAIFIJ@avstp_destroy_dispatcher?$AA@ DB 'avstp_destroy_dispat'
	DB	'cher', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BJPFPOLM@avstp_create_dispatcher?$AA@
CONST	SEGMENT
??_C@_0BI@BJPFPOLM@avstp_create_dispatcher?$AA@ DB 'avstp_create_dispatch'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EFPJMKOP@avstp_get_interface_version?$AA@
CONST	SEGMENT
??_C@_0BM@EFPJMKOP@avstp_get_interface_version?$AA@ DB 'avstp_get_interfa'
	DB	'ce_version', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@FCOBIJME@?$AAA?$AAv?$AAs?$AAt?$AAp?$AAW?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAa?$AAv?$AAs?$AAt?$AAp?$AA?4@
CONST	SEGMENT
??_C@_1JG@FCOBIJME@?$AAA?$AAv?$AAs?$AAt?$AAp?$AAW?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAa?$AAv?$AAs?$AAt?$AAp?$AA?4@ DB 'A'
	DB	00H, 'v', 00H, 's', 00H, 't', 00H, 'p', 00H, 'W', 00H, 'r', 00H
	DB	'a', 00H, 'p', 00H, 'p', 00H, 'e', 00H, 'r', 00H, ':', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'f', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'a'
	DB	00H, 'v', 00H, 's', 00H, 't', 00H, 'p', 00H, '.', 00H, 'd', 00H
	DB	'l', 00H, 'l', 00H, '.', 00H, 'U', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'.', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
PUBLIC	??0?$auto_ptr_ref@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z ; std::auto_ptr_ref<AvstpWrapper>::auto_ptr_ref<AvstpWrapper>
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??$resolve_name@P6AHPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@@ZPBD@Z ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *)>
PUBLIC	??$resolve_name@P6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@ZPBD@Z ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *,void (__cdecl*)(avstp::TaskDispatcher *,void *),void *)>
PUBLIC	??$resolve_name@P6AXPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AXPAVTaskDispatcher@avstp@@@ZPBD@Z ; AvstpWrapper::resolve_name<void (__cdecl*)(avstp::TaskDispatcher *)>
PUBLIC	??$resolve_name@P6APAVTaskDispatcher@avstp@@XZ@AvstpWrapper@@AAEXAAP6APAVTaskDispatcher@avstp@@XZPBD@Z ; AvstpWrapper::resolve_name<avstp::TaskDispatcher * (__cdecl*)(void)>
PUBLIC	??$resolve_name@P6AHXZ@AvstpWrapper@@AAEXAAP6AHXZPBD@Z ; AvstpWrapper::resolve_name<int (__cdecl*)(void)>
PUBLIC	??$?BVAvstpWrapper@@@?$auto_ptr@VAvstpWrapper@@@std@@QAE?AU?$auto_ptr_ref@VAvstpWrapper@@@1@XZ ; std::auto_ptr<AvstpWrapper>::operator<AvstpWrapper> std::auto_ptr_ref<AvstpWrapper>
PUBLIC	?get@?$auto_ptr@VAvstpWrapper@@@std@@QBEPAVAvstpWrapper@@XZ ; std::auto_ptr<AvstpWrapper>::get
PUBLIC	?reset@?$auto_ptr@VAvstpWrapper@@@std@@QAEXPAVAvstpWrapper@@@Z ; std::auto_ptr<AvstpWrapper>::reset
PUBLIC	??0?$auto_ptr@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z ; std::auto_ptr<AvstpWrapper>::auto_ptr<AvstpWrapper>
PUBLIC	??4?$auto_ptr@VAvstpWrapper@@@std@@QAEAAV01@U?$auto_ptr_ref@VAvstpWrapper@@@1@@Z ; std::auto_ptr<AvstpWrapper>::operator=
PUBLIC	??1?$auto_ptr@VAvstpWrapper@@@std@@QAE@XZ	; std::auto_ptr<AvstpWrapper>::~auto_ptr<AvstpWrapper>
PUBLIC	??D?$auto_ptr@VAvstpWrapper@@@std@@QBEAAVAvstpWrapper@@XZ ; std::auto_ptr<AvstpWrapper>::operator*
PUBLIC	?fallback_wait_completion_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::fallback_wait_completion_ptr
PUBLIC	?fallback_enqueue_task_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z ; AvstpWrapper::fallback_enqueue_task_ptr
PUBLIC	?fallback_get_nbr_threads_ptr@AvstpWrapper@@CAHXZ ; AvstpWrapper::fallback_get_nbr_threads_ptr
PUBLIC	?fallback_destroy_dispatcher_ptr@AvstpWrapper@@CAXPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::fallback_destroy_dispatcher_ptr
PUBLIC	?fallback_create_dispatcher_ptr@AvstpWrapper@@CAPAVTaskDispatcher@avstp@@XZ ; AvstpWrapper::fallback_create_dispatcher_ptr
PUBLIC	?fallback_get_interface_version_ptr@AvstpWrapper@@CAHXZ ; AvstpWrapper::fallback_get_interface_version_ptr
PUBLIC	?assign_fallback@AvstpWrapper@@AAEXXZ		; AvstpWrapper::assign_fallback
PUBLIC	?assign_normal@AvstpWrapper@@AAEXXZ		; AvstpWrapper::assign_normal
PUBLIC	??0AvstpWrapper@@IAE@XZ				; AvstpWrapper::AvstpWrapper
PUBLIC	?wait_completion@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::wait_completion
PUBLIC	?enqueue_task@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z ; AvstpWrapper::enqueue_task
PUBLIC	?get_nbr_threads@AvstpWrapper@@QBEHXZ		; AvstpWrapper::get_nbr_threads
PUBLIC	?destroy_dispatcher@AvstpWrapper@@QAEXPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::destroy_dispatcher
PUBLIC	?create_dispatcher@AvstpWrapper@@QAEPAVTaskDispatcher@avstp@@XZ ; AvstpWrapper::create_dispatcher
PUBLIC	?use_instance@AvstpWrapper@@SAAAV1@XZ		; AvstpWrapper::use_instance
PUBLIC	??_GAvstpWrapper@@UAEPAXI@Z			; AvstpWrapper::`scalar deleting destructor'
PUBLIC	??1AvstpWrapper@@UAE@XZ				; AvstpWrapper::~AvstpWrapper
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@QBD@Z			; std::exception::exception
PUBLIC	??1CritSec@conc@@QAE@XZ				; conc::CritSec::~CritSec
PUBLIC	??0CritSec@conc@@QAE@AAVMutex@1@@Z		; conc::CritSec::CritSec
PUBLIC	?unlock@Mutex@conc@@QAEXXZ			; conc::Mutex::unlock
PUBLIC	?lock@Mutex@conc@@QAEXXZ			; conc::Mutex::lock
PUBLIC	??1Mutex@conc@@QAE@XZ				; conc::Mutex::~Mutex
PUBLIC	??0Mutex@conc@@QAE@XZ				; conc::Mutex::Mutex
PUBLIC	?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_EAvstpWrapper@@UAEPAXI@Z:PROC		; AvstpWrapper::`vector deleting destructor'
;	COMDAT ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A
_BSS	SEGMENT
?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A DB 018H DUP (?) ; `AvstpWrapper::use_instance'::`5'::mutex_new
_BSS	ENDS
;	COMDAT ?$S1@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4IA
_BSS	SEGMENT
?$S1@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4IA DD 01H DUP (?) ; S1<`template-parameter-5',AvstpWrapper::se_instance, ?? :: ?? ::IA::XZ::XZ::AV2 * const volatile>
?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A DD 01H DUP (?) ; AvstpWrapper::_singleton_aptr
_BSS	ENDS
CRT$XCU	SEGMENT
??_singleton_aptr$initializer$@AvstpWrapper@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ ; ??_singleton_aptr$initializer$@AvstpWrapper@@0P6AXXZA@@3P6AXXZA
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?use_instance@AvstpWrapper@@SAAAV1@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?use_instance@AvstpWrapper@@SAAAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?use_instance@AvstpWrapper@@SAAAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?use_instance@AvstpWrapper@@SAAAV1@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?use_instance@AvstpWrapper@@SAAAV1@XZ$2
CRT$XCU	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\mutex.hpp
;	COMDAT ??0Mutex@conc@@QAE@XZ
_TEXT	SEGMENT
??0Mutex@conc@@QAE@XZ PROC				; conc::Mutex::Mutex, COMDAT
; _this$ = ecx

; 38   : {

	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0

; 39   : 	::InitializeCriticalSection (&_crit_sec);

	push	esi
	movups	XMMWORD PTR [esi], xmm0
	movq	QWORD PTR [esi+16], xmm0
	call	DWORD PTR __imp__InitializeCriticalSection@4

; 40   : }

	mov	eax, esi
	pop	esi
	ret	0
??0Mutex@conc@@QAE@XZ ENDP				; conc::Mutex::Mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\mutex.hpp
;	COMDAT ??1Mutex@conc@@QAE@XZ
_TEXT	SEGMENT
??1Mutex@conc@@QAE@XZ PROC				; conc::Mutex::~Mutex, COMDAT
; _this$ = ecx

; 46   : 	::DeleteCriticalSection (&_crit_sec);

	push	ecx
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 47   : }

	ret	0
??1Mutex@conc@@QAE@XZ ENDP				; conc::Mutex::~Mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\mutex.hpp
;	COMDAT ?lock@Mutex@conc@@QAEXXZ
_TEXT	SEGMENT
?lock@Mutex@conc@@QAEXXZ PROC				; conc::Mutex::lock, COMDAT
; _this$ = ecx

; 53   : 	::EnterCriticalSection (&_crit_sec);

	push	ecx
	call	DWORD PTR __imp__EnterCriticalSection@4

; 54   : }

	ret	0
?lock@Mutex@conc@@QAEXXZ ENDP				; conc::Mutex::lock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\mutex.hpp
;	COMDAT ?unlock@Mutex@conc@@QAEXXZ
_TEXT	SEGMENT
?unlock@Mutex@conc@@QAEXXZ PROC				; conc::Mutex::unlock, COMDAT
; _this$ = ecx

; 60   : 	::LeaveCriticalSection (&_crit_sec);

	push	ecx
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 61   : }

	ret	0
?unlock@Mutex@conc@@QAEXXZ ENDP				; conc::Mutex::unlock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\critsec.hpp
; File c:\github\mvtools\sources\conc\mutex.hpp
; File c:\github\mvtools\sources\conc\critsec.hpp
; File c:\github\mvtools\sources\conc\mutex.hpp
; File c:\github\mvtools\sources\conc\critsec.hpp
;	COMDAT ??0CritSec@conc@@QAE@AAVMutex@1@@Z
_TEXT	SEGMENT
_mutex$ = 8						; size = 4
??0CritSec@conc@@QAE@AAVMutex@1@@Z PROC			; conc::CritSec::CritSec, COMDAT
; _this$ = ecx

; 41   : :	_mutex (mutex)

	mov	eax, DWORD PTR _mutex$[esp-4]
	push	esi
	mov	esi, ecx
; File c:\github\mvtools\sources\conc\mutex.hpp

; 53   : 	::EnterCriticalSection (&_crit_sec);

	push	eax
; File c:\github\mvtools\sources\conc\critsec.hpp

; 41   : :	_mutex (mutex)

	mov	DWORD PTR [esi], eax
; File c:\github\mvtools\sources\conc\mutex.hpp

; 53   : 	::EnterCriticalSection (&_crit_sec);

	call	DWORD PTR __imp__EnterCriticalSection@4
; File c:\github\mvtools\sources\conc\critsec.hpp

; 46   : }

	mov	eax, esi
	pop	esi
	ret	4
??0CritSec@conc@@QAE@AAVMutex@1@@Z ENDP			; conc::CritSec::CritSec
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\critsec.hpp
; File c:\github\mvtools\sources\conc\mutex.hpp
; File c:\github\mvtools\sources\conc\critsec.hpp
;	COMDAT ??1CritSec@conc@@QAE@XZ
_TEXT	SEGMENT
??1CritSec@conc@@QAE@XZ PROC				; conc::CritSec::~CritSec, COMDAT
; _this$ = ecx
; File c:\github\mvtools\sources\conc\mutex.hpp

; 60   : 	::LeaveCriticalSection (&_crit_sec);

	push	DWORD PTR [ecx]
	call	DWORD PTR __imp__LeaveCriticalSection@4
; File c:\github\mvtools\sources\conc\critsec.hpp

; 53   : }

	ret	0
??1CritSec@conc@@QAE@XZ ENDP				; conc::CritSec::~CritSec
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBD@Z
_TEXT	SEGMENT
__InitData$ = -8					; size = 8
__Message$ = 8						; size = 4
??0exception@std@@QAE@QBD@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 53   :     {

	sub	esp, 8

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[esp+4]
	xorps	xmm0, xmm0
	push	esi
	mov	esi, ecx
	mov	DWORD PTR __InitData$[esp+12], eax
	lea	edx, DWORD PTR [esi+4]
	mov	BYTE PTR __InitData$[esp+16], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	edx
	lea	eax, DWORD PTR __InitData$[esp+16]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8

; 56   :     }

	mov	eax, esi
	pop	esi
	add	esp, 8
	ret	4
??0exception@std@@QAE@QBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
	lea	eax, DWORD PTR [esi+4]

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR __Other$[esp+4]
	add	eax, 4
	push	eax
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8

; 68   :     }

	mov	eax, esi
	pop	esi
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	pop	ecx

; 85   :     }

	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
	test	ecx, ecx
	cmovne	eax, ecx

; 90   :     }

	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
__InitData$1 = -8					; size = 8
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx

; 168  : 		{	// construct from message string

	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[esp+4]
	xorps	xmm0, xmm0
	push	esi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[esp+12], eax
	lea	edx, DWORD PTR [esi+4]
	mov	BYTE PTR __InitData$1[esp+16], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	edx
	lea	eax, DWORD PTR __InitData$1[esp+16]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@

; 169  : 		}

	mov	eax, esi
	pop	esi
	add	esp, 8
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN9@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN9@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx

; 84   :         __std_exception_destroy(&_Data);

	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	DWORD PTR __imp____std_exception_destroy
	pop	ecx
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??1AvstpWrapper@@UAE@XZ
_TEXT	SEGMENT
??1AvstpWrapper@@UAE@XZ PROC				; AvstpWrapper::~AvstpWrapper, COMDAT
; _this$ = ecx

; 57   : {

	push	esi
	mov	esi, ecx

; 58   : 	::FreeLibrary (reinterpret_cast < ::HMODULE> (_dll_hnd));

	push	DWORD PTR [esi+28]
	mov	DWORD PTR [esi], OFFSET ??_7AvstpWrapper@@6B@
	call	DWORD PTR __imp__FreeLibrary@4

; 59   : 	_dll_hnd = 0;

	mov	DWORD PTR [esi+28], 0
	pop	esi

; 60   : }

	ret	0
??1AvstpWrapper@@UAE@XZ ENDP				; AvstpWrapper::~AvstpWrapper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??_GAvstpWrapper@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GAvstpWrapper@@UAEPAXI@Z PROC			; AvstpWrapper::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx

; 58   : 	::FreeLibrary (reinterpret_cast < ::HMODULE> (_dll_hnd));

	push	DWORD PTR [esi+28]
	mov	DWORD PTR [esi], OFFSET ??_7AvstpWrapper@@6B@
	call	DWORD PTR __imp__FreeLibrary@4
	test	BYTE PTR ___flags$[esp], 1

; 59   : 	_dll_hnd = 0;

	mov	DWORD PTR [esi+28], 0
	je	SHORT $LN7@scalar
	push	32					; 00000020H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN7@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GAvstpWrapper@@UAEPAXI@Z ENDP			; AvstpWrapper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\github\mvtools\sources\conc\mutex.hpp
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\github\mvtools\sources\conc\mutex.hpp
; File c:\github\mvtools\sources\conc\critsec.hpp
; File c:\github\mvtools\sources\conc\mutex.hpp
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\github\mvtools\sources\conc\mutex.hpp
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?use_instance@AvstpWrapper@@SAAAV1@XZ
_TEXT	SEGMENT
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -20						; size = 4
_guard$5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?use_instance@AvstpWrapper@@SAAAV1@XZ PROC		; AvstpWrapper::use_instance, COMDAT

; 80   : {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?use_instance@AvstpWrapper@@SAAAV1@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 81   : 	// First check
; 82   : 	if (! _singleton_init_flag)

	cmp	BYTE PTR ?_singleton_init_flag@AvstpWrapper@@0_NC, 0 ; AvstpWrapper::_singleton_init_flag
	jne	$LN50@use_instan

; 85   : 		static conc::Mutex	mutex_new;

	mov	eax, DWORD PTR ?$S1@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4IA
	test	al, 1
	jne	SHORT $LN2@use_instan
	or	eax, 1
	xorps	xmm0, xmm0
	mov	DWORD PTR ?$S1@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4IA, eax
; File c:\github\mvtools\sources\conc\mutex.hpp

; 39   : 	::InitializeCriticalSection (&_crit_sec);

	push	OFFSET ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A
	movups	XMMWORD PTR ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A, xmm0
	movq	QWORD PTR ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A+16, xmm0
	call	DWORD PTR __imp__InitializeCriticalSection@4
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 85   : 		static conc::Mutex	mutex_new;

	push	OFFSET ??__Fmutex_new@?4??use_instance@AvstpWrapper@@SAAAV1@XZ@YAXXZ ; `AvstpWrapper::use_instance'::`5'::`dynamic atexit destructor for 'mutex_new''
	call	_atexit
	add	esp, 4
$LN2@use_instan:
; File c:\github\mvtools\sources\conc\mutex.hpp

; 53   : 	::EnterCriticalSection (&_crit_sec);

	push	OFFSET ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A
; File c:\github\mvtools\sources\conc\critsec.hpp

; 41   : :	_mutex (mutex)

	mov	DWORD PTR _guard$5[ebp], OFFSET ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A
; File c:\github\mvtools\sources\conc\mutex.hpp

; 53   : 	::EnterCriticalSection (&_crit_sec);

	call	DWORD PTR __imp__EnterCriticalSection@4
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 86   : 		conc::CritSec	guard (mutex_new);

	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 87   : 
; 88   : 		// Double check.
; 89   : 		if (! _singleton_init_flag)

	cmp	BYTE PTR ?_singleton_init_flag@AvstpWrapper@@0_NC, 0 ; AvstpWrapper::_singleton_init_flag
	jne	SHORT $LN4@use_instan

; 90   : 		{
; 91   : 			assert (! _singleton_init_flag && _singleton_aptr.get () == 0);
; 92   : 			_singleton_aptr = std::auto_ptr <AvstpWrapper> (new AvstpWrapper);

	push	esi
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??0AvstpWrapper@@IAE@XZ			; AvstpWrapper::AvstpWrapper
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 794  : 		if (_Ptr != _Myptr)

	mov	ecx, DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr

; 682  : 		: _Ref(_Right)

	mov	esi, eax
	mov	DWORD PTR $T3[ebp], esi

; 724  : 		_Myptr = 0;	// pass ownership to auto_ptr_ref

	mov	DWORD PTR $T2[ebp], 0

; 794  : 		if (_Ptr != _Myptr)

	cmp	esi, ecx
	je	SHORT $LN32@use_instan

; 795  : 			delete _Myptr;

	test	ecx, ecx
	je	SHORT $LN32@use_instan
	mov	eax, DWORD PTR [ecx]
	push	1
	call	DWORD PTR [eax]
$LN32@use_instan:

; 796  : 		_Myptr = _Ptr;

	mov	DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A, esi ; AvstpWrapper::_singleton_aptr
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 93   : 			_singleton_init_flag = true;

	mov	BYTE PTR ?_singleton_init_flag@AvstpWrapper@@0_NC, 1 ; AvstpWrapper::_singleton_init_flag
	pop	esi
$LN4@use_instan:
; File c:\github\mvtools\sources\conc\mutex.hpp

; 60   : 	::LeaveCriticalSection (&_crit_sec);

	push	OFFSET ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A
	call	DWORD PTR __imp__LeaveCriticalSection@4
$LN50@use_instan:
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 99   : 	return (*_singleton_aptr);

	mov	eax, DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr

; 100  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?use_instance@AvstpWrapper@@SAAAV1@XZ$1:
	lea	ecx, DWORD PTR _guard$5[ebp]
	jmp	??1CritSec@conc@@QAE@XZ			; conc::CritSec::~CritSec
__unwindfunclet$?use_instance@AvstpWrapper@@SAAAV1@XZ$2:
	push	32					; 00000020H
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?use_instance@AvstpWrapper@@SAAAV1@XZ:
	mov	eax, OFFSET __ehfuncinfo$?use_instance@AvstpWrapper@@SAAAV1@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?use_instance@AvstpWrapper@@SAAAV1@XZ ENDP		; AvstpWrapper::use_instance
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\mutex.hpp
;	COMDAT ??__Fmutex_new@?4??use_instance@AvstpWrapper@@SAAAV1@XZ@YAXXZ
text$yd	SEGMENT
??__Fmutex_new@?4??use_instance@AvstpWrapper@@SAAAV1@XZ@YAXXZ PROC ; `AvstpWrapper::use_instance'::`5'::`dynamic atexit destructor for 'mutex_new'', COMDAT

; 46   : 	::DeleteCriticalSection (&_crit_sec);

	push	OFFSET ?mutex_new@?4??use_instance@AvstpWrapper@@SAAAV2@XZ@4VMutex@conc@@A
	call	DWORD PTR __imp__DeleteCriticalSection@4
	ret	0
??__Fmutex_new@?4??use_instance@AvstpWrapper@@SAAAV1@XZ@YAXXZ ENDP ; `AvstpWrapper::use_instance'::`5'::`dynamic atexit destructor for 'mutex_new''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?create_dispatcher@AvstpWrapper@@QAEPAVTaskDispatcher@avstp@@XZ
_TEXT	SEGMENT
?create_dispatcher@AvstpWrapper@@QAEPAVTaskDispatcher@avstp@@XZ PROC ; AvstpWrapper::create_dispatcher, COMDAT
; _this$ = ecx

; 118  : 	return (_avstp_create_dispatcher_ptr ());

	mov	eax, DWORD PTR [ecx+8]
	jmp	eax
?create_dispatcher@AvstpWrapper@@QAEPAVTaskDispatcher@avstp@@XZ ENDP ; AvstpWrapper::create_dispatcher
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?destroy_dispatcher@AvstpWrapper@@QAEXPAVTaskDispatcher@avstp@@@Z
_TEXT	SEGMENT
_td_ptr$ = 8						; size = 4
?destroy_dispatcher@AvstpWrapper@@QAEXPAVTaskDispatcher@avstp@@@Z PROC ; AvstpWrapper::destroy_dispatcher, COMDAT
; _this$ = ecx

; 125  : 	_avstp_destroy_dispatcher_ptr (td_ptr);

	push	DWORD PTR _td_ptr$[esp-4]
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	pop	ecx

; 126  : }

	ret	4
?destroy_dispatcher@AvstpWrapper@@QAEXPAVTaskDispatcher@avstp@@@Z ENDP ; AvstpWrapper::destroy_dispatcher
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?get_nbr_threads@AvstpWrapper@@QBEHXZ
_TEXT	SEGMENT
?get_nbr_threads@AvstpWrapper@@QBEHXZ PROC		; AvstpWrapper::get_nbr_threads, COMDAT
; _this$ = ecx

; 132  : 	return (_avstp_get_nbr_threads_ptr ());

	mov	eax, DWORD PTR [ecx+16]
	jmp	eax
?get_nbr_threads@AvstpWrapper@@QBEHXZ ENDP		; AvstpWrapper::get_nbr_threads
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?enqueue_task@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z
_TEXT	SEGMENT
_td_ptr$ = 8						; size = 4
_task_ptr$ = 12						; size = 4
_user_data_ptr$ = 16					; size = 4
?enqueue_task@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z PROC ; AvstpWrapper::enqueue_task, COMDAT
; _this$ = ecx

; 139  : 	return (_avstp_enqueue_task_ptr (td_ptr, task_ptr, user_data_ptr));

	push	DWORD PTR _user_data_ptr$[esp-4]
	mov	eax, DWORD PTR [ecx+20]
	push	DWORD PTR _task_ptr$[esp]
	push	DWORD PTR _td_ptr$[esp+4]
	call	eax
	add	esp, 12					; 0000000cH

; 140  : }

	ret	12					; 0000000cH
?enqueue_task@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z ENDP ; AvstpWrapper::enqueue_task
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?wait_completion@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@@Z
_TEXT	SEGMENT
_td_ptr$ = 8						; size = 4
?wait_completion@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@@Z PROC ; AvstpWrapper::wait_completion, COMDAT
; _this$ = ecx

; 146  : 	return (_avstp_wait_completion_ptr (td_ptr));

	push	DWORD PTR _td_ptr$[esp-4]
	mov	eax, DWORD PTR [ecx+24]
	call	eax
	add	esp, 4

; 147  : }

	ret	4
?wait_completion@AvstpWrapper@@QAEHPAVTaskDispatcher@avstp@@@Z ENDP ; AvstpWrapper::wait_completion
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??0AvstpWrapper@@IAE@XZ
_TEXT	SEGMENT
??0AvstpWrapper@@IAE@XZ PROC				; AvstpWrapper::AvstpWrapper, COMDAT
; _this$ = ecx

; 163  : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7AvstpWrapper@@6B@

; 157  : ,	_avstp_get_interface_version_ptr (0)

	mov	DWORD PTR [esi+4], 0

; 158  : ,	_avstp_create_dispatcher_ptr (0)

	mov	DWORD PTR [esi+8], 0

; 159  : ,	_avstp_destroy_dispatcher_ptr (0)

	mov	DWORD PTR [esi+12], 0

; 160  : ,	_avstp_get_nbr_threads_ptr (0)

	mov	DWORD PTR [esi+16], 0

; 161  : ,	_avstp_enqueue_task_ptr (0)

	mov	DWORD PTR [esi+20], 0

; 162  : ,	_avstp_wait_completion_ptr (0)

	mov	DWORD PTR [esi+24], 0

; 156  : :	_dll_hnd (AvstpFinder::find_lib ())

	call	?find_lib@AvstpFinder@@SAPAUHINSTANCE__@@XZ ; AvstpFinder::find_lib
	mov	DWORD PTR [esi+28], eax

; 164  : 	if (_dll_hnd == 0)

	test	eax, eax
	jne	SHORT $LN2@AvstpWrapp

; 165  : 	{
; 166  : 		::OutputDebugStringW (

	push	OFFSET ??_C@_1JG@FCOBIJME@?$AAA?$AAv?$AAs?$AAt?$AAp?$AAW?$AAr?$AAa?$AAp?$AAp?$AAe?$AAr?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAa?$AAv?$AAs?$AAt?$AAp?$AA?4@
	call	DWORD PTR __imp__OutputDebugStringW@4

; 221  : 	_avstp_get_interface_version_ptr = &fallback_get_interface_version_ptr;

	mov	DWORD PTR [esi+4], OFFSET ?fallback_get_interface_version_ptr@AvstpWrapper@@CAHXZ ; AvstpWrapper::fallback_get_interface_version_ptr

; 178  : 	}
; 179  : }

	mov	eax, esi

; 222  : 	_avstp_create_dispatcher_ptr     = &fallback_create_dispatcher_ptr;

	mov	DWORD PTR [esi+8], OFFSET ?fallback_create_dispatcher_ptr@AvstpWrapper@@CAPAVTaskDispatcher@avstp@@XZ ; AvstpWrapper::fallback_create_dispatcher_ptr

; 223  : 	_avstp_destroy_dispatcher_ptr    = &fallback_destroy_dispatcher_ptr;

	mov	DWORD PTR [esi+12], OFFSET ?fallback_destroy_dispatcher_ptr@AvstpWrapper@@CAXPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::fallback_destroy_dispatcher_ptr

; 224  : 	_avstp_get_nbr_threads_ptr       = &fallback_get_nbr_threads_ptr;

	mov	DWORD PTR [esi+16], OFFSET ?fallback_get_nbr_threads_ptr@AvstpWrapper@@CAHXZ ; AvstpWrapper::fallback_get_nbr_threads_ptr

; 225  : 	_avstp_enqueue_task_ptr          = &fallback_enqueue_task_ptr;

	mov	DWORD PTR [esi+20], OFFSET ?fallback_enqueue_task_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z ; AvstpWrapper::fallback_enqueue_task_ptr

; 226  : 	_avstp_wait_completion_ptr       = &fallback_wait_completion_ptr;

	mov	DWORD PTR [esi+24], OFFSET ?fallback_wait_completion_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::fallback_wait_completion_ptr
	pop	esi

; 178  : 	}
; 179  : }

	ret	0
$LN2@AvstpWrapp:

; 167  : 			L"AvstpWrapper: cannot find avstp.dll."
; 168  : 			L"Usage restricted to single threading.\n"
; 169  : 		);
; 170  : //		throw std::runtime_error ("Cannot find avstp.dll.");
; 171  : 		assign_fallback ();
; 172  : 	}
; 173  : 
; 174  : 	else
; 175  : 	{
; 176  : 		// Now resolves the function names
; 177  : 		assign_normal ();

	mov	ecx, esi
	call	?assign_normal@AvstpWrapper@@AAEXXZ	; AvstpWrapper::assign_normal

; 178  : 	}
; 179  : }

	mov	eax, esi
	pop	esi
	ret	0
??0AvstpWrapper@@IAE@XZ ENDP				; AvstpWrapper::AvstpWrapper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?assign_normal@AvstpWrapper@@AAEXXZ
_TEXT	SEGMENT
?assign_normal@AvstpWrapper@@AAEXXZ PROC		; AvstpWrapper::assign_normal, COMDAT
; _this$ = ecx

; 208  : {

	push	esi
	push	edi

; 194  : 	fnc_ptr = reinterpret_cast <T> (

	mov	edi, DWORD PTR __imp__GetProcAddress@8

; 208  : {

	mov	esi, ecx

; 194  : 	fnc_ptr = reinterpret_cast <T> (

	push	OFFSET ??_C@_0BM@EFPJMKOP@avstp_get_interface_version?$AA@
	push	DWORD PTR [esi+28]
	call	edi
	mov	DWORD PTR [esi+4], eax

; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)

	test	eax, eax
	jne	SHORT $LN4@assign_nor
	mov	ecx, esi
	call	??$resolve_name@P6AHXZ@AvstpWrapper@@AAEXAAP6AHXZPBD@Z ; AvstpWrapper::resolve_name<int (__cdecl*)(void)>
$LN4@assign_nor:

; 194  : 	fnc_ptr = reinterpret_cast <T> (

	push	OFFSET ??_C@_0BI@BJPFPOLM@avstp_create_dispatcher?$AA@
	push	DWORD PTR [esi+28]
	call	edi
	mov	DWORD PTR [esi+8], eax

; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)

	test	eax, eax
	jne	SHORT $LN9@assign_nor
	mov	ecx, esi
	call	??$resolve_name@P6APAVTaskDispatcher@avstp@@XZ@AvstpWrapper@@AAEXAAP6APAVTaskDispatcher@avstp@@XZPBD@Z ; AvstpWrapper::resolve_name<avstp::TaskDispatcher * (__cdecl*)(void)>
$LN9@assign_nor:

; 194  : 	fnc_ptr = reinterpret_cast <T> (

	push	OFFSET ??_C@_0BJ@DFOAIFIJ@avstp_destroy_dispatcher?$AA@
	push	DWORD PTR [esi+28]
	call	edi
	mov	DWORD PTR [esi+12], eax

; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)

	test	eax, eax
	jne	SHORT $LN14@assign_nor
	mov	ecx, esi
	call	??$resolve_name@P6AXPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AXPAVTaskDispatcher@avstp@@@ZPBD@Z ; AvstpWrapper::resolve_name<void (__cdecl*)(avstp::TaskDispatcher *)>
$LN14@assign_nor:

; 194  : 	fnc_ptr = reinterpret_cast <T> (

	push	OFFSET ??_C@_0BG@NJHGAODH@avstp_get_nbr_threads?$AA@
	push	DWORD PTR [esi+28]
	call	edi
	mov	DWORD PTR [esi+16], eax

; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)

	test	eax, eax
	jne	SHORT $LN19@assign_nor
	mov	ecx, esi
	call	??$resolve_name@P6AHXZ@AvstpWrapper@@AAEXAAP6AHXZPBD@Z ; AvstpWrapper::resolve_name<int (__cdecl*)(void)>
$LN19@assign_nor:

; 194  : 	fnc_ptr = reinterpret_cast <T> (

	push	OFFSET ??_C@_0BD@GBCAOOFA@avstp_enqueue_task?$AA@
	push	DWORD PTR [esi+28]
	call	edi
	mov	DWORD PTR [esi+20], eax

; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)

	test	eax, eax
	jne	SHORT $LN24@assign_nor
	mov	ecx, esi
	call	??$resolve_name@P6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@ZPBD@Z ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *,void (__cdecl*)(avstp::TaskDispatcher *,void *),void *)>
$LN24@assign_nor:

; 194  : 	fnc_ptr = reinterpret_cast <T> (

	push	OFFSET ??_C@_0BG@KJJMKHOG@avstp_wait_completion?$AA@
	push	DWORD PTR [esi+28]
	call	edi
	mov	DWORD PTR [esi+24], eax
	pop	edi

; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)

	test	eax, eax
	jne	SHORT $LN29@assign_nor
	mov	ecx, esi
	pop	esi
	jmp	??$resolve_name@P6AHPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@@ZPBD@Z ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *)>
$LN29@assign_nor:
	pop	esi

; 209  : 	resolve_name (_avstp_get_interface_version_ptr, "avstp_get_interface_version");
; 210  : 	resolve_name (_avstp_create_dispatcher_ptr,     "avstp_create_dispatcher");
; 211  : 	resolve_name (_avstp_destroy_dispatcher_ptr,    "avstp_destroy_dispatcher");
; 212  : 	resolve_name (_avstp_get_nbr_threads_ptr,       "avstp_get_nbr_threads");
; 213  : 	resolve_name (_avstp_enqueue_task_ptr,          "avstp_enqueue_task");
; 214  : 	resolve_name (_avstp_wait_completion_ptr,       "avstp_wait_completion");
; 215  : }

	ret	0
?assign_normal@AvstpWrapper@@AAEXXZ ENDP		; AvstpWrapper::assign_normal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?assign_fallback@AvstpWrapper@@AAEXXZ
_TEXT	SEGMENT
?assign_fallback@AvstpWrapper@@AAEXXZ PROC		; AvstpWrapper::assign_fallback, COMDAT
; _this$ = ecx

; 221  : 	_avstp_get_interface_version_ptr = &fallback_get_interface_version_ptr;

	mov	DWORD PTR [ecx+4], OFFSET ?fallback_get_interface_version_ptr@AvstpWrapper@@CAHXZ ; AvstpWrapper::fallback_get_interface_version_ptr

; 222  : 	_avstp_create_dispatcher_ptr     = &fallback_create_dispatcher_ptr;

	mov	DWORD PTR [ecx+8], OFFSET ?fallback_create_dispatcher_ptr@AvstpWrapper@@CAPAVTaskDispatcher@avstp@@XZ ; AvstpWrapper::fallback_create_dispatcher_ptr

; 223  : 	_avstp_destroy_dispatcher_ptr    = &fallback_destroy_dispatcher_ptr;

	mov	DWORD PTR [ecx+12], OFFSET ?fallback_destroy_dispatcher_ptr@AvstpWrapper@@CAXPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::fallback_destroy_dispatcher_ptr

; 224  : 	_avstp_get_nbr_threads_ptr       = &fallback_get_nbr_threads_ptr;

	mov	DWORD PTR [ecx+16], OFFSET ?fallback_get_nbr_threads_ptr@AvstpWrapper@@CAHXZ ; AvstpWrapper::fallback_get_nbr_threads_ptr

; 225  : 	_avstp_enqueue_task_ptr          = &fallback_enqueue_task_ptr;

	mov	DWORD PTR [ecx+20], OFFSET ?fallback_enqueue_task_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z ; AvstpWrapper::fallback_enqueue_task_ptr

; 226  : 	_avstp_wait_completion_ptr       = &fallback_wait_completion_ptr;

	mov	DWORD PTR [ecx+24], OFFSET ?fallback_wait_completion_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@@Z ; AvstpWrapper::fallback_wait_completion_ptr

; 227  : }

	ret	0
?assign_fallback@AvstpWrapper@@AAEXXZ ENDP		; AvstpWrapper::assign_fallback
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?fallback_get_interface_version_ptr@AvstpWrapper@@CAHXZ
_TEXT	SEGMENT
?fallback_get_interface_version_ptr@AvstpWrapper@@CAHXZ PROC ; AvstpWrapper::fallback_get_interface_version_ptr, COMDAT

; 233  : 	return (avstp_INTERFACE_VERSION);

	mov	eax, 1

; 234  : }

	ret	0
?fallback_get_interface_version_ptr@AvstpWrapper@@CAHXZ ENDP ; AvstpWrapper::fallback_get_interface_version_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?fallback_create_dispatcher_ptr@AvstpWrapper@@CAPAVTaskDispatcher@avstp@@XZ
_TEXT	SEGMENT
?fallback_create_dispatcher_ptr@AvstpWrapper@@CAPAVTaskDispatcher@avstp@@XZ PROC ; AvstpWrapper::fallback_create_dispatcher_ptr, COMDAT

; 240  : 	return ((avstp_TaskDispatcher *) (&_dummy_dispatcher));

	mov	eax, OFFSET ?_dummy_dispatcher@AvstpWrapper@@0HA ; AvstpWrapper::_dummy_dispatcher

; 241  : }

	ret	0
?fallback_create_dispatcher_ptr@AvstpWrapper@@CAPAVTaskDispatcher@avstp@@XZ ENDP ; AvstpWrapper::fallback_create_dispatcher_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?fallback_destroy_dispatcher_ptr@AvstpWrapper@@CAXPAVTaskDispatcher@avstp@@@Z
_TEXT	SEGMENT
_td_ptr$ = 8						; size = 4
?fallback_destroy_dispatcher_ptr@AvstpWrapper@@CAXPAVTaskDispatcher@avstp@@@Z PROC ; AvstpWrapper::fallback_destroy_dispatcher_ptr, COMDAT

; 247  : 	assert (td_ptr == (avstp_TaskDispatcher *) (&_dummy_dispatcher));
; 248  : }

	ret	0
?fallback_destroy_dispatcher_ptr@AvstpWrapper@@CAXPAVTaskDispatcher@avstp@@@Z ENDP ; AvstpWrapper::fallback_destroy_dispatcher_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?fallback_get_nbr_threads_ptr@AvstpWrapper@@CAHXZ
_TEXT	SEGMENT
?fallback_get_nbr_threads_ptr@AvstpWrapper@@CAHXZ PROC	; AvstpWrapper::fallback_get_nbr_threads_ptr, COMDAT

; 254  : 	return (1);

	mov	eax, 1

; 255  : }

	ret	0
?fallback_get_nbr_threads_ptr@AvstpWrapper@@CAHXZ ENDP	; AvstpWrapper::fallback_get_nbr_threads_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?fallback_enqueue_task_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z
_TEXT	SEGMENT
_td_ptr$ = 8						; size = 4
_task_ptr$ = 12						; size = 4
_user_data_ptr$ = 16					; size = 4
?fallback_enqueue_task_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z PROC ; AvstpWrapper::fallback_enqueue_task_ptr, COMDAT

; 261  : 	int				ret_val = avstp_Err_OK;
; 262  : 
; 263  : 	if (   td_ptr != (avstp_TaskDispatcher *) (&_dummy_dispatcher)
; 264  : 	    || task_ptr == 0)

	mov	ecx, DWORD PTR _td_ptr$[esp-4]
	cmp	ecx, OFFSET ?_dummy_dispatcher@AvstpWrapper@@0HA ; AvstpWrapper::_dummy_dispatcher
	jne	SHORT $LN4@fallback_e
	mov	edx, DWORD PTR _task_ptr$[esp-4]
	test	edx, edx
	je	SHORT $LN4@fallback_e

; 265  : 	{
; 266  : 		ret_val = avstp_Err_INVALID_ARG;
; 267  : 	}
; 268  : 	else
; 269  : 	{
; 270  : 		task_ptr (td_ptr, user_data_ptr);

	push	DWORD PTR _user_data_ptr$[esp-4]
	push	ecx
	call	edx
	add	esp, 8

; 271  : 	}
; 272  : 
; 273  : 	return (ret_val);

	xor	eax, eax

; 274  : }

	ret	0
$LN4@fallback_e:

; 271  : 	}
; 272  : 
; 273  : 	return (ret_val);

	mov	eax, -998				; fffffc1aH

; 274  : }

	ret	0
?fallback_enqueue_task_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z ENDP ; AvstpWrapper::fallback_enqueue_task_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ?fallback_wait_completion_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@@Z
_TEXT	SEGMENT
_td_ptr$ = 8						; size = 4
?fallback_wait_completion_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@@Z PROC ; AvstpWrapper::fallback_wait_completion_ptr, COMDAT

; 279  : {

	xor	ecx, ecx
	mov	eax, -998				; fffffc1aH
	cmp	DWORD PTR _td_ptr$[esp-4], OFFSET ?_dummy_dispatcher@AvstpWrapper@@0HA ; AvstpWrapper::_dummy_dispatcher
	cmove	eax, ecx

; 280  : 	int				ret_val = avstp_Err_OK;
; 281  : 
; 282  : 	if (td_ptr != (avstp_TaskDispatcher *) (&_dummy_dispatcher))
; 283  : 	{
; 284  : 		ret_val = avstp_Err_INVALID_ARG;
; 285  : 	}
; 286  : 
; 287  : 	return (ret_val);
; 288  : }

	ret	0
?fallback_wait_completion_ptr@AvstpWrapper@@CAHPAVTaskDispatcher@avstp@@@Z ENDP ; AvstpWrapper::fallback_wait_completion_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??__E?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ
text$di	SEGMENT
??__E?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'AvstpWrapper::_singleton_aptr'', COMDAT

; 292  : std::auto_ptr <AvstpWrapper>	AvstpWrapper::_singleton_aptr;

	push	OFFSET ??__F?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'AvstpWrapper::_singleton_aptr''
	call	_atexit
	pop	ecx
	ret	0
??__E?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'AvstpWrapper::_singleton_aptr''
text$di	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??__F?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'AvstpWrapper::_singleton_aptr'', COMDAT

; 757  : 		delete _Myptr;

	mov	ecx, DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr
	test	ecx, ecx
	je	SHORT $LN5@singleton_
	mov	eax, DWORD PTR [ecx]
	push	1
	call	DWORD PTR [eax]
$LN5@singleton_:
	ret	0
??__F?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'AvstpWrapper::_singleton_aptr''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??D?$auto_ptr@VAvstpWrapper@@@std@@QBEAAVAvstpWrapper@@XZ
_TEXT	SEGMENT
??D?$auto_ptr@VAvstpWrapper@@@std@@QBEAAVAvstpWrapper@@XZ PROC ; std::auto_ptr<AvstpWrapper>::operator*, COMDAT
; _this$dead$ = ecx

; 762  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 763  : 		if (_Myptr == 0)
; 764  : 			_DEBUG_ERROR("auto_ptr not dereferencable");
; 765  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 766  : 
; 767  : 		return (*get());

	mov	eax, DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr

; 768  : 		}

	ret	0
??D?$auto_ptr@VAvstpWrapper@@@std@@QBEAAVAvstpWrapper@@XZ ENDP ; std::auto_ptr<AvstpWrapper>::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??1?$auto_ptr@VAvstpWrapper@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@VAvstpWrapper@@@std@@QAE@XZ PROC		; std::auto_ptr<AvstpWrapper>::~auto_ptr<AvstpWrapper>, COMDAT
; _this$ = ecx

; 757  : 		delete _Myptr;

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN3@auto_ptr
	mov	eax, DWORD PTR [ecx]
	push	1
	call	DWORD PTR [eax]
$LN3@auto_ptr:

; 758  : 		}

	ret	0
??1?$auto_ptr@VAvstpWrapper@@@std@@QAE@XZ ENDP		; std::auto_ptr<AvstpWrapper>::~auto_ptr<AvstpWrapper>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??4?$auto_ptr@VAvstpWrapper@@@std@@QAEAAV01@U?$auto_ptr_ref@VAvstpWrapper@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$auto_ptr@VAvstpWrapper@@@std@@QAEAAV01@U?$auto_ptr_ref@VAvstpWrapper@@@1@@Z PROC ; std::auto_ptr<AvstpWrapper>::operator=, COMDAT
; _this$dead$ = ecx

; 794  : 		if (_Ptr != _Myptr)

	mov	ecx, DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr
	push	esi

; 749  : 		_Ty *_Ptr = _Right._Ref;

	mov	esi, DWORD PTR __Right$[esp]

; 750  : 		_Right._Ref = 0;	// release old

	mov	DWORD PTR __Right$[esp], 0

; 794  : 		if (_Ptr != _Myptr)

	cmp	esi, ecx
	je	SHORT $LN9@operator

; 795  : 			delete _Myptr;

	test	ecx, ecx
	je	SHORT $LN9@operator
	mov	eax, DWORD PTR [ecx]
	push	1
	call	DWORD PTR [eax]
$LN9@operator:

; 796  : 		_Myptr = _Ptr;

	mov	DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A, esi ; AvstpWrapper::_singleton_aptr

; 751  : 		reset(_Ptr);	// set new
; 752  : 		return (*this);

	mov	eax, OFFSET ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr
	pop	esi

; 753  : 		}

	ret	4
??4?$auto_ptr@VAvstpWrapper@@@std@@QAEAAV01@U?$auto_ptr_ref@VAvstpWrapper@@@1@@Z ENDP ; std::auto_ptr<AvstpWrapper>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??0?$auto_ptr@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$auto_ptr@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z PROC ; std::auto_ptr<AvstpWrapper>::auto_ptr<AvstpWrapper>, COMDAT
; _this$ = ecx

; 697  : 		: _Myptr(_Ptr)

	mov	eax, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [ecx], eax

; 699  : 		}

	mov	eax, ecx
	ret	4
??0?$auto_ptr@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z ENDP ; std::auto_ptr<AvstpWrapper>::auto_ptr<AvstpWrapper>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ?reset@?$auto_ptr@VAvstpWrapper@@@std@@QAEXPAVAvstpWrapper@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?reset@?$auto_ptr@VAvstpWrapper@@@std@@QAEXPAVAvstpWrapper@@@Z PROC ; std::auto_ptr<AvstpWrapper>::reset, COMDAT
; _this$dead$ = ecx

; 794  : 		if (_Ptr != _Myptr)

	mov	ecx, DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr
	push	esi
	mov	esi, DWORD PTR __Ptr$[esp]
	cmp	esi, ecx
	je	SHORT $LN7@reset

; 795  : 			delete _Myptr;

	test	ecx, ecx
	je	SHORT $LN7@reset
	mov	eax, DWORD PTR [ecx]
	push	1
	call	DWORD PTR [eax]
$LN7@reset:

; 796  : 		_Myptr = _Ptr;

	mov	DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A, esi ; AvstpWrapper::_singleton_aptr
	pop	esi

; 797  : 		}

	ret	4
?reset@?$auto_ptr@VAvstpWrapper@@@std@@QAEXPAVAvstpWrapper@@@Z ENDP ; std::auto_ptr<AvstpWrapper>::reset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ?get@?$auto_ptr@VAvstpWrapper@@@std@@QBEPAVAvstpWrapper@@XZ
_TEXT	SEGMENT
?get@?$auto_ptr@VAvstpWrapper@@@std@@QBEPAVAvstpWrapper@@XZ PROC ; std::auto_ptr<AvstpWrapper>::get, COMDAT
; _this$dead$ = ecx

; 782  : 		return (_Myptr);

	mov	eax, DWORD PTR ?_singleton_aptr@AvstpWrapper@@0V?$auto_ptr@VAvstpWrapper@@@std@@A ; AvstpWrapper::_singleton_aptr

; 783  : 		}

	ret	0
?get@?$auto_ptr@VAvstpWrapper@@@std@@QBEPAVAvstpWrapper@@XZ ENDP ; std::auto_ptr<AvstpWrapper>::get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$?BVAvstpWrapper@@@?$auto_ptr@VAvstpWrapper@@@std@@QAE?AU?$auto_ptr_ref@VAvstpWrapper@@@1@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??$?BVAvstpWrapper@@@?$auto_ptr@VAvstpWrapper@@@std@@QAE?AU?$auto_ptr_ref@VAvstpWrapper@@@1@XZ PROC ; std::auto_ptr<AvstpWrapper>::operator<AvstpWrapper> std::auto_ptr_ref<AvstpWrapper>, COMDAT
; _this$ = ecx

; 682  : 		: _Ref(_Right)

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	edx, DWORD PTR [ecx]

; 722  : 		_Other *_Cvtptr = _Myptr;	// test implicit conversion
; 723  : 		auto_ptr_ref<_Other> _Ans(_Cvtptr);
; 724  : 		_Myptr = 0;	// pass ownership to auto_ptr_ref

	mov	DWORD PTR [ecx], 0

; 682  : 		: _Ref(_Right)

	mov	DWORD PTR [eax], edx

; 725  : 		return (_Ans);
; 726  : 		}

	ret	4
??$?BVAvstpWrapper@@@?$auto_ptr@VAvstpWrapper@@@std@@QAE?AU?$auto_ptr_ref@VAvstpWrapper@@@1@XZ ENDP ; std::auto_ptr<AvstpWrapper>::operator<AvstpWrapper> std::auto_ptr_ref<AvstpWrapper>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??$resolve_name@P6AHXZ@AvstpWrapper@@AAEXAAP6AHXZPBD@Z
_TEXT	SEGMENT
__InitData$1 = -20					; size = 8
$T2 = -12						; size = 12
??$resolve_name@P6AHXZ@AvstpWrapper@@AAEXAAP6AHXZPBD@Z PROC ; AvstpWrapper::resolve_name<int (__cdecl*)(void)>, COMDAT
; _this$ = ecx

; 189  : {

	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, ecx

; 190  : 	assert (&fnc_ptr != 0);
; 191  : 	assert (name_0 != 0);
; 192  : 	assert (_dll_hnd != 0);
; 193  : 
; 194  : 	fnc_ptr = reinterpret_cast <T> (
; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)
; 198  : 	{
; 199  : 		::FreeLibrary (reinterpret_cast < ::HMODULE> (_dll_hnd));

	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__FreeLibrary@4
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	lea	eax, DWORD PTR $T2[esp+28]
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 200  : 		_dll_hnd = 0;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	lea	eax, DWORD PTR __InitData$1[esp+28]
	mov	DWORD PTR $T2[esp+28], OFFSET ??_7exception@std@@6B@
	xorps	xmm0, xmm0

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[esp+28], OFFSET ??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	movq	QWORD PTR $T2[esp+36], xmm0
	mov	BYTE PTR __InitData$1[esp+36], 1
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

	mov	DWORD PTR $T2[esp+24], OFFSET ??_7runtime_error@std@@6B@
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 201  : 		throw std::runtime_error ("Function missing in avstp.dll.");

	lea	eax, DWORD PTR $T2[esp+24]
	push	OFFSET __TI2?AVruntime_error@std@@
	push	eax
	call	__CxxThrowException@8
	pop	esi
$LN13@resolve_na:
$LN12@resolve_na:
??$resolve_name@P6AHXZ@AvstpWrapper@@AAEXAAP6AHXZPBD@Z ENDP ; AvstpWrapper::resolve_name<int (__cdecl*)(void)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??$resolve_name@P6APAVTaskDispatcher@avstp@@XZ@AvstpWrapper@@AAEXAAP6APAVTaskDispatcher@avstp@@XZPBD@Z
_TEXT	SEGMENT
__InitData$1 = -20					; size = 8
$T2 = -12						; size = 12
??$resolve_name@P6APAVTaskDispatcher@avstp@@XZ@AvstpWrapper@@AAEXAAP6APAVTaskDispatcher@avstp@@XZPBD@Z PROC ; AvstpWrapper::resolve_name<avstp::TaskDispatcher * (__cdecl*)(void)>, COMDAT
; _this$ = ecx

; 189  : {

	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, ecx

; 190  : 	assert (&fnc_ptr != 0);
; 191  : 	assert (name_0 != 0);
; 192  : 	assert (_dll_hnd != 0);
; 193  : 
; 194  : 	fnc_ptr = reinterpret_cast <T> (
; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)
; 198  : 	{
; 199  : 		::FreeLibrary (reinterpret_cast < ::HMODULE> (_dll_hnd));

	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__FreeLibrary@4
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	lea	eax, DWORD PTR $T2[esp+28]
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 200  : 		_dll_hnd = 0;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	lea	eax, DWORD PTR __InitData$1[esp+28]
	mov	DWORD PTR $T2[esp+28], OFFSET ??_7exception@std@@6B@
	xorps	xmm0, xmm0

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[esp+28], OFFSET ??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	movq	QWORD PTR $T2[esp+36], xmm0
	mov	BYTE PTR __InitData$1[esp+36], 1
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

	mov	DWORD PTR $T2[esp+24], OFFSET ??_7runtime_error@std@@6B@
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 201  : 		throw std::runtime_error ("Function missing in avstp.dll.");

	lea	eax, DWORD PTR $T2[esp+24]
	push	OFFSET __TI2?AVruntime_error@std@@
	push	eax
	call	__CxxThrowException@8
	pop	esi
$LN13@resolve_na:
$LN12@resolve_na:
??$resolve_name@P6APAVTaskDispatcher@avstp@@XZ@AvstpWrapper@@AAEXAAP6APAVTaskDispatcher@avstp@@XZPBD@Z ENDP ; AvstpWrapper::resolve_name<avstp::TaskDispatcher * (__cdecl*)(void)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??$resolve_name@P6AXPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AXPAVTaskDispatcher@avstp@@@ZPBD@Z
_TEXT	SEGMENT
__InitData$1 = -20					; size = 8
$T2 = -12						; size = 12
??$resolve_name@P6AXPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AXPAVTaskDispatcher@avstp@@@ZPBD@Z PROC ; AvstpWrapper::resolve_name<void (__cdecl*)(avstp::TaskDispatcher *)>, COMDAT
; _this$ = ecx

; 189  : {

	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, ecx

; 190  : 	assert (&fnc_ptr != 0);
; 191  : 	assert (name_0 != 0);
; 192  : 	assert (_dll_hnd != 0);
; 193  : 
; 194  : 	fnc_ptr = reinterpret_cast <T> (
; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)
; 198  : 	{
; 199  : 		::FreeLibrary (reinterpret_cast < ::HMODULE> (_dll_hnd));

	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__FreeLibrary@4
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	lea	eax, DWORD PTR $T2[esp+28]
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 200  : 		_dll_hnd = 0;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	lea	eax, DWORD PTR __InitData$1[esp+28]
	mov	DWORD PTR $T2[esp+28], OFFSET ??_7exception@std@@6B@
	xorps	xmm0, xmm0

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[esp+28], OFFSET ??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	movq	QWORD PTR $T2[esp+36], xmm0
	mov	BYTE PTR __InitData$1[esp+36], 1
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

	mov	DWORD PTR $T2[esp+24], OFFSET ??_7runtime_error@std@@6B@
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 201  : 		throw std::runtime_error ("Function missing in avstp.dll.");

	lea	eax, DWORD PTR $T2[esp+24]
	push	OFFSET __TI2?AVruntime_error@std@@
	push	eax
	call	__CxxThrowException@8
	pop	esi
$LN13@resolve_na:
$LN12@resolve_na:
??$resolve_name@P6AXPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AXPAVTaskDispatcher@avstp@@@ZPBD@Z ENDP ; AvstpWrapper::resolve_name<void (__cdecl*)(avstp::TaskDispatcher *)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??$resolve_name@P6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@ZPBD@Z
_TEXT	SEGMENT
__InitData$1 = -20					; size = 8
$T2 = -12						; size = 12
??$resolve_name@P6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@ZPBD@Z PROC ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *,void (__cdecl*)(avstp::TaskDispatcher *,void *),void *)>, COMDAT
; _this$ = ecx

; 189  : {

	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, ecx

; 190  : 	assert (&fnc_ptr != 0);
; 191  : 	assert (name_0 != 0);
; 192  : 	assert (_dll_hnd != 0);
; 193  : 
; 194  : 	fnc_ptr = reinterpret_cast <T> (
; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)
; 198  : 	{
; 199  : 		::FreeLibrary (reinterpret_cast < ::HMODULE> (_dll_hnd));

	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__FreeLibrary@4
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	lea	eax, DWORD PTR $T2[esp+28]
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 200  : 		_dll_hnd = 0;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	lea	eax, DWORD PTR __InitData$1[esp+28]
	mov	DWORD PTR $T2[esp+28], OFFSET ??_7exception@std@@6B@
	xorps	xmm0, xmm0

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[esp+28], OFFSET ??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	movq	QWORD PTR $T2[esp+36], xmm0
	mov	BYTE PTR __InitData$1[esp+36], 1
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

	mov	DWORD PTR $T2[esp+24], OFFSET ??_7runtime_error@std@@6B@
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 201  : 		throw std::runtime_error ("Function missing in avstp.dll.");

	lea	eax, DWORD PTR $T2[esp+24]
	push	OFFSET __TI2?AVruntime_error@std@@
	push	eax
	call	__CxxThrowException@8
	pop	esi
$LN13@resolve_na:
$LN12@resolve_na:
??$resolve_name@P6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@P6AX0PAX@Z1@ZPBD@Z ENDP ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *,void (__cdecl*)(avstp::TaskDispatcher *,void *),void *)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\github\mvtools\sources\avstpwrapper.cpp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\github\mvtools\sources\avstpwrapper.cpp
;	COMDAT ??$resolve_name@P6AHPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@@ZPBD@Z
_TEXT	SEGMENT
__InitData$1 = -20					; size = 8
$T2 = -12						; size = 12
??$resolve_name@P6AHPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@@ZPBD@Z PROC ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *)>, COMDAT
; _this$ = ecx

; 189  : {

	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, ecx

; 190  : 	assert (&fnc_ptr != 0);
; 191  : 	assert (name_0 != 0);
; 192  : 	assert (_dll_hnd != 0);
; 193  : 
; 194  : 	fnc_ptr = reinterpret_cast <T> (
; 195  : 		::GetProcAddress (reinterpret_cast < ::HMODULE> (_dll_hnd), name_0)
; 196  : 	);
; 197  : 	if (fnc_ptr == 0)
; 198  : 	{
; 199  : 		::FreeLibrary (reinterpret_cast < ::HMODULE> (_dll_hnd));

	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__FreeLibrary@4
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	lea	eax, DWORD PTR $T2[esp+28]
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 200  : 		_dll_hnd = 0;

	mov	DWORD PTR [esi+28], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	lea	eax, DWORD PTR __InitData$1[esp+28]
	mov	DWORD PTR $T2[esp+28], OFFSET ??_7exception@std@@6B@
	xorps	xmm0, xmm0

; 54   :         __std_exception_data _InitData = { _Message, true };

	mov	DWORD PTR __InitData$1[esp+28], OFFSET ??_C@_0BP@MENEJNMJ@Function?5missing?5in?5avstp?4dll?4?$AA@

; 55   :         __std_exception_copy(&_InitData, &_Data);

	push	eax
	movq	QWORD PTR $T2[esp+36], xmm0
	mov	BYTE PTR __InitData$1[esp+36], 1
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

	mov	DWORD PTR $T2[esp+24], OFFSET ??_7runtime_error@std@@6B@
; File c:\github\mvtools\sources\avstpwrapper.cpp

; 201  : 		throw std::runtime_error ("Function missing in avstp.dll.");

	lea	eax, DWORD PTR $T2[esp+24]
	push	OFFSET __TI2?AVruntime_error@std@@
	push	eax
	call	__CxxThrowException@8
	pop	esi
$LN13@resolve_na:
$LN12@resolve_na:
??$resolve_name@P6AHPAVTaskDispatcher@avstp@@@Z@AvstpWrapper@@AAEXAAP6AHPAVTaskDispatcher@avstp@@@ZPBD@Z ENDP ; AvstpWrapper::resolve_name<int (__cdecl*)(avstp::TaskDispatcher *)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0

; 65   :         : _Data()

	lea	eax, DWORD PTR [esi+4]

; 66   :     {
; 67   :         __std_exception_copy(&_Other._Data, &_Data);

	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR ___that$[esp+4]
	add	eax, 4
	push	eax
	call	DWORD PTR __imp____std_exception_copy
	add	esp, 8
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??0?$auto_ptr_ref@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$auto_ptr_ref@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z PROC ; std::auto_ptr_ref<AvstpWrapper>::auto_ptr_ref<AvstpWrapper>, COMDAT
; _this$ = ecx

; 682  : 		: _Ref(_Right)

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	DWORD PTR [ecx], eax

; 684  : 		}

	mov	eax, ecx
	ret	4
??0?$auto_ptr_ref@VAvstpWrapper@@@std@@QAE@PAVAvstpWrapper@@@Z ENDP ; std::auto_ptr_ref<AvstpWrapper>::auto_ptr_ref<AvstpWrapper>
_TEXT	ENDS
END
