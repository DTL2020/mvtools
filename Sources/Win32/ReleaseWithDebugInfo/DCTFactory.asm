; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	c:\github\mvtools\sources\dctfactory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BA@IIEDBPLM@libfftw3f?93?4dll?$AA@	; `string'
PUBLIC	??_C@_09COPOPIIC@fftw3?4dll?$AA@		; `string'
PUBLIC	??_C@_0DF@KCHDFELL@MAnalyse?3?5Can?5not?5load?5libfftw3f@ ; `string'
PUBLIC	??_R0?AVDCTFactory@@@8				; DCTFactory `RTTI Type Descriptor'
PUBLIC	??_R3DCTFactory@@8				; DCTFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7DCTFactory@@6B@				; DCTFactory::`vftable'
PUBLIC	??_R1A@?0A@EA@DCTFactory@@8			; DCTFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$ObjFactoryInterface@VDCTClass@@@conc@@8	; conc::ObjFactoryInterface<DCTClass>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4DCTFactory@@6B@				; DCTFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ObjFactoryInterface@VDCTClass@@@conc@@@8 ; conc::ObjFactoryInterface<DCTClass> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$ObjFactoryInterface@VDCTClass@@@conc@@8 ; conc::ObjFactoryInterface<DCTClass>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@	; conc::ObjFactoryInterface<DCTClass>::`vftable'
PUBLIC	??_R2?$ObjFactoryInterface@VDCTClass@@@conc@@8	; conc::ObjFactoryInterface<DCTClass>::`RTTI Base Class Array'
PUBLIC	??_R2DCTFactory@@8				; DCTFactory::`RTTI Base Class Array'
PUBLIC	??_R4?$ObjFactoryInterface@VDCTClass@@@conc@@6B@ ; conc::ObjFactoryInterface<DCTClass>::`RTTI Complete Object Locator'
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	__imp___purecall:PROC
EXTRN	__purecall:PROC
;	COMDAT ??_R4?$ObjFactoryInterface@VDCTClass@@@conc@@6B@
rdata$r	SEGMENT
??_R4?$ObjFactoryInterface@VDCTClass@@@conc@@6B@ DD 00H	; conc::ObjFactoryInterface<DCTClass>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ObjFactoryInterface@VDCTClass@@@conc@@@8
	DD	FLAT:??_R3?$ObjFactoryInterface@VDCTClass@@@conc@@8
rdata$r	ENDS
;	COMDAT ??_R2DCTFactory@@8
rdata$r	SEGMENT
??_R2DCTFactory@@8 DD FLAT:??_R1A@?0A@EA@DCTFactory@@8	; DCTFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ObjFactoryInterface@VDCTClass@@@conc@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjFactoryInterface@VDCTClass@@@conc@@8
rdata$r	SEGMENT
??_R2?$ObjFactoryInterface@VDCTClass@@@conc@@8 DD FLAT:??_R1A@?0A@EA@?$ObjFactoryInterface@VDCTClass@@@conc@@8 ; conc::ObjFactoryInterface<DCTClass>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@
CONST	SEGMENT
??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@ DD FLAT:??_R4?$ObjFactoryInterface@VDCTClass@@@conc@@6B@ ; conc::ObjFactoryInterface<DCTClass>::`vftable'
	DD	FLAT:??_E?$ObjFactoryInterface@VDCTClass@@@conc@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjFactoryInterface@VDCTClass@@@conc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjFactoryInterface@VDCTClass@@@conc@@8 DD FLAT:??_R0?AV?$ObjFactoryInterface@VDCTClass@@@conc@@@8 ; conc::ObjFactoryInterface<DCTClass>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjFactoryInterface@VDCTClass@@@conc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjFactoryInterface@VDCTClass@@@conc@@@8
data$r	SEGMENT
??_R0?AV?$ObjFactoryInterface@VDCTClass@@@conc@@@8 DD FLAT:??_7type_info@@6B@ ; conc::ObjFactoryInterface<DCTClass> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjFactoryInterface@VDCTClass@@@conc@@', 00H
data$r	ENDS
;	COMDAT ??_R4DCTFactory@@6B@
rdata$r	SEGMENT
??_R4DCTFactory@@6B@ DD 00H				; DCTFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDCTFactory@@@8
	DD	FLAT:??_R3DCTFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ObjFactoryInterface@VDCTClass@@@conc@@8
rdata$r	SEGMENT
??_R3?$ObjFactoryInterface@VDCTClass@@@conc@@8 DD 00H	; conc::ObjFactoryInterface<DCTClass>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjFactoryInterface@VDCTClass@@@conc@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DCTFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DCTFactory@@8 DD FLAT:??_R0?AVDCTFactory@@@8 ; DCTFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DCTFactory@@8
rdata$r	ENDS
;	COMDAT ??_7DCTFactory@@6B@
CONST	SEGMENT
??_7DCTFactory@@6B@ DD FLAT:??_R4DCTFactory@@6B@	; DCTFactory::`vftable'
	DD	FLAT:??_EDCTFactory@@UAEPAXI@Z
	DD	FLAT:?do_create@DCTFactory@@MAEPAVDCTClass@@XZ
CONST	ENDS
;	COMDAT ??_R3DCTFactory@@8
rdata$r	SEGMENT
??_R3DCTFactory@@8 DD 00H				; DCTFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DCTFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDCTFactory@@@8
data$r	SEGMENT
??_R0?AVDCTFactory@@@8 DD FLAT:??_7type_info@@6B@	; DCTFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDCTFactory@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0DF@KCHDFELL@MAnalyse?3?5Can?5not?5load?5libfftw3f@
CONST	SEGMENT
??_C@_0DF@KCHDFELL@MAnalyse?3?5Can?5not?5load?5libfftw3f@ DB 'MAnalyse: C'
	DB	'an not load libfftw3f-3.dll or fftw3.DLL!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09COPOPIIC@fftw3?4dll?$AA@
CONST	SEGMENT
??_C@_09COPOPIIC@fftw3?4dll?$AA@ DB 'fftw3.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IIEDBPLM@libfftw3f?93?4dll?$AA@
CONST	SEGMENT
??_C@_0BA@IIEDBPLM@libfftw3f?93?4dll?$AA@ DB 'libfftw3f-3.dll', 00H ; `string'
PUBLIC	??1?$ObjFactoryInterface@VDCTClass@@@conc@@UAE@XZ ; conc::ObjFactoryInterface<DCTClass>::~ObjFactoryInterface<DCTClass>
PUBLIC	?do_create@DCTFactory@@MAEPAVDCTClass@@XZ	; DCTFactory::do_create
PUBLIC	?use_fftw@DCTFactory@@QBE_NXZ			; DCTFactory::use_fftw
PUBLIC	?get_dctmode@DCTFactory@@QBEHXZ			; DCTFactory::get_dctmode
PUBLIC	??1DCTFactory@@UAE@XZ				; DCTFactory::~DCTFactory
PUBLIC	??_G?$ObjFactoryInterface@VDCTClass@@@conc@@UAEPAXI@Z ; conc::ObjFactoryInterface<DCTClass>::`scalar deleting destructor'
PUBLIC	??0?$ObjFactoryInterface@VDCTClass@@@conc@@QAE@XZ ; conc::ObjFactoryInterface<DCTClass>::ObjFactoryInterface<DCTClass>
PUBLIC	??_GDCTFactory@@UAEPAXI@Z			; DCTFactory::`scalar deleting destructor'
PUBLIC	??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z ; DCTFactory::DCTFactory
EXTRN	??_E?$ObjFactoryInterface@VDCTClass@@@conc@@UAEPAXI@Z:PROC ; conc::ObjFactoryInterface<DCTClass>::`vector deleting destructor'
EXTRN	??_EDCTFactory@@UAEPAXI@Z:PROC			; DCTFactory::`vector deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ$0
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\dctfactory.cpp
;	COMDAT ??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dctmode$ = 8						; size = 4
_isse$ = 12						; size = 1
_blksizex$ = 16						; size = 4
_blksizey$ = 20						; size = 4
_pixelsize$ = 24					; size = 4
_bits_per_pixel$ = 28					; size = 4
_env$ = 32						; size = 4
??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z PROC ; DCTFactory::DCTFactory, COMDAT
; _this$ = ecx

; 54   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[ebp], esi

; 46   : ,	_dctmode (dctmode)

	mov	eax, DWORD PTR _dctmode$[ebp]

; 48   : ,	_blksizex (blksizex)

	mov	edx, DWORD PTR _blksizex$[ebp]

; 49   : ,	_blksizey (blksizey)

	mov	ecx, DWORD PTR _blksizey$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR [esi+12], eax

; 47   : ,	_isse (isse)

	mov	al, BYTE PTR _isse$[ebp]
	mov	BYTE PTR [esi+24], al

; 50   : ,	_fftw_flag (! (_isse && _blksizex == 8 && _blksizey == 8 && pixelsize==1)) // only 8x8 is implemented as an int FFT

	test	al, al
	mov	eax, DWORD PTR _pixelsize$[ebp]
	mov	DWORD PTR [esi], OFFSET ??_7DCTFactory@@6B@
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+16], edx
	mov	DWORD PTR [esi+20], ecx
	je	SHORT $LN6@DCTFactory
	cmp	edx, 8
	jne	SHORT $LN6@DCTFactory
	cmp	ecx, edx
	jne	SHORT $LN6@DCTFactory
	cmp	eax, 1
	jne	SHORT $LN6@DCTFactory
	xor	cl, cl
	jmp	SHORT $LN7@DCTFactory
$LN6@DCTFactory:
	mov	cl, 1
$LN7@DCTFactory:

; 55   : 	assert (dctmode != 0);
; 56   : 
; 57   : 	if (_fftw_flag)

	mov	edi, DWORD PTR _env$[ebp]
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR _bits_per_pixel$[ebp]
	mov	BYTE PTR [esi+25], cl
	mov	DWORD PTR [esi+32], eax
	test	cl, cl
	je	SHORT $LN4@DCTFactory

; 58   : 	{
; 59   :     _fftw_hnd = ::LoadLibrary("libfftw3f-3.dll"); // delayed loading, original name

	push	OFFSET ??_C@_0BA@IIEDBPLM@libfftw3f?93?4dll?$AA@
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	DWORD PTR [esi+8], eax

; 60   :     if (_fftw_hnd == NULL)

	test	eax, eax
	jne	SHORT $LN3@DCTFactory

; 61   :       _fftw_hnd = ::LoadLibrary ("fftw3.dll"); // delayed loading

	push	OFFSET ??_C@_09COPOPIIC@fftw3?4dll?$AA@
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	DWORD PTR [esi+8], eax
$LN3@DCTFactory:

; 62   :     if (_fftw_hnd == NULL)

	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN4@DCTFactory

; 63   : 		{
; 64   : 			env.ThrowError ("MAnalyse: Can not load libfftw3f-3.dll or fftw3.DLL!");

	mov	eax, DWORD PTR [edi]
	push	OFFSET ??_C@_0DF@KCHDFELL@MAnalyse?3?5Can?5not?5load?5libfftw3f@
	push	edi
	call	DWORD PTR [eax+20]
	add	esp, 8
$LN4@DCTFactory:

; 65   : 		}
; 66   : 	}
; 67   :   cpuflags = env.GetCPUFlags();

	mov	eax, DWORD PTR [edi]
	push	edi
	call	DWORD PTR [eax+4]

; 68   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, esi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$ObjFactoryInterface@VDCTClass@@@conc@@UAE@XZ ; conc::ObjFactoryInterface<DCTClass>::~ObjFactoryInterface<DCTClass>
__ehhandler$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DCTFactory@@QAE@H_NHHHHAAVIScriptEnvironment@@@Z ENDP ; DCTFactory::DCTFactory
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\dctfactory.cpp
; File c:\github\mvtools\sources\conc\objfactoryinterface.h
;	COMDAT ??_GDCTFactory@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GDCTFactory@@UAEPAXI@Z PROC				; DCTFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
; File c:\github\mvtools\sources\dctfactory.cpp

; 74   : 	if (_fftw_hnd != 0)

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], OFFSET ??_7DCTFactory@@6B@
	test	eax, eax
	je	SHORT $LN5@scalar

; 75   : 	{
; 76   : 		::FreeLibrary (_fftw_hnd);

	push	eax
	call	DWORD PTR __imp__FreeLibrary@4

; 77   : 		_fftw_hnd = 0;

	mov	DWORD PTR [esi+8], 0
$LN5@scalar:
	test	BYTE PTR ___flags$[esp], 1
; File c:\github\mvtools\sources\conc\objfactoryinterface.h

; 47   : 	virtual			~ObjFactoryInterface () {}

	mov	DWORD PTR [esi], OFFSET ??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@
	je	SHORT $LN11@scalar
	push	36					; 00000024H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN11@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GDCTFactory@@UAEPAXI@Z ENDP				; DCTFactory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ObjFactoryInterface@VDCTClass@@@conc@@QAE@XZ
_TEXT	SEGMENT
??0?$ObjFactoryInterface@VDCTClass@@@conc@@QAE@XZ PROC	; conc::ObjFactoryInterface<DCTClass>::ObjFactoryInterface<DCTClass>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@
	mov	eax, ecx
	ret	0
??0?$ObjFactoryInterface@VDCTClass@@@conc@@QAE@XZ ENDP	; conc::ObjFactoryInterface<DCTClass>::ObjFactoryInterface<DCTClass>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\objfactoryinterface.h
;	COMDAT ??_G?$ObjFactoryInterface@VDCTClass@@@conc@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$ObjFactoryInterface@VDCTClass@@@conc@@UAEPAXI@Z PROC ; conc::ObjFactoryInterface<DCTClass>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx

; 47   : 	virtual			~ObjFactoryInterface () {}

	mov	DWORD PTR [esi], OFFSET ??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@
	je	SHORT $LN7@scalar
	push	4
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN7@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$ObjFactoryInterface@VDCTClass@@@conc@@UAEPAXI@Z ENDP ; conc::ObjFactoryInterface<DCTClass>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\dctfactory.cpp
; File c:\github\mvtools\sources\conc\objfactoryinterface.h
; File c:\github\mvtools\sources\dctfactory.cpp
;	COMDAT ??1DCTFactory@@UAE@XZ
_TEXT	SEGMENT
??1DCTFactory@@UAE@XZ PROC				; DCTFactory::~DCTFactory, COMDAT
; _this$ = ecx

; 73   : {

	push	esi
	mov	esi, ecx

; 74   : 	if (_fftw_hnd != 0)

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], OFFSET ??_7DCTFactory@@6B@
	test	eax, eax
	je	SHORT $LN7@DCTFactory

; 75   : 	{
; 76   : 		::FreeLibrary (_fftw_hnd);

	push	eax
	call	DWORD PTR __imp__FreeLibrary@4

; 77   : 		_fftw_hnd = 0;

	mov	DWORD PTR [esi+8], 0
$LN7@DCTFactory:
; File c:\github\mvtools\sources\conc\objfactoryinterface.h

; 47   : 	virtual			~ObjFactoryInterface () {}

	mov	DWORD PTR [esi], OFFSET ??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@
	pop	esi
; File c:\github\mvtools\sources\dctfactory.cpp

; 79   : }

	ret	0
??1DCTFactory@@UAE@XZ ENDP				; DCTFactory::~DCTFactory
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\dctfactory.cpp
;	COMDAT ?get_dctmode@DCTFactory@@QBEHXZ
_TEXT	SEGMENT
?get_dctmode@DCTFactory@@QBEHXZ PROC			; DCTFactory::get_dctmode, COMDAT
; _this$ = ecx

; 85   : 	return (_dctmode);

	mov	eax, DWORD PTR [ecx+12]

; 86   : }

	ret	0
?get_dctmode@DCTFactory@@QBEHXZ ENDP			; DCTFactory::get_dctmode
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\dctfactory.cpp
;	COMDAT ?use_fftw@DCTFactory@@QBE_NXZ
_TEXT	SEGMENT
?use_fftw@DCTFactory@@QBE_NXZ PROC			; DCTFactory::use_fftw, COMDAT
; _this$ = ecx

; 92   : 	return (_fftw_flag);

	mov	al, BYTE PTR [ecx+25]

; 93   : }

	ret	0
?use_fftw@DCTFactory@@QBE_NXZ ENDP			; DCTFactory::use_fftw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\dctfactory.cpp
; File c:\github\mvtools\sources\dctint.cpp
; File c:\github\mvtools\sources\dctfactory.cpp
; File c:\github\mvtools\sources\dctint.cpp
; File c:\github\mvtools\sources\dctfactory.cpp
;	COMDAT ?do_create@DCTFactory@@MAEPAVDCTClass@@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?do_create@DCTFactory@@MAEPAVDCTClass@@XZ PROC		; DCTFactory::do_create, COMDAT
; _this$ = ecx

; 102  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	mov	ebx, ecx

; 103  : 	if (_fftw_flag)

	cmp	BYTE PTR [ebx+25], 0
	je	SHORT $LN2@do_create

; 104  : 	{
; 105  : 		return (new DCTFFTW (_blksizex, _blksizey, _fftw_hnd, _dctmode, _pixelsize, _bits_per_pixel, cpuflags));

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, eax
	push	DWORD PTR [ebx+4]
	push	DWORD PTR [ebx+32]
	push	DWORD PTR [ebx+28]
	push	DWORD PTR [ebx+12]
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+20]
	push	DWORD PTR [ebx+16]
	call	??0DCTFFTW@@QAE@HHPAUHINSTANCE__@@HHHH@Z ; DCTFFTW::DCTFFTW
	pop	ebx

; 108  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@do_create:
	push	esi
	push	edi

; 107  : 	return (new DCTINT (_blksizex, _blksizey, _dctmode));

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	mov	DWORD PTR $T2[ebp], edi
	mov	esi, DWORD PTR [ebx+12]
	mov	edx, DWORD PTR [ebx+20]
	mov	ecx, DWORD PTR [ebx+16]
; File c:\github\mvtools\sources\dctint.cpp

; 81   : 		pWorkArea = (short * const) _aligned_malloc(8*8*2, 128);

	push	128					; 00000080H
	push	128					; 00000080H
	mov	DWORD PTR [edi], OFFSET ??_7DCTINT@@6B@
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], edx
	mov	DWORD PTR [edi+12], esi
	call	DWORD PTR __imp___aligned_malloc
; File c:\github\mvtools\sources\dctfactory.cpp

; 108  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
; File c:\github\mvtools\sources\dctint.cpp

; 81   : 		pWorkArea = (short * const) _aligned_malloc(8*8*2, 128);

	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+24], eax
; File c:\github\mvtools\sources\dctfactory.cpp

; 107  : 	return (new DCTINT (_blksizex, _blksizey, _dctmode));

	mov	eax, edi

; 108  : }

	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ$0:
	push	76					; 0000004cH
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?do_create@DCTFactory@@MAEPAVDCTClass@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_create@DCTFactory@@MAEPAVDCTClass@@XZ ENDP		; DCTFactory::do_create
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\conc\objfactoryinterface.h
;	COMDAT ??1?$ObjFactoryInterface@VDCTClass@@@conc@@UAE@XZ
_TEXT	SEGMENT
??1?$ObjFactoryInterface@VDCTClass@@@conc@@UAE@XZ PROC	; conc::ObjFactoryInterface<DCTClass>::~ObjFactoryInterface<DCTClass>, COMDAT
; _this$ = ecx

; 47   : 	virtual			~ObjFactoryInterface () {}

	mov	DWORD PTR [ecx], OFFSET ??_7?$ObjFactoryInterface@VDCTClass@@@conc@@6B@
	ret	0
??1?$ObjFactoryInterface@VDCTClass@@@conc@@UAE@XZ ENDP	; conc::ObjFactoryInterface<DCTClass>::~ObjFactoryInterface<DCTClass>
_TEXT	ENDS
END
