; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	c:\github\mvtools\sources\mvfinest.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R3MVFinest@@8				; MVFinest::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7MVFinest@@6B@				; MVFinest::`vftable'
PUBLIC	??_R0?AVMVFinest@@@8				; MVFinest `RTTI Type Descriptor'
PUBLIC	??_R2MVFinest@@8				; MVFinest::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MVFinest@@8			; MVFinest::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4MVFinest@@6B@				; MVFinest::`RTTI Complete Object Locator'
;	COMDAT ??_R4MVFinest@@6B@
rdata$r	SEGMENT
??_R4MVFinest@@6B@ DD 00H				; MVFinest::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMVFinest@@@8
	DD	FLAT:??_R3MVFinest@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MVFinest@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MVFinest@@8 DD FLAT:??_R0?AVMVFinest@@@8	; MVFinest::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MVFinest@@8
rdata$r	ENDS
;	COMDAT ??_R2MVFinest@@8
rdata$r	SEGMENT
??_R2MVFinest@@8 DD FLAT:??_R1A@?0A@EA@MVFinest@@8	; MVFinest::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GenericVideoFilter@@8
	DD	FLAT:??_R1A@?0A@EA@IClip@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMVFinest@@@8
data$r	SEGMENT
??_R0?AVMVFinest@@@8 DD FLAT:??_7type_info@@6B@		; MVFinest `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMVFinest@@', 00H
data$r	ENDS
;	COMDAT ??_7MVFinest@@6B@
CONST	SEGMENT
??_7MVFinest@@6B@ DD FLAT:??_R4MVFinest@@6B@		; MVFinest::`vftable'
	DD	FLAT:?GetVersion@IClip@@UAGHXZ
	DD	FLAT:?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z
	DD	FLAT:?GetParity@GenericVideoFilter@@UAG_NH@Z
	DD	FLAT:?GetAudio@GenericVideoFilter@@UAGXPAX_J1PAVIScriptEnvironment@@@Z
	DD	FLAT:?SetCacheHints@MVFinest@@UAGHHH@Z
	DD	FLAT:?GetVideoInfo@GenericVideoFilter@@UAGABUVideoInfo@@XZ
	DD	FLAT:??_EMVFinest@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R3MVFinest@@8
rdata$r	SEGMENT
??_R3MVFinest@@8 DD 00H					; MVFinest::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2MVFinest@@8
PUBLIC	?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z ; MVFinest::GetFrame
PUBLIC	??1MVFinest@@UAE@XZ				; MVFinest::~MVFinest
PUBLIC	??_GMVFinest@@UAEPAXI@Z				; MVFinest::`scalar deleting destructor'
PUBLIC	?GetExtendedHeight@MVPlane@@QBEHXZ		; MVPlane::GetExtendedHeight
PUBLIC	?GetExtendedWidth@MVPlane@@QBEHXZ		; MVPlane::GetExtendedWidth
PUBLIC	?SetCacheHints@MVFinest@@UAGHHH@Z		; MVFinest::SetCacheHints
PUBLIC	??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z ; MVFinest::MVFinest
EXTRN	??_EMVFinest@@UAEPAXI@Z:PROC			; MVFinest::`vector deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1MVFinest@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1MVFinest@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__unwindtable$??1MVFinest@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1MVFinest@@UAE@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1MVFinest@@UAE@XZ$3
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z$2
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
;	COMDAT ??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
_this$ = -40						; size = 4
_nSuperLevels$1$ = -36					; size = 4
_nWidth$1$ = -32					; size = 4
_nSuperModeYUV$1$ = -28					; size = 4
_nHeightS$1$ = -24					; size = 4
_nSuperPel$1$ = -20					; size = 4
_xRatioUV$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__super$ = 8						; size = 4
_yRatioUV$1$ = 12					; size = 4
__isse$ = 12						; size = 1
_env$dead$ = 16						; size = 4
??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z PROC ; MVFinest::MVFinest, COMDAT
; _this$ = ecx

; 33   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\github\mvtools\sources\include\avisynth.h

; 937  :   PClip(const PClip& x) AVS_BakedCode( AVS_LinkCall(PClip_CONSTRUCTOR1)(x) )

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\mvfinest.cpp

; 32   : GenericVideoFilter(_super)

	push	ecx
	mov	ecx, esp
; File c:\github\mvtools\sources\include\avisynth.h

; 937  :   PClip(const PClip& x) AVS_BakedCode( AVS_LinkCall(PClip_CONSTRUCTOR1)(x) )

	test	eax, eax
	je	SHORT $LN28@MVFinest
	cmp	DWORD PTR [eax], 232			; 000000e8H
	jbe	SHORT $LN28@MVFinest
	mov	eax, DWORD PTR [eax+232]
	lea	edx, DWORD PTR __super$[ebp]
	push	edx
	call	eax
$LN28@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 32   : GenericVideoFilter(_super)

	mov	ecx, edi
	call	??0GenericVideoFilter@@QAE@VPClip@@@Z	; GenericVideoFilter::GenericVideoFilter
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 33   : {

	lea	ecx, DWORD PTR [edi+84]
; File c:\github\mvtools\sources\include\avisynth.h

; 936  :   PClip() AVS_BakedCode( AVS_LinkCall(PClip_CONSTRUCTOR0)() )

	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\mvfinest.cpp

; 33   : {

	mov	DWORD PTR [edi], OFFSET ??_7MVFinest@@6B@
; File c:\github\mvtools\sources\include\avisynth.h

; 936  :   PClip() AVS_BakedCode( AVS_LinkCall(PClip_CONSTRUCTOR0)() )

	test	esi, esi
	je	SHORT $LN32@MVFinest
	cmp	DWORD PTR [esi], 228			; 000000e4H
	jbe	SHORT $LN32@MVFinest
	mov	eax, DWORD PTR [esi+228]
	call	eax
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
$LN32@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 35   :    isse = _isse;

	mov	al, BYTE PTR __isse$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; File c:\github\mvtools\sources\include\avisynth.h

; 942  :   IClip* operator->() const { return p; }

	mov	ecx, DWORD PTR [edi+8]
; File c:\github\mvtools\sources\mvfinest.cpp

; 35   :    isse = _isse;

	mov	BYTE PTR [edi+69], al
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	cmp	eax, OFFSET ?GetVideoInfo@GenericVideoFilter@@UAGABUVideoInfo@@XZ ; GenericVideoFilter::GetVideoInfo
	jne	SHORT $LN12@MVFinest
; File c:\github\mvtools\sources\include\avisynth.h

; 1108 :   const VideoInfo& __stdcall GetVideoInfo() { return vi; }

	lea	eax, DWORD PTR [ecx+16]
	jmp	SHORT $LN11@MVFinest
$LN12@MVFinest:
	push	ecx
; File c:\github\mvtools\sources\mvfinest.cpp

; 39   : 	memcpy(&params, &child->GetVideoInfo().num_audio_samples, 8);

	call	eax
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
$LN11@MVFinest:
	mov	edx, DWORD PTR [eax+36]
	mov	ecx, DWORD PTR [eax+32]

; 40   : 	int nHeightS = params.nHeight;

	movzx	eax, cx
	mov	DWORD PTR _nHeightS$1$[ebp], eax

; 41   : 	nSuperHPad = params.nHPad;

	mov	eax, ecx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	DWORD PTR [edi+96], eax

; 42   : 	nSuperVPad = params.nVPad;
; 43   : 	int nSuperPel = params.nPel;
; 44   : 	int nSuperModeYUV = params.nModeYUV;

	mov	eax, edx
	shr	ecx, 24					; 00000018H
	shr	eax, 8
	mov	DWORD PTR [edi+100], ecx
	movzx	ecx, dl
	movzx	eax, al

; 45   : 	int nSuperLevels = params.nLevels;

	shr	edx, 16					; 00000010H
	mov	DWORD PTR _nSuperModeYUV$1$[ebp], eax
	movzx	eax, dl
	mov	DWORD PTR _nSuperLevels$1$[ebp], eax
	mov	eax, DWORD PTR __super$[ebp]
	mov	DWORD PTR _nSuperPel$1$[ebp], ecx

; 46   : 	nPel = nSuperPel;

	mov	DWORD PTR [edi+80], ecx
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	cmp	ecx, OFFSET ?GetVideoInfo@GenericVideoFilter@@UAGABUVideoInfo@@XZ ; GenericVideoFilter::GetVideoInfo
	jne	SHORT $LN14@MVFinest
; File c:\github\mvtools\sources\include\avisynth.h

; 1108 :   const VideoInfo& __stdcall GetVideoInfo() { return vi; }

	add	eax, 16					; 00000010H
	jmp	SHORT $LN13@MVFinest
$LN14@MVFinest:
	push	DWORD PTR __super$[ebp]
; File c:\github\mvtools\sources\mvfinest.cpp

; 47   : 	nSuperWidth = _super->GetVideoInfo().width;

	call	ecx
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
$LN13@MVFinest:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edi+88], eax
	mov	eax, DWORD PTR __super$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	cmp	ecx, OFFSET ?GetVideoInfo@GenericVideoFilter@@UAGABUVideoInfo@@XZ ; GenericVideoFilter::GetVideoInfo
	jne	SHORT $LN16@MVFinest
; File c:\github\mvtools\sources\include\avisynth.h

; 1108 :   const VideoInfo& __stdcall GetVideoInfo() { return vi; }

	add	eax, 16					; 00000010H
	jmp	SHORT $LN15@MVFinest
$LN16@MVFinest:
	push	DWORD PTR __super$[ebp]
; File c:\github\mvtools\sources\mvfinest.cpp

; 48   : 	nSuperHeight = _super->GetVideoInfo().height;

	call	ecx
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
$LN15@MVFinest:
	mov	eax, DWORD PTR [eax+4]

; 49   : 	int nWidth = nSuperWidth - 2*nSuperHPad;

	mov	ecx, DWORD PTR [edi+88]
	mov	DWORD PTR [edi+92], eax
	mov	eax, DWORD PTR [edi+96]
	add	eax, eax
	sub	ecx, eax
	mov	DWORD PTR _nWidth$1$[ebp], ecx
; File c:\github\mvtools\sources\include\avisynth.h

; 707  :   bool IsY()   const AVS_BakedCode( return AVS_LinkCallOpt(IsY, IsY8) )

	test	esi, esi
	je	$LN60@MVFinest
	mov	eax, DWORD PTR [esi]
	cmp	eax, 552				; 00000228H
	ja	SHORT $LN50@MVFinest
	cmp	eax, 48					; 00000030H
	jbe	SHORT $LN91@MVFinest
	mov	eax, DWORD PTR [esi+48]
	jmp	SHORT $LN97@MVFinest
$LN50@MVFinest:
	mov	eax, DWORD PTR [esi+552]
$LN97@MVFinest:
	lea	ecx, DWORD PTR [edi+16]
	call	eax
; File c:\github\mvtools\sources\mvfinest.cpp

; 53   :     if(!vi.IsY()) {

	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\include\avisynth.h

; 707  :   bool IsY()   const AVS_BakedCode( return AVS_LinkCallOpt(IsY, IsY8) )

	movzx	eax, al
; File c:\github\mvtools\sources\mvfinest.cpp

; 53   :     if(!vi.IsY()) {

	test	al, al
	jne	SHORT $LN2@MVFinest
$LN91@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 624  :   bool IsYUY2() const AVS_BakedCode(return AVS_LinkCall(IsYUY2)())

	test	esi, esi
	je	SHORT $LN60@MVFinest
	cmp	DWORD PTR [esi], 28			; 0000001cH
	jbe	SHORT $LN5@MVFinest
	mov	eax, DWORD PTR [esi+28]
	lea	ecx, DWORD PTR [edi+16]
	call	eax
; File c:\github\mvtools\sources\mvfinest.cpp

; 54   :         xRatioUV = vi.IsYUY2() ? 2 : (1 << vi.GetPlaneWidthSubsampling(PLANAR_U));

	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\include\avisynth.h

; 624  :   bool IsYUY2() const AVS_BakedCode(return AVS_LinkCall(IsYUY2)())

	movzx	eax, al
; File c:\github\mvtools\sources\mvfinest.cpp

; 54   :         xRatioUV = vi.IsYUY2() ? 2 : (1 << vi.GetPlaneWidthSubsampling(PLANAR_U));

	test	al, al
	je	SHORT $LN5@MVFinest
	mov	DWORD PTR _xRatioUV$1$[ebp], 2
	jmp	SHORT $LN6@MVFinest
$LN5@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 661  :   int GetPlaneWidthSubsampling(int plane) const AVS_BakedCode(return AVS_LinkCall(GetPlaneWidthSubsampling)(plane))

	test	esi, esi
	je	SHORT $LN60@MVFinest
	cmp	DWORD PTR [esi], 144			; 00000090H
	jbe	SHORT $LN60@MVFinest
	mov	eax, DWORD PTR [esi+144]
	lea	ecx, DWORD PTR [edi+16]
	push	2
	call	eax
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN61@MVFinest
$LN2@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 58   :         xRatioUV = 1; // n/a

	mov	DWORD PTR _xRatioUV$1$[ebp], 1

; 59   :         yRatioUV = 1; // n/a

	mov	DWORD PTR _yRatioUV$1$[ebp], 1
	jmp	SHORT $LN3@MVFinest
$LN60@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 661  :   int GetPlaneWidthSubsampling(int plane) const AVS_BakedCode(return AVS_LinkCall(GetPlaneWidthSubsampling)(plane))

	xor	eax, eax
$LN61@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 54   :         xRatioUV = vi.IsYUY2() ? 2 : (1 << vi.GetPlaneWidthSubsampling(PLANAR_U));

	mov	edx, 1
	mov	ecx, eax
	shl	edx, cl
	mov	DWORD PTR _xRatioUV$1$[ebp], edx
$LN6@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 624  :   bool IsYUY2() const AVS_BakedCode(return AVS_LinkCall(IsYUY2)())

	test	esi, esi
	je	SHORT $LN68@MVFinest
	cmp	DWORD PTR [esi], 28			; 0000001cH
	jbe	SHORT $LN7@MVFinest
	mov	eax, DWORD PTR [esi+28]
	lea	ecx, DWORD PTR [edi+16]
	call	eax
; File c:\github\mvtools\sources\mvfinest.cpp

; 55   :         yRatioUV = vi.IsYUY2() ? 1 : (1 << vi.GetPlaneHeightSubsampling(PLANAR_U));;

	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\include\avisynth.h

; 624  :   bool IsYUY2() const AVS_BakedCode(return AVS_LinkCall(IsYUY2)())

	movzx	eax, al
; File c:\github\mvtools\sources\mvfinest.cpp

; 55   :         yRatioUV = vi.IsYUY2() ? 1 : (1 << vi.GetPlaneHeightSubsampling(PLANAR_U));;

	test	al, al
	je	SHORT $LN7@MVFinest
	mov	DWORD PTR _yRatioUV$1$[ebp], 1
	jmp	SHORT $LN3@MVFinest
$LN7@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 662  :   int GetPlaneHeightSubsampling(int plane) const AVS_BakedCode(return AVS_LinkCall(GetPlaneHeightSubsampling)(plane))

	test	esi, esi
	je	SHORT $LN68@MVFinest
	cmp	DWORD PTR [esi], 148			; 00000094H
	jbe	SHORT $LN68@MVFinest
	mov	eax, DWORD PTR [esi+148]
	lea	ecx, DWORD PTR [edi+16]
	push	2
	call	eax
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN69@MVFinest
$LN68@MVFinest:
	xor	eax, eax
$LN69@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 55   :         yRatioUV = vi.IsYUY2() ? 1 : (1 << vi.GetPlaneHeightSubsampling(PLANAR_U));;

	mov	ecx, eax
	mov	edx, 1
	shl	edx, cl
	mov	DWORD PTR _yRatioUV$1$[ebp], edx
$LN3@MVFinest:
	mov	eax, DWORD PTR __super$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	cmp	ecx, OFFSET ?GetVideoInfo@GenericVideoFilter@@UAGABUVideoInfo@@XZ ; GenericVideoFilter::GetVideoInfo
	jne	SHORT $LN18@MVFinest
; File c:\github\mvtools\sources\include\avisynth.h

; 1108 :   const VideoInfo& __stdcall GetVideoInfo() { return vi; }

	lea	ecx, DWORD PTR [eax+16]
	jmp	SHORT $LN17@MVFinest
$LN18@MVFinest:
	push	DWORD PTR __super$[ebp]
; File c:\github\mvtools\sources\mvfinest.cpp

; 62   :     pixelsize = _super->GetVideoInfo().ComponentSize();

	call	ecx
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	ecx, eax
$LN17@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 692  :   int ComponentSize() const AVS_BakedCode(return AVS_LinkCallOptDefault(ComponentSize, 1))

	test	esi, esi
	je	SHORT $LN76@MVFinest
	cmp	DWORD PTR [esi], 532			; 00000214H
	jbe	SHORT $LN76@MVFinest
	mov	eax, DWORD PTR [esi+532]
	call	eax
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN77@MVFinest
$LN76@MVFinest:
	mov	eax, 1
$LN77@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 62   :     pixelsize = _super->GetVideoInfo().ComponentSize();

	mov	DWORD PTR [edi+72], eax
	mov	eax, DWORD PTR __super$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	cmp	ecx, OFFSET ?GetVideoInfo@GenericVideoFilter@@UAGABUVideoInfo@@XZ ; GenericVideoFilter::GetVideoInfo
	jne	SHORT $LN20@MVFinest
; File c:\github\mvtools\sources\include\avisynth.h

; 1108 :   const VideoInfo& __stdcall GetVideoInfo() { return vi; }

	lea	ecx, DWORD PTR [eax+16]
	jmp	SHORT $LN19@MVFinest
$LN20@MVFinest:
	push	DWORD PTR __super$[ebp]
; File c:\github\mvtools\sources\mvfinest.cpp

; 63   :     bits_per_pixel = _super->GetVideoInfo().BitsPerComponent();

	call	ecx
	mov	esi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	ecx, eax
$LN19@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 695  :   int BitsPerComponent() const AVS_BakedCode(return AVS_LinkCallOptDefault(BitsPerComponent, 8))

	test	esi, esi
	je	SHORT $LN84@MVFinest
	cmp	DWORD PTR [esi], 536			; 00000218H
	jbe	SHORT $LN84@MVFinest
	mov	eax, DWORD PTR [esi+536]
	call	eax
	jmp	SHORT $LN85@MVFinest
$LN84@MVFinest:
	mov	eax, 8
$LN85@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 65   : 	pRefGOF = new MVGroupOfFrames(nSuperLevels, nWidth, nHeight, nSuperPel, nSuperHPad, nSuperVPad, nSuperModeYUV, isse, xRatioUV, yRatioUV, pixelsize, bits_per_pixel, true);

	push	44					; 0000002cH
	mov	DWORD PTR [edi+76], eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR _yRatioUV$1$[ebp]
	push	1
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	DWORD PTR [edi+76]
	movzx	eax, BYTE PTR [edi+69]
	push	DWORD PTR [edi+72]
	mov	esi, DWORD PTR _nWidth$1$[ebp]
	push	edx
	push	DWORD PTR _xRatioUV$1$[ebp]
	push	eax
	push	DWORD PTR _nSuperModeYUV$1$[ebp]
	push	DWORD PTR [edi+100]
	push	DWORD PTR [edi+96]
	push	DWORD PTR _nSuperPel$1$[ebp]
	push	DWORD PTR _nHeightS$1$[ebp]
	push	esi
	push	DWORD PTR _nSuperLevels$1$[ebp]
	call	??0MVGroupOfFrames@@QAE@HHHHHHH_NHHHH0@Z ; MVGroupOfFrames::MVGroupOfFrames

; 66   : 
; 67   : //	if (nHeight != nHeightS || nHeight != vi.height || nWidth != nSuperWidth-nSuperHPad*2 || nWidth != vi.width)
; 68   : //		env->ThrowError("MVFinest : different frame sizes of input clips");
; 69   : 
; 70   : 	vi.width = (nWidth + 2*nSuperHPad)*nSuperPel;
; 71   : 	vi.height = (nHeight + 2*nSuperVPad)*nSuperPel;

	mov	edx, DWORD PTR _nHeightS$1$[ebp]
	mov	DWORD PTR [edi+104], eax
	mov	eax, DWORD PTR [edi+96]
	lea	eax, DWORD PTR [esi+eax*2]
	imul	eax, DWORD PTR _nSuperPel$1$[ebp]
	mov	DWORD PTR [edi+16], eax
	mov	eax, DWORD PTR [edi+100]
	lea	eax, DWORD PTR [edx+eax*2]
	imul	eax, DWORD PTR _nSuperPel$1$[ebp]
	mov	DWORD PTR [edi+20], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 948  :   ~PClip() AVS_BakedCode( AVS_LinkCall(PClip_DESTRUCTOR)() )

	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN92@MVFinest
	cmp	DWORD PTR [eax], 248			; 000000f8H
	jbe	SHORT $LN92@MVFinest
	mov	eax, DWORD PTR [eax+248]
	lea	ecx, DWORD PTR __super$[ebp]
	call	eax
$LN92@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 73   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$0:
	lea	ecx, DWORD PTR __super$[ebp]
	jmp	??1PClip@@QAE@XZ			; PClip::~PClip
__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1GenericVideoFilter@@UAE@XZ
__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1PClip@@QAE@XZ			; PClip::~PClip
__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$4:
	push	44					; 0000002cH
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z$5:
	call	DWORD PTR __imp____std_terminate
	ret	0
__ehhandler$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MVFinest@@QAE@VPClip@@_NPAVIScriptEnvironment@@@Z ENDP ; MVFinest::MVFinest
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\mvfinest.h
;	COMDAT ?SetCacheHints@MVFinest@@UAGHHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_cachehints$ = 12					; size = 4
_frame_range$ = 16					; size = 4
?SetCacheHints@MVFinest@@UAGHHH@Z PROC			; MVFinest::SetCacheHints, COMDAT

; 50   :     return cachehints == CACHE_GET_MTMODE ? MT_MULTI_INSTANCE : 0;

	xor	eax, eax
	mov	ecx, 2
	cmp	DWORD PTR _cachehints$[esp-4], 509	; 000001fdH
	cmove	eax, ecx

; 51   :   }

	ret	12					; 0000000cH
?SetCacheHints@MVFinest@@UAGHHH@Z ENDP			; MVFinest::SetCacheHints
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\mvplane.h
;	COMDAT ?GetExtendedWidth@MVPlane@@QBEHXZ
_TEXT	SEGMENT
?GetExtendedWidth@MVPlane@@QBEHXZ PROC			; MVPlane::GetExtendedWidth, COMDAT
; _this$ = ecx

; 115  :    inline int GetExtendedWidth() const { return nExtendedWidth; }

	mov	eax, DWORD PTR [ecx+36]
	ret	0
?GetExtendedWidth@MVPlane@@QBEHXZ ENDP			; MVPlane::GetExtendedWidth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\mvplane.h
;	COMDAT ?GetExtendedHeight@MVPlane@@QBEHXZ
_TEXT	SEGMENT
?GetExtendedHeight@MVPlane@@QBEHXZ PROC			; MVPlane::GetExtendedHeight, COMDAT
; _this$ = ecx

; 116  :    inline int GetExtendedHeight() const { return nExtendedHeight; }

	mov	eax, DWORD PTR [ecx+40]
	ret	0
?GetExtendedHeight@MVPlane@@QBEHXZ ENDP			; MVPlane::GetExtendedHeight
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GMVFinest@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GMVFinest@@UAEPAXI@Z PROC				; MVFinest::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1MVFinest@@UAE@XZ			; MVFinest::~MVFinest
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar
	push	112					; 00000070H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GMVFinest@@UAEPAXI@Z ENDP				; MVFinest::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
;	COMDAT ??1MVFinest@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1MVFinest@@UAE@XZ PROC				; MVFinest::~MVFinest, COMDAT
; _this$ = ecx

; 76   : {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1MVFinest@@UAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	mov	esi, ecx
	push	edi

; 77   : 
; 78   : 	 delete pRefGOF;

	mov	edi, DWORD PTR [esi+104]
	mov	DWORD PTR [esi], OFFSET ??_7MVFinest@@6B@
	test	edi, edi
	je	SHORT $LN6@MVFinest
	mov	ecx, edi
	call	??1MVGroupOfFrames@@QAE@XZ		; MVGroupOfFrames::~MVGroupOfFrames
	push	44					; 0000002cH
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@MVFinest:
; File c:\github\mvtools\sources\include\avisynth.h

; 948  :   ~PClip() AVS_BakedCode( AVS_LinkCall(PClip_DESTRUCTOR)() )

	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN11@MVFinest
	cmp	DWORD PTR [eax], 248			; 000000f8H
	jbe	SHORT $LN11@MVFinest
	mov	eax, DWORD PTR [eax+248]
; File c:\github\mvtools\sources\mvfinest.cpp

; 79   : }

	lea	ecx, DWORD PTR [esi+84]
; File c:\github\mvtools\sources\include\avisynth.h

; 948  :   ~PClip() AVS_BakedCode( AVS_LinkCall(PClip_DESTRUCTOR)() )

	call	eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
$LN11@MVFinest:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	eax, eax
	je	SHORT $LN25@MVFinest
	cmp	DWORD PTR [eax], 248			; 000000f8H
	jbe	SHORT $LN25@MVFinest
	mov	eax, DWORD PTR [eax+248]
	lea	ecx, DWORD PTR [esi+8]
	call	eax
$LN25@MVFinest:
; File c:\github\mvtools\sources\mvfinest.cpp

; 79   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
; File c:\github\mvtools\sources\include\avisynth.h

; 919  :   virtual AVSC_CC ~IClip() {}

	mov	DWORD PTR [esi], OFFSET ??_7IClip@@6B@
; File c:\github\mvtools\sources\mvfinest.cpp

; 79   : }

	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1MVFinest@@UAE@XZ$1:
	call	DWORD PTR __imp____std_terminate
	ret	0
__unwindfunclet$??1MVFinest@@UAE@XZ$3:
	call	DWORD PTR __imp____std_terminate
	ret	0
__ehhandler$??1MVFinest@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1MVFinest@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1MVFinest@@UAE@XZ ENDP				; MVFinest::~MVFinest
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\mvgroupofframes.cpp
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\mvgroupofframes.cpp
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\mvgroupofframes.cpp
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\mvplane.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\mvplane.h
; File c:\github\mvtools\sources\mvfinest.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\mvfinest.cpp
;	COMDAT ?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z
_TEXT	SEGMENT
_pPlanes$2 = -104					; size = 12
_pDst$ = -92						; size = 12
_nDstPitches$ = -80					; size = 12
$T3 = -68						; size = 4
_pDst$2$ = -64						; size = 4
_pDst$1$ = -64						; size = 4
$T4 = -64						; size = 4
$T5 = -64						; size = 4
tv3234 = -64						; size = 4
tv3228 = -64						; size = 4
tv3222 = -64						; size = 4
tv3216 = -64						; size = 4
$T6 = -60						; size = 4
$T7 = -60						; size = 4
$T8 = -56						; size = 4
$T9 = -56						; size = 4
$T10 = -52						; size = 4
$T11 = -48						; size = 4
_nRefPitches$3$ = -44					; size = 4
$T12 = -44						; size = 4
_nRefPitches$2$ = -40					; size = 4
$T13 = -40						; size = 4
_pRef$2$ = -36						; size = 4
$T14 = -36						; size = 4
$T15 = -32						; size = 4
$T16 = -28						; size = 4
$T17 = -24						; size = 4
$T18 = -20						; size = 4
$T19 = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv3236 = 8						; size = 4
tv3230 = 8						; size = 4
tv3224 = 8						; size = 4
tv3218 = 8						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_pRef$1$ = 16						; size = 4
$T20 = 16						; size = 4
$T21 = 16						; size = 4
tv3235 = 16						; size = 4
tv3229 = 16						; size = 4
tv3223 = 16						; size = 4
tv3217 = 16						; size = 4
_n$ = 16						; size = 4
_ref$ = 20						; size = 4
_env$ = 20						; size = 4
?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z PROC ; MVFinest::GetFrame, COMDAT

; 83   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
; File c:\github\mvtools\sources\include\avisynth.h

; 942  :   IClip* operator->() const { return p; }

	mov	edi, DWORD PTR _this$[ebp]
; File c:\github\mvtools\sources\mvfinest.cpp

; 84   : 	PVideoFrame	ref	= child->GetFrame(n, env);

	lea	edx, DWORD PTR _ref$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T3[ebp], 0
	mov	esi, DWORD PTR _env$[ebp]
; File c:\github\mvtools\sources\include\avisynth.h

; 942  :   IClip* operator->() const { return p; }

	mov	eax, DWORD PTR [edi+8]
; File c:\github\mvtools\sources\mvfinest.cpp

; 84   : 	PVideoFrame	ref	= child->GetFrame(n, env);

	push	esi
	push	DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	edx
	push	eax
	call	DWORD PTR [ecx+4]

; 85   :    BYTE *pDst[3];
; 86   : 	const BYTE *pRef[3];
; 87   : 	int nDstPitches[3], nRefPitches[3];
; 88   : //	int nref;
; 89   : //	unsigned char *pDstYUY2;
; 90   : //	int nDstPitchYUY2;
; 91   : 
; 92   : 	PVideoFrame dst = env->NewVideoFrame(vi);

	push	32					; 00000020H
	lea	eax, DWORD PTR [edi+16]
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR [esi]
	mov	ebx, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	push	ebx
	push	esi
	call	DWORD PTR [ecx+56]

; 195  : 	return dst;

	mov	eax, DWORD PTR [edi+36]
	and	eax, 1610612740				; 60000004H
	mov	DWORD PTR $T3[ebp], 1
	cmp	DWORD PTR [edi+80], 1
	jne	$LN8@GetFrame
	cmp	eax, 1610612740				; 60000004H
; File c:\github\mvtools\sources\include\avisynth.h

; 799  :   int GetHeight(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetHeight)(plane) )

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\mvfinest.cpp

; 96   : 		if ((vi.pixel_type & VideoInfo::CS_YUY2) == VideoInfo::CS_YUY2)

	jne	$LN10@GetFrame
; File c:\github\mvtools\sources\include\avisynth.h

; 799  :   int GetHeight(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetHeight)(plane) )

	test	eax, eax
	je	SHORT $LN29@GetFrame
	cmp	DWORD PTR [eax], 200			; 000000c8H
	jbe	SHORT $LN29@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+200]
	push	0
	call	eax
	mov	DWORD PTR tv3236[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN30@GetFrame
$LN29@GetFrame:
	mov	DWORD PTR tv3236[ebp], 0
$LN30@GetFrame:

; 798  :   int GetRowSize(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetRowSize)(plane) )

	test	eax, eax
	je	SHORT $LN35@GetFrame
	cmp	DWORD PTR [eax], 196			; 000000c4H
	jbe	SHORT $LN35@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+196]
	push	0
	call	eax
	mov	DWORD PTR tv3235[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN36@GetFrame
$LN35@GetFrame:
	mov	DWORD PTR tv3235[ebp], 0
$LN36@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN41@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN41@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+192]
	push	0
	call	eax
	mov	DWORD PTR tv3234[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN42@GetFrame
$LN41@GetFrame:
	mov	DWORD PTR tv3234[ebp], 0
$LN42@GetFrame:

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	test	eax, eax
	je	SHORT $LN47@GetFrame
	cmp	DWORD PTR [eax], 212			; 000000d4H
	jbe	SHORT $LN47@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+212]
	push	0
	call	eax
	mov	ebx, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN48@GetFrame
$LN47@GetFrame:
	xor	ebx, ebx
$LN48@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN53@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN53@GetFrame
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+192]
	push	0
	mov	ecx, DWORD PTR [ecx]
	call	eax
	mov	edi, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN54@GetFrame
$LN53@GetFrame:
	xor	edi, edi
$LN54@GetFrame:

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	eax, eax
	je	SHORT $LN59@GetFrame
	cmp	DWORD PTR [eax], 220			; 000000dcH
	jbe	SHORT $LN59@GetFrame
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+220]
	push	0
	mov	ecx, DWORD PTR [ecx]
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN60@GetFrame
$LN59@GetFrame:
	xor	ecx, ecx
$LN60@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 98   : 			env->BitBlt(dst->GetWritePtr(), dst->GetPitch(),

	push	DWORD PTR tv3236[ebp]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR tv3235[ebp]
	push	DWORD PTR tv3234[ebp]
	push	ebx
	push	edi
	push	ecx
	push	esi
	call	DWORD PTR [eax+64]

; 99   : 				ref->GetReadPtr(), ref->GetPitch(), dst->GetRowSize(), dst->GetHeight());
; 100  : 		}
; 101  : 		else // YUV

	jmp	$LN572@GetFrame
$LN10@GetFrame:
; File c:\github\mvtools\sources\include\avisynth.h

; 799  :   int GetHeight(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetHeight)(plane) )

	test	eax, eax
	je	SHORT $LN65@GetFrame
	cmp	DWORD PTR [eax], 200			; 000000c8H
	jbe	SHORT $LN65@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+200]
	push	1
	call	eax
	mov	DWORD PTR tv3230[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN66@GetFrame
$LN65@GetFrame:
	mov	DWORD PTR tv3230[ebp], 0
$LN66@GetFrame:

; 798  :   int GetRowSize(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetRowSize)(plane) )

	test	eax, eax
	je	SHORT $LN71@GetFrame
	cmp	DWORD PTR [eax], 196			; 000000c4H
	jbe	SHORT $LN71@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+196]
	push	1
	call	eax
	mov	DWORD PTR tv3229[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN72@GetFrame
$LN71@GetFrame:
	mov	DWORD PTR tv3229[ebp], 0
$LN72@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN77@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN77@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+192]
	push	1
	call	eax
	mov	DWORD PTR tv3228[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN78@GetFrame
$LN77@GetFrame:
	mov	DWORD PTR tv3228[ebp], 0
$LN78@GetFrame:

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	test	eax, eax
	je	SHORT $LN83@GetFrame
	cmp	DWORD PTR [eax], 212			; 000000d4H
	jbe	SHORT $LN83@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+212]
	push	1
	call	eax
	mov	ebx, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN84@GetFrame
$LN83@GetFrame:
	xor	ebx, ebx
$LN84@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN89@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN89@GetFrame
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+192]
	push	1
	mov	ecx, DWORD PTR [ecx]
	call	eax
	mov	edi, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN90@GetFrame
$LN89@GetFrame:
	xor	edi, edi
$LN90@GetFrame:

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	eax, eax
	je	SHORT $LN95@GetFrame
	cmp	DWORD PTR [eax], 220			; 000000dcH
	jbe	SHORT $LN95@GetFrame
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+220]
	push	1
	mov	ecx, DWORD PTR [ecx]
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN96@GetFrame
$LN95@GetFrame:
	xor	ecx, ecx
$LN96@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 103  : 			env->BitBlt(dst->GetWritePtr(PLANAR_Y), dst->GetPitch(PLANAR_Y),

	push	DWORD PTR tv3230[ebp]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR tv3229[ebp]
	push	DWORD PTR tv3228[ebp]
	push	ebx
	push	edi
	push	ecx
	push	esi
	call	DWORD PTR [eax+64]
; File c:\github\mvtools\sources\include\avisynth.h

; 799  :   int GetHeight(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetHeight)(plane) )

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN101@GetFrame
	cmp	DWORD PTR [eax], 200			; 000000c8H
	jbe	SHORT $LN101@GetFrame
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+200]
	push	2
	mov	ecx, DWORD PTR [edi]
	call	eax
	mov	DWORD PTR tv3224[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN102@GetFrame
$LN101@GetFrame:
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR tv3224[ebp], 0
$LN102@GetFrame:

; 798  :   int GetRowSize(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetRowSize)(plane) )

	test	eax, eax
	je	SHORT $LN107@GetFrame
	cmp	DWORD PTR [eax], 196			; 000000c4H
	jbe	SHORT $LN107@GetFrame
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+196]
	push	2
	call	eax
	mov	DWORD PTR tv3223[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN108@GetFrame
$LN107@GetFrame:
	mov	DWORD PTR tv3223[ebp], 0
$LN108@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN113@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN113@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+192]
	push	2
	call	eax
	mov	DWORD PTR tv3222[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN114@GetFrame
$LN113@GetFrame:
	mov	DWORD PTR tv3222[ebp], 0
$LN114@GetFrame:

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	test	eax, eax
	je	SHORT $LN119@GetFrame
	cmp	DWORD PTR [eax], 212			; 000000d4H
	jbe	SHORT $LN119@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+212]
	push	2
	call	eax
	mov	ebx, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN120@GetFrame
$LN119@GetFrame:
	xor	ebx, ebx
$LN120@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN125@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN125@GetFrame
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+192]
	push	2
	call	eax
	mov	edi, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN126@GetFrame
$LN125@GetFrame:
	xor	edi, edi
$LN126@GetFrame:

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	eax, eax
	je	SHORT $LN131@GetFrame
	cmp	DWORD PTR [eax], 220			; 000000dcH
	jbe	SHORT $LN131@GetFrame
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+220]
	push	2
	mov	ecx, DWORD PTR [ecx]
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN132@GetFrame
$LN131@GetFrame:
	xor	ecx, ecx
$LN132@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 105  : 			env->BitBlt(dst->GetWritePtr(PLANAR_U), dst->GetPitch(PLANAR_U),

	push	DWORD PTR tv3224[ebp]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR tv3223[ebp]
	push	DWORD PTR tv3222[ebp]
	push	ebx
	push	edi
	push	ecx
	push	esi
	call	DWORD PTR [eax+64]
; File c:\github\mvtools\sources\include\avisynth.h

; 799  :   int GetHeight(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetHeight)(plane) )

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN137@GetFrame
	cmp	DWORD PTR [eax], 200			; 000000c8H
	jbe	SHORT $LN137@GetFrame
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+200]
	push	4
	mov	ecx, DWORD PTR [edi]
	call	eax
	mov	DWORD PTR tv3218[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN138@GetFrame
$LN137@GetFrame:
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR tv3218[ebp], 0
$LN138@GetFrame:

; 798  :   int GetRowSize(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetRowSize)(plane) )

	test	eax, eax
	je	SHORT $LN143@GetFrame
	cmp	DWORD PTR [eax], 196			; 000000c4H
	jbe	SHORT $LN143@GetFrame
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+196]
	push	4
	call	eax
	mov	DWORD PTR tv3217[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN144@GetFrame
$LN143@GetFrame:
	mov	DWORD PTR tv3217[ebp], 0
$LN144@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN149@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN149@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+192]
	push	4
	call	eax
	mov	DWORD PTR tv3216[ebp], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN150@GetFrame
$LN149@GetFrame:
	mov	DWORD PTR tv3216[ebp], 0
$LN150@GetFrame:

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	test	eax, eax
	je	SHORT $LN155@GetFrame
	cmp	DWORD PTR [eax], 212			; 000000d4H
	jbe	SHORT $LN155@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [eax+212]
	push	4
	call	eax
	mov	ebx, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN156@GetFrame
$LN155@GetFrame:
	xor	ebx, ebx
$LN156@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	eax, eax
	je	SHORT $LN161@GetFrame
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN161@GetFrame
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+192]
	push	4
	call	eax
	mov	edi, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN162@GetFrame
$LN161@GetFrame:
	xor	edi, edi
$LN162@GetFrame:

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	eax, eax
	je	SHORT $LN167@GetFrame
	cmp	DWORD PTR [eax], 220			; 000000dcH
	jbe	SHORT $LN167@GetFrame
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [eax+220]
	push	4
	mov	ecx, DWORD PTR [ecx]
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN168@GetFrame
$LN167@GetFrame:
	xor	ecx, ecx
$LN168@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 107  : 			env->BitBlt(dst->GetWritePtr(PLANAR_V), dst->GetPitch(PLANAR_V),

	push	DWORD PTR tv3218[ebp]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR tv3217[ebp]
	push	DWORD PTR tv3216[ebp]
	push	ebx
	push	edi
	push	ecx
	push	esi
	call	DWORD PTR [eax+64]

; 108  : 				ref->GetReadPtr(PLANAR_V), ref->GetPitch(PLANAR_V), dst->GetRowSize(PLANAR_V), dst->GetHeight(PLANAR_V));
; 109  : 		}
; 110  : 	}
; 111  : 
; 112  : 	else	// nPel > 1

	jmp	$LN572@GetFrame
$LN8@GetFrame:
; File c:\github\mvtools\sources\include\avisynth.h

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	cmp	eax, 1610612740				; 60000004H
; File c:\github\mvtools\sources\mvfinest.cpp

; 116  : 		if ( (vi.pixel_type & VideoInfo::CS_YUY2) == VideoInfo::CS_YUY2 )

	jne	$LN12@GetFrame
; File c:\github\mvtools\sources\include\avisynth.h

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	test	edi, edi
	je	SHORT $LN173@GetFrame
	cmp	DWORD PTR [edi], 212			; 000000d4H
	jbe	SHORT $LN173@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+212]
	push	0
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	ecx, eax
	jmp	SHORT $LN573@GetFrame
$LN173@GetFrame:
	xor	ecx, ecx
$LN573@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 120  : 			pRef[1] = pRef[0] + nSuperWidth;

	mov	eax, DWORD PTR _this$[ebp]
; File c:\github\mvtools\sources\include\avisynth.h

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	mov	DWORD PTR _pRef$1$[ebp], ecx
; File c:\github\mvtools\sources\mvfinest.cpp

; 120  : 			pRef[1] = pRef[0] + nSuperWidth;

	mov	eax, DWORD PTR [eax+88]
	add	ecx, eax

; 121  : 			pRef[2] = pRef[1] + nSuperWidth/2;

	cdq
	sub	eax, edx
	mov	DWORD PTR _pRef$2$[ebp], ecx
	mov	ebx, eax
	sar	ebx, 1
	add	ebx, ecx
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edi, edi
	je	SHORT $LN179@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN179@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+192]
	push	0
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	esi, eax
	jmp	SHORT $LN180@GetFrame
$LN179@GetFrame:
	xor	esi, esi
$LN180@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 123  : 			nRefPitches[1] = nRefPitches[0];

	mov	DWORD PTR _nRefPitches$2$[ebp], esi

; 124  : 			nRefPitches[2] = nRefPitches[0];

	mov	DWORD PTR _nRefPitches$3$[ebp], esi
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	edi, edi
	je	SHORT $LN185@GetFrame
	cmp	DWORD PTR [edi], 220			; 000000dcH
	jbe	SHORT $LN185@GetFrame
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edi+220]
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN574@GetFrame
$LN185@GetFrame:
	xor	eax, eax
$LN574@GetFrame:
	mov	DWORD PTR _pDst$1$[ebp], eax
; File c:\github\mvtools\sources\mvfinest.cpp

; 125  : 			pDst[0] = dst->GetWritePtr();

	mov	DWORD PTR _pDst$[ebp], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 798  :   int GetRowSize(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetRowSize)(plane) )

	test	edi, edi
	je	SHORT $LN191@GetFrame
	cmp	DWORD PTR [edi], 196			; 000000c4H
	jbe	SHORT $LN191@GetFrame
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edi+196]
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN192@GetFrame
$LN191@GetFrame:
	xor	eax, eax
$LN192@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 126  : 			pDst[1] = pDst[0] + dst->GetRowSize()/2;

	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _pDst$1$[ebp]
	mov	DWORD PTR _pDst$2$[ebp], eax
	mov	DWORD PTR _pDst$[ebp+4], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 798  :   int GetRowSize(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetRowSize)(plane) )

	test	edi, edi
	je	SHORT $LN197@GetFrame
	cmp	DWORD PTR [edi], 196			; 000000c4H
	jbe	SHORT $LN197@GetFrame
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edi+196]
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN198@GetFrame
$LN197@GetFrame:
	xor	eax, eax
$LN198@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 127  : 			pDst[2] = pDst[1] + dst->GetRowSize()/4;

	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _pDst$2$[ebp]
	mov	DWORD PTR _pDst$[ebp+8], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edi, edi
	je	SHORT $LN203@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN203@GetFrame
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	0
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edi+192]
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\mvfinest.cpp

; 128  : 			nDstPitches[0] = dst->GetPitch();

	mov	DWORD PTR _nDstPitches$[ebp], eax

; 129  : 			nDstPitches[1] = nDstPitches[0];

	mov	DWORD PTR _nDstPitches$[ebp+4], eax

; 130  : 			nDstPitches[2] = nDstPitches[0];

	mov	DWORD PTR _nDstPitches$[ebp+8], eax

; 131  : 		}
; 132  : 		else

	jmp	$LN276@GetFrame
$LN203@GetFrame:
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	xor	eax, eax
; File c:\github\mvtools\sources\mvfinest.cpp

; 128  : 			nDstPitches[0] = dst->GetPitch();

	mov	DWORD PTR _nDstPitches$[ebp], eax

; 129  : 			nDstPitches[1] = nDstPitches[0];

	mov	DWORD PTR _nDstPitches$[ebp+4], eax

; 130  : 			nDstPitches[2] = nDstPitches[0];

	mov	DWORD PTR _nDstPitches$[ebp+8], eax

; 131  : 		}
; 132  : 		else

	jmp	$LN276@GetFrame
$LN12@GetFrame:
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	edi, edi
	je	SHORT $LN209@GetFrame
	cmp	DWORD PTR [edi], 220			; 000000dcH
	jbe	SHORT $LN209@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edi+220]
	push	1
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN210@GetFrame
$LN209@GetFrame:
	xor	eax, eax
$LN210@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 134  : 			pDst[0] = YWPLAN(dst);

	mov	DWORD PTR _pDst$[ebp], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	edi, edi
	je	SHORT $LN215@GetFrame
	cmp	DWORD PTR [edi], 220			; 000000dcH
	jbe	SHORT $LN215@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edi+220]
	push	2
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN216@GetFrame
$LN215@GetFrame:
	xor	eax, eax
$LN216@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 135  : 			pDst[1] = UWPLAN(dst);

	mov	DWORD PTR _pDst$[ebp+4], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	edi, edi
	je	SHORT $LN221@GetFrame
	cmp	DWORD PTR [edi], 220			; 000000dcH
	jbe	SHORT $LN221@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edi+220]
	push	4
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN222@GetFrame
$LN221@GetFrame:
	xor	eax, eax
$LN222@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 136  : 			pDst[2] = VWPLAN(dst);

	mov	DWORD PTR _pDst$[ebp+8], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edi, edi
	je	SHORT $LN227@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN227@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edi+192]
	push	1
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN228@GetFrame
$LN227@GetFrame:
	xor	eax, eax
$LN228@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 137  : 			nDstPitches[0] = YPITCH(dst);

	mov	DWORD PTR _nDstPitches$[ebp], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edi, edi
	je	SHORT $LN233@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN233@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edi+192]
	push	2
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN234@GetFrame
$LN233@GetFrame:
	xor	eax, eax
$LN234@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 138  : 			nDstPitches[1] = UPITCH(dst);

	mov	DWORD PTR _nDstPitches$[ebp+4], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edi, edi
	je	SHORT $LN239@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN239@GetFrame
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edi+192]
	push	4
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN240@GetFrame
$LN239@GetFrame:
	xor	eax, eax
$LN240@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 139  : 			nDstPitches[2] = VPITCH(dst);

	mov	DWORD PTR _nDstPitches$[ebp+8], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 811  :   const BYTE* GetReadPtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetReadPtr)(plane) )

	test	edi, edi
	je	SHORT $LN245@GetFrame
	cmp	DWORD PTR [edi], 212			; 000000d4H
	jbe	SHORT $LN245@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+212]
	push	1
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _pRef$1$[ebp], eax
	jmp	SHORT $LN246@GetFrame
$LN245@GetFrame:
	mov	DWORD PTR _pRef$1$[ebp], 0
$LN246@GetFrame:
	test	edi, edi
	je	SHORT $LN251@GetFrame
	cmp	DWORD PTR [edi], 212			; 000000d4H
	jbe	SHORT $LN251@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+212]
	push	2
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _pRef$2$[ebp], eax
	jmp	SHORT $LN252@GetFrame
$LN251@GetFrame:
	mov	DWORD PTR _pRef$2$[ebp], 0
$LN252@GetFrame:
	test	edi, edi
	je	SHORT $LN257@GetFrame
	cmp	DWORD PTR [edi], 212			; 000000d4H
	jbe	SHORT $LN257@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+212]
	push	4
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	ebx, eax
	jmp	SHORT $LN258@GetFrame
$LN257@GetFrame:
	xor	ebx, ebx
$LN258@GetFrame:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edi, edi
	je	SHORT $LN263@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN263@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+192]
	push	1
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	esi, eax
	jmp	SHORT $LN264@GetFrame
$LN263@GetFrame:
	xor	esi, esi
$LN264@GetFrame:
	test	edi, edi
	je	SHORT $LN269@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN269@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+192]
	push	2
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _nRefPitches$2$[ebp], eax
	jmp	SHORT $LN270@GetFrame
$LN269@GetFrame:
	mov	DWORD PTR _nRefPitches$2$[ebp], 0
$LN270@GetFrame:
	test	edi, edi
	je	SHORT $LN275@GetFrame
	cmp	DWORD PTR [edi], 192			; 000000c0H
	jbe	SHORT $LN275@GetFrame
	mov	ecx, DWORD PTR _ref$[ebp]
	mov	eax, DWORD PTR [edi+192]
	push	4
	call	eax
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _nRefPitches$3$[ebp], eax
	jmp	SHORT $LN276@GetFrame
$LN275@GetFrame:
	mov	DWORD PTR _nRefPitches$3$[ebp], 0
$LN276@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 149  : 		pRefGOF->Update(YUVPLANES, (BYTE*)pRef[0], nRefPitches[0], (BYTE*)pRef[1], nRefPitches[1], (BYTE*)pRef[2], nRefPitches[2]);// v2.0

	push	DWORD PTR _nRefPitches$3$[ebp]
	push	ebx
	push	DWORD PTR _nRefPitches$2$[ebp]
	mov	ebx, DWORD PTR _this$[ebp]
	push	DWORD PTR _pRef$2$[ebp]
	push	esi
	push	DWORD PTR _pRef$1$[ebp]
	mov	ecx, DWORD PTR [ebx+104]
	push	7
	call	?Update@MVGroupOfFrames@@QAEXHPAEH0H0H@Z ; MVGroupOfFrames::Update

; 153  : 		pPlanes[0] = pRefGOF->GetFrame(0)->GetPlane(YPLANE);

	mov	ecx, DWORD PTR [ebx+104]
; File c:\github\mvtools\sources\mvgroupofframes.cpp

; 82   :    if (( nLevel < 0 ) || ( nLevel >= nLevelCount )) return 0;

	cmp	DWORD PTR [ecx], 0
	jg	SHORT $LN278@GetFrame
	xor	eax, eax
	jmp	SHORT $LN277@GetFrame
$LN278@GetFrame:

; 83   :    return pFrames[nLevel];

	mov	eax, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
$LN277@GetFrame:

; 82   :    if (( nLevel < 0 ) || ( nLevel >= nLevelCount )) return 0;

	cmp	DWORD PTR [ecx], 0
; File c:\github\mvtools\sources\mvfinest.cpp

; 153  : 		pPlanes[0] = pRefGOF->GetFrame(0)->GetPlane(YPLANE);

	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _pPlanes$2[ebp], eax
; File c:\github\mvtools\sources\mvgroupofframes.cpp

; 82   :    if (( nLevel < 0 ) || ( nLevel >= nLevelCount )) return 0;

	jg	SHORT $LN287@GetFrame
	xor	eax, eax
	jmp	SHORT $LN286@GetFrame
$LN287@GetFrame:

; 83   :    return pFrames[nLevel];

	mov	eax, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
$LN286@GetFrame:

; 82   :    if (( nLevel < 0 ) || ( nLevel >= nLevelCount )) return 0;

	cmp	DWORD PTR [ecx], 0
; File c:\github\mvtools\sources\mvfinest.cpp

; 154  : 		pPlanes[1] = pRefGOF->GetFrame(0)->GetPlane(UPLANE);

	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _pPlanes$2[ebp+4], eax
; File c:\github\mvtools\sources\mvgroupofframes.cpp

; 82   :    if (( nLevel < 0 ) || ( nLevel >= nLevelCount )) return 0;

	jg	SHORT $LN296@GetFrame
	xor	eax, eax
	jmp	SHORT $LN295@GetFrame
$LN296@GetFrame:

; 83   :    return pFrames[nLevel];

	mov	eax, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
$LN295@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 155  : 		pPlanes[2] = pRefGOF->GetFrame(0)->GetPlane(VPLANE);

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _pPlanes$2[ebp+8], eax

; 156  : 
; 157  : 		if (nPel == 2)

	mov	eax, DWORD PTR [ebx+80]
	cmp	eax, 2
	jne	$LN14@GetFrame

; 158  : 		{
; 159  :       for (int p = 0; p < 3; p++) {

	xor	ebx, ebx
	npad	11
$LL4@GetFrame:

; 160  :         MVPlane *plane = pPlanes[p];

	mov	eax, DWORD PTR _pPlanes$2[ebp+ebx]

; 161  :         if (plane) {

	test	eax, eax
	je	$LN2@GetFrame
; File c:\github\mvtools\sources\mvplane.h

; 112  :    inline int GetPitch() const { return nPitch; }

	mov	ecx, DWORD PTR [eax+12]

; 82   :       if (nPel == 1)

	mov	edi, DWORD PTR [eax+56]

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	edx, DWORD PTR [eax]

; 112  :    inline int GetPitch() const { return nPitch; }

	mov	DWORD PTR $T5[ebp], ecx

; 116  :    inline int GetExtendedHeight() const { return nExtendedHeight; }

	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR $T7[ebp], ecx

; 115  :    inline int GetExtendedWidth() const { return nExtendedWidth; }

	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR $T9[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	edi, 1
	jne	SHORT $LN311@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [eax+52]
	mov	esi, edi
	shl	esi, cl
	add	esi, DWORD PTR [eax+12]
	add	esi, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN314@GetFrame
$LN311@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	edi, 2
	jne	SHORT $LN313@GetFrame

; 87   : 		{
; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	mov	esi, DWORD PTR [edx+12]
	jmp	SHORT $LN314@GetFrame
$LN313@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	esi, DWORD PTR [edx+20]
$LN314@GetFrame:

; 82   :       if (nPel == 1)

	cmp	edi, 1
	jne	SHORT $LN323@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [edx]
	add	ecx, DWORD PTR [eax+12]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN575@GetFrame
$LN323@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	edi, 2
	jne	SHORT $LN325@GetFrame

; 87   : 		{
; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	mov	ecx, DWORD PTR [edx+8]
	jmp	SHORT $LN575@GetFrame
$LN325@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+16]
$LN575@GetFrame:
	mov	DWORD PTR $T21[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	edi, 1
	jne	SHORT $LN335@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [eax+52]
	shl	edi, cl
	add	edi, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN338@GetFrame
$LN335@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	edi, 2

; 87   : 		{
; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	mov	edi, DWORD PTR [edx+4]
$LN338@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 163  :           Merge4PlanesToBig(pDst[p], nDstPitches[p], 

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [ecx+69]
	push	eax
	push	DWORD PTR [ecx+72]
	mov	eax, DWORD PTR [edx]
	push	DWORD PTR $T5[ebp]
	mov	edx, DWORD PTR _nDstPitches$[ebp+ebx]
	push	DWORD PTR $T7[ebp]
	mov	ecx, DWORD PTR _pDst$[ebp+ebx]
	push	DWORD PTR $T9[ebp]
	push	esi
	push	DWORD PTR $T21[ebp]
	push	edi
	push	eax
	call	?Merge4PlanesToBig@@YAXPAEHPBE111HHHH_N@Z ; Merge4PlanesToBig
	add	esp, 36					; 00000024H
$LN2@GetFrame:

; 158  : 		{
; 159  :       for (int p = 0; p < 3; p++) {

	add	ebx, 4
	cmp	ebx, 12					; 0000000cH
	jl	$LL4@GetFrame

; 164  :             plane->GetAbsolutePointer(0,0), plane->GetAbsolutePointer(1,0), 
; 165  :             plane->GetAbsolutePointer(0,1), plane->GetAbsolutePointer(1,1), 
; 166  :             plane->GetExtendedWidth(), plane->GetExtendedHeight(), plane->GetPitch(), pixelsize, isse
; 167  :           );
; 168  :         }
; 169  :       }
; 170  : 		}
; 171  : 		else if (nPel==4)

	jmp	$LN572@GetFrame
$LN14@GetFrame:
	cmp	eax, 4
	jne	$LN6@GetFrame

; 172  : 		{
; 173  :       for (int p = 0; p < 3; p++) {

	xor	edi, edi
	npad	5
$LL7@GetFrame:

; 174  :         MVPlane *plane = pPlanes[p];

	mov	ebx, DWORD PTR _pPlanes$2[ebp+edi]

; 175  :         if (plane) {

	test	ebx, ebx
	je	$LN5@GetFrame
; File c:\github\mvtools\sources\mvplane.h

; 82   :       if (nPel == 1)

	mov	esi, DWORD PTR [ebx+56]

; 112  :    inline int GetPitch() const { return nPitch; }

	mov	eax, DWORD PTR [ebx+12]

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	edx, DWORD PTR [ebx]

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN365@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	lea	eax, DWORD PTR [eax+eax*2]
	mov	DWORD PTR $T20[ebp], 3
	shl	DWORD PTR $T20[ebp], cl
	mov	ecx, DWORD PTR $T20[ebp]
	add	ecx, eax

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	mov	eax, DWORD PTR [ebx+12]

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	add	ecx, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN576@GetFrame
$LN365@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN367@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T20[ebp], 1
	shl	DWORD PTR $T20[ebp], cl
	mov	ecx, DWORD PTR $T20[ebp]
	add	ecx, DWORD PTR [edx+12]
	add	ecx, eax

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN576@GetFrame
$LN367@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+60]
$LN576@GetFrame:
	mov	DWORD PTR $T20[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN377@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	lea	eax, DWORD PTR [eax+eax*2]
	mov	DWORD PTR $T19[ebp], 2
	shl	DWORD PTR $T19[ebp], cl
	mov	ecx, DWORD PTR $T19[ebp]
	add	ecx, eax
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T19[ebp], ecx

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN380@GetFrame
$LN377@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN379@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T19[ebp], 1
	shl	DWORD PTR $T19[ebp], cl
	mov	ecx, DWORD PTR $T19[ebp]
	add	ecx, DWORD PTR [edx+8]
	add	ecx, eax
	mov	DWORD PTR $T19[ebp], ecx

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN380@GetFrame
$LN379@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR $T19[ebp], eax
$LN380@GetFrame:

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN389@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	eax, esi
	shl	eax, cl
	mov	ecx, DWORD PTR [ebx+12]
	mov	DWORD PTR $T12[ebp], eax
	lea	eax, DWORD PTR [ecx+ecx*2]
	mov	ecx, DWORD PTR $T12[ebp]
	add	ecx, eax
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T12[ebp], ecx

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN577@GetFrame
$LN389@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN391@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR [ebx+12]
	add	ecx, eax
	mov	DWORD PTR $T12[ebp], ecx

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN392@GetFrame
$LN391@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR $T12[ebp], eax
$LN577@GetFrame:
	mov	eax, DWORD PTR [ebx+12]
$LN392@GetFrame:

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN401@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	lea	ecx, DWORD PTR [eax+eax*2]
	add	ecx, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN578@GetFrame
$LN401@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN403@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [edx+8]
	add	ecx, eax

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN578@GetFrame
$LN403@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+48]
$LN578@GetFrame:
	mov	DWORD PTR $T11[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN413@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	eax, 3
	shl	eax, cl
	mov	ecx, DWORD PTR [ebx+12]
	lea	eax, DWORD PTR [eax+ecx*2]
	add	eax, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN579@GetFrame
$LN413@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN415@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T14[ebp], 1
	shl	DWORD PTR $T14[ebp], cl
	mov	ecx, DWORD PTR $T14[ebp]
	add	ecx, DWORD PTR [edx+4]
	add	ecx, eax
	mov	DWORD PTR $T14[ebp], ecx

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN416@GetFrame
$LN415@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	eax, DWORD PTR [edx+44]
$LN579@GetFrame:
	mov	DWORD PTR $T14[ebp], eax
$LN416@GetFrame:

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN425@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	eax, 2
	shl	eax, cl
	mov	ecx, DWORD PTR [ebx+12]
	lea	eax, DWORD PTR [eax+ecx*2]
	add	eax, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN580@GetFrame
$LN425@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN427@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR [ebx+12]
	add	eax, ecx
	add	eax, DWORD PTR [edx]

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN580@GetFrame
$LN427@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR [ebx+12]
$LN580@GetFrame:
	mov	DWORD PTR $T10[ebp], eax

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN437@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	eax, esi
	shl	eax, cl
	mov	ecx, DWORD PTR [ebx+12]
	lea	eax, DWORD PTR [eax+ecx*2]
	add	eax, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN581@GetFrame
$LN437@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN439@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	eax, DWORD PTR [edx+4]
	add	eax, ecx

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN581@GetFrame
$LN439@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	eax, DWORD PTR [edx+36]
$LN581@GetFrame:
	mov	DWORD PTR $T8[ebp], eax

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN449@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR $T6[ebp], ecx

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN582@GetFrame
$LN449@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN451@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [ebx+12]
	add	ecx, eax
	mov	DWORD PTR $T6[ebp], ecx

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN452@GetFrame
$LN451@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR $T6[ebp], eax
$LN582@GetFrame:
	mov	eax, DWORD PTR [ebx+12]
$LN452@GetFrame:

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN461@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T18[ebp], 3
	shl	DWORD PTR $T18[ebp], cl
	mov	ecx, DWORD PTR $T18[ebp]
	add	ecx, eax
	add	ecx, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN583@GetFrame
$LN461@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN463@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T18[ebp], 1
	shl	DWORD PTR $T18[ebp], cl
	mov	ecx, DWORD PTR $T18[ebp]
	add	ecx, DWORD PTR [edx+12]

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN583@GetFrame
$LN463@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+28]
$LN583@GetFrame:
	mov	DWORD PTR $T18[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN473@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T17[ebp], 2
	shl	DWORD PTR $T17[ebp], cl
	mov	ecx, DWORD PTR $T17[ebp]
	add	ecx, eax
	add	ecx, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN584@GetFrame
$LN473@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN475@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T17[ebp], 1
	shl	DWORD PTR $T17[ebp], cl
	mov	ecx, DWORD PTR $T17[ebp]
	add	ecx, DWORD PTR [edx+8]

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN584@GetFrame
$LN475@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+24]
$LN584@GetFrame:
	mov	DWORD PTR $T17[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN485@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T13[ebp], esi
	shl	DWORD PTR $T13[ebp], cl
	mov	ecx, DWORD PTR $T13[ebp]
	add	ecx, eax
	add	ecx, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN585@GetFrame
$LN485@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN487@GetFrame

; 87   : 		{
; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	mov	ecx, DWORD PTR [edx+12]
	jmp	SHORT $LN585@GetFrame
$LN487@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+20]
$LN585@GetFrame:
	mov	DWORD PTR $T13[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN497@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [edx]
	add	ecx, eax

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN586@GetFrame
$LN497@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN499@GetFrame

; 87   : 		{
; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	mov	ecx, DWORD PTR [edx+8]
	jmp	SHORT $LN586@GetFrame
$LN499@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+16]
$LN586@GetFrame:
	mov	DWORD PTR $T4[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN509@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T16[ebp], 3
	shl	DWORD PTR $T16[ebp], cl
	mov	ecx, DWORD PTR $T16[ebp]
	add	ecx, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN587@GetFrame
$LN509@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN511@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T16[ebp], 1
	shl	DWORD PTR $T16[ebp], cl
	mov	ecx, DWORD PTR $T16[ebp]
	add	ecx, DWORD PTR [edx+4]

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN587@GetFrame
$LN511@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+12]
$LN587@GetFrame:
	mov	DWORD PTR $T16[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN521@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T15[ebp], 2
	shl	DWORD PTR $T15[ebp], cl
	mov	ecx, DWORD PTR $T15[ebp]
	add	ecx, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN588@GetFrame
$LN521@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2
	jne	SHORT $LN523@GetFrame

; 71   :       return pPlane[idx] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR $T15[ebp], 1
	shl	DWORD PTR $T15[ebp], cl
	mov	ecx, DWORD PTR $T15[ebp]
	add	ecx, DWORD PTR [edx]

; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	jmp	SHORT $LN588@GetFrame
$LN523@GetFrame:

; 89   : 		}
; 90   :       else // nPel == 4
; 91   :       {
; 92   :          return GetAbsolutePointerPel <2> (nX, nY);

	mov	ecx, DWORD PTR [edx+8]
$LN588@GetFrame:
	mov	DWORD PTR $T15[ebp], ecx

; 82   :       if (nPel == 1)

	cmp	esi, 1
	jne	SHORT $LN533@GetFrame

; 77   :          return pPlane[0] + (nX << pixelsize_shift) + nY * nPitch;

	mov	ecx, DWORD PTR [ebx+52]
	shl	esi, cl
	add	esi, DWORD PTR [edx]

; 84   :          return GetAbsolutePointerPel <0> (nX, nY);

	jmp	SHORT $LN536@GetFrame
$LN533@GetFrame:

; 85   : 		}
; 86   :       else if (nPel == 2)

	cmp	esi, 2

; 87   : 		{
; 88   :          return GetAbsolutePointerPel <1> (nX, nY);

	mov	esi, DWORD PTR [edx+4]
$LN536@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 177  :           Merge16PlanesToBig(pDst[p], nDstPitches[p],

	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	push	DWORD PTR [ecx+72]
	mov	ecx, DWORD PTR _pDst$[ebp+edi]
	push	eax
	push	DWORD PTR [ebx+40]
	mov	eax, DWORD PTR [edx]
	push	DWORD PTR [ebx+36]
	mov	edx, DWORD PTR _nDstPitches$[ebp+edi]
	push	DWORD PTR $T20[ebp]
	push	DWORD PTR $T19[ebp]
	push	DWORD PTR $T12[ebp]
	push	DWORD PTR $T11[ebp]
	push	DWORD PTR $T14[ebp]
	push	DWORD PTR $T10[ebp]
	push	DWORD PTR $T8[ebp]
	push	DWORD PTR $T6[ebp]
	push	DWORD PTR $T18[ebp]
	push	DWORD PTR $T17[ebp]
	push	DWORD PTR $T13[ebp]
	push	DWORD PTR $T4[ebp]
	push	DWORD PTR $T16[ebp]
	push	DWORD PTR $T15[ebp]
	push	esi
	push	eax
	call	?Merge16PlanesToBig@@YAXPAEHPBE111111111111111HHHH_N@Z ; Merge16PlanesToBig
	add	esp, 84					; 00000054H
$LN5@GetFrame:

; 172  : 		{
; 173  :       for (int p = 0; p < 3; p++) {

	add	edi, 4
	cmp	edi, 12					; 0000000cH
	jl	$LL7@GetFrame
$LN572@GetFrame:
	mov	edi, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
$LN6@GetFrame:
; File c:\github\mvtools\sources\include\avisynth.h

; 982  :   ~PVideoFrame() AVS_BakedCode( AVS_LinkCall(PVideoFrame_DESTRUCTOR)() )

	mov	DWORD PTR __$EHRec$[ebp+8], 2
	test	edi, edi
	je	SHORT $LN569@GetFrame
	cmp	DWORD PTR [edi], 272			; 00000110H
	jbe	SHORT $LN569@GetFrame
	mov	edx, DWORD PTR [edi+272]
	lea	ecx, DWORD PTR _ref$[ebp]
	call	edx
$LN569@GetFrame:
; File c:\github\mvtools\sources\mvfinest.cpp

; 195  : 	return dst;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 196  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z$0:
	lea	ecx, DWORD PTR _ref$[ebp]
	jmp	??1PVideoFrame@@QAE@XZ			; PVideoFrame::~PVideoFrame
__unwindfunclet$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	and	eax, 1
	je	$LN22@GetFrame
	and	DWORD PTR $T3[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1PVideoFrame@@QAE@XZ			; PVideoFrame::~PVideoFrame
$LN22@GetFrame:
	ret	0
__unwindfunclet$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z$2:
	call	DWORD PTR __imp____std_terminate
	ret	0
__ehhandler$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFrame@MVFinest@@UAG?AVPVideoFrame@@HPAVIScriptEnvironment@@@Z ENDP ; MVFinest::GetFrame
END
