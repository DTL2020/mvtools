; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	c:\github\mvtools\sources\info.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

	ORG $+7
?font@@3PAY0BE@GA DW 00H				; font
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	03300H
	DW	01200H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0d80H
	DW	0d80H
	DW	0d80H
	DW	03fc0H
	DW	01b00H
	DW	01b00H
	DW	01b00H
	DW	07f80H
	DW	03600H
	DW	03600H
	DW	03600H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	03f00H
	DW	06d80H
	DW	06c00H
	DW	06c00H
	DW	06c00H
	DW	03f00H
	DW	0d80H
	DW	0d80H
	DW	0d80H
	DW	06d80H
	DW	03f00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03980H
	DW	06d80H
	DW	06f00H
	DW	03b00H
	DW	0600H
	DW	0600H
	DW	0c00H
	DW	0c00H
	DW	01b80H
	DW	01ec0H
	DW	036c0H
	DW	03380H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01c00H
	DW	03600H
	DW	03600H
	DW	03600H
	DW	03c00H
	DW	01800H
	DW	03800H
	DW	06c00H
	DW	066c0H
	DW	06380H
	DW	06300H
	DW	07780H
	DW	03cc0H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0f00H
	DW	0e00H
	DW	01800H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	0c00H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	0c00H
	DW	0c00H
	DW	0600H
	DW	0300H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	0c00H
	DW	0600H
	DW	0600H
	DW	0600H
	DW	0600H
	DW	0600H
	DW	0c00H
	DW	0c00H
	DW	01800H
	DW	03000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	01e00H
	DW	07f80H
	DW	01e00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e00H
	DW	0e00H
	DW	01800H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e00H
	DW	0e00H
	DW	0e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0180H
	DW	0180H
	DW	0300H
	DW	0300H
	DW	0600H
	DW	0600H
	DW	0c00H
	DW	0c00H
	DW	01800H
	DW	01800H
	DW	03000H
	DW	03000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	03300H
	DW	01e00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01c00H
	DW	03c00H
	DW	06c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	0180H
	DW	0180H
	DW	0300H
	DW	0e00H
	DW	01800H
	DW	03000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	0180H
	DW	0300H
	DW	0e00H
	DW	0300H
	DW	0180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0100H
	DW	0300H
	DW	0700H
	DW	0f00H
	DW	01b00H
	DW	03300H
	DW	06300H
	DW	06300H
	DW	07f80H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06e00H
	DW	07300H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06100H
	DW	06000H
	DW	06000H
	DW	06e00H
	DW	07300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	0180H
	DW	0180H
	DW	0300H
	DW	0300H
	DW	0600H
	DW	0600H
	DW	0c00H
	DW	0c00H
	DW	01800H
	DW	01800H
	DW	03000H
	DW	03000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	0180H
	DW	0180H
	DW	02180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e00H
	DW	0e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e00H
	DW	0e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e00H
	DW	0e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e00H
	DW	0e00H
	DW	01c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0100H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	03000H
	DW	06000H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	0600H
	DW	0300H
	DW	0100H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02000H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	0600H
	DW	0300H
	DW	0180H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	03000H
	DW	02000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06780H
	DW	06f80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	06f00H
	DW	06600H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07c00H
	DW	06600H
	DW	06300H
	DW	06300H
	DW	06300H
	DW	06600H
	DW	07e00H
	DW	06300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06300H
	DW	07e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07e00H
	DW	06300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06300H
	DW	07e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06780H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0f80H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06300H
	DW	06300H
	DW	06600H
	DW	06600H
	DW	07c00H
	DW	06600H
	DW	06600H
	DW	06300H
	DW	06300H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	07380H
	DW	07380H
	DW	07f80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	07180H
	DW	07180H
	DW	07980H
	DW	07980H
	DW	06d80H
	DW	06d80H
	DW	06780H
	DW	06780H
	DW	06380H
	DW	06380H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07e00H
	DW	06300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06300H
	DW	07e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06d80H
	DW	06780H
	DW	03300H
	DW	01f00H
	DW	0180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07e00H
	DW	06300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06300H
	DW	07e00H
	DW	06600H
	DW	06300H
	DW	06300H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06000H
	DW	06000H
	DW	03000H
	DW	01e00H
	DW	0300H
	DW	0180H
	DW	0180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	03300H
	DW	03300H
	DW	01e00H
	DW	01e00H
	DW	01e00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	07380H
	DW	07380H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	03300H
	DW	01e00H
	DW	01e00H
	DW	0c00H
	DW	01e00H
	DW	01e00H
	DW	03300H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	03300H
	DW	01e00H
	DW	01e00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	0180H
	DW	0180H
	DW	0300H
	DW	0600H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	01800H
	DW	03000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03f00H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	03000H
	DW	01800H
	DW	01800H
	DW	0c00H
	DW	0c00H
	DW	0600H
	DW	0600H
	DW	0300H
	DW	0300H
	DW	0180H
	DW	0180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03f00H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	0300H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07fc0H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03c00H
	DW	01c00H
	DW	0600H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01f00H
	DW	03180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06e00H
	DW	07300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	07300H
	DW	06e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01f00H
	DW	03180H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	01d80H
	DW	03380H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0f00H
	DW	01980H
	DW	01980H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	07e00H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03e80H
	DW	06380H
	DW	06300H
	DW	06300H
	DW	06300H
	DW	03e00H
	DW	06000H
	DW	03f00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06e00H
	DW	07300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	03c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0180H
	DW	0180H
	DW	00H
	DW	0780H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	03180H
	DW	03180H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06300H
	DW	06600H
	DW	06c00H
	DW	07800H
	DW	07c00H
	DW	06600H
	DW	06300H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	05b00H
	DW	07f80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06e00H
	DW	07300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06e00H
	DW	07300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	07300H
	DW	06e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01d80H
	DW	03380H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	0180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06f00H
	DW	03980H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	03000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03f00H
	DW	06180H
	DW	06000H
	DW	03f00H
	DW	0180H
	DW	0180H
	DW	06180H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	07e00H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	01980H
	DW	0f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	03300H
	DW	01e00H
	DW	01e00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06d80H
	DW	06d80H
	DW	06d80H
	DW	07f80H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	0c00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	0180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03f80H
	DW	0180H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	03000H
	DW	03f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0780H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07800H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0780H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07800H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0780H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07800H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03980H
	DW	06d80H
	DW	06700H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06100H
	DW	06000H
	DW	06000H
	DW	06100H
	DW	03300H
	DW	01e00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0f00H
	DW	01980H
	DW	01980H
	DW	01800H
	DW	01800H
	DW	07e00H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	07c00H
	DW	056c0H
	DW	07380H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04040H
	DW	02e80H
	DW	01f00H
	DW	03180H
	DW	03180H
	DW	03180H
	DW	01f00H
	DW	02e80H
	DW	04040H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04080H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	03f00H
	DW	0c00H
	DW	03f00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03e00H
	DW	06300H
	DW	06000H
	DW	07000H
	DW	07800H
	DW	04c00H
	DW	06600H
	DW	03300H
	DW	01900H
	DW	0f00H
	DW	0300H
	DW	06300H
	DW	03e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	05e80H
	DW	05280H
	DW	05080H
	DW	05280H
	DW	05e80H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01f00H
	DW	02180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0480H
	DW	0d80H
	DW	01b00H
	DW	03600H
	DW	06c00H
	DW	0d800H
	DW	06c00H
	DW	03600H
	DW	01b00H
	DW	0d80H
	DW	0480H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	07f80H
	DW	0180H
	DW	0180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03f00H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	05e80H
	DW	05280H
	DW	05e80H
	DW	05480H
	DW	05680H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07f00H
	DW	07f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	03300H
	DW	01e00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	07f80H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	07f80H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01c00H
	DW	03600H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	03000H
	DW	03e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01c00H
	DW	03600H
	DW	0200H
	DW	0e00H
	DW	0200H
	DW	03600H
	DW	01c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06300H
	DW	06300H
	DW	06300H
	DW	06300H
	DW	06300H
	DW	07700H
	DW	07d00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01f80H
	DW	03f80H
	DW	07d80H
	DW	07d80H
	DW	07d80H
	DW	03d80H
	DW	01d80H
	DW	0580H
	DW	0580H
	DW	0580H
	DW	0580H
	DW	0580H
	DW	0580H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0e00H
	DW	0e00H
	DW	0e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0400H
	DW	01200H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	01800H
	DW	03800H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	03c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01c00H
	DW	03600H
	DW	06300H
	DW	06300H
	DW	06300H
	DW	03600H
	DW	01c00H
	DW	00H
	DW	07f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04800H
	DW	06c00H
	DW	03600H
	DW	01b00H
	DW	0d80H
	DW	06c0H
	DW	0d80H
	DW	01b00H
	DW	03600H
	DW	06c00H
	DW	04800H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02000H
	DW	06000H
	DW	02080H
	DW	02100H
	DW	07200H
	DW	0400H
	DW	0900H
	DW	01300H
	DW	02500H
	DW	04f00H
	DW	0100H
	DW	0100H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02000H
	DW	06000H
	DW	02080H
	DW	02100H
	DW	07200H
	DW	0400H
	DW	0b00H
	DW	01480H
	DW	02080H
	DW	04100H
	DW	0200H
	DW	0780H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07000H
	DW	0800H
	DW	03080H
	DW	0900H
	DW	07200H
	DW	0400H
	DW	0900H
	DW	01300H
	DW	02500H
	DW	04f80H
	DW	0100H
	DW	0100H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	01800H
	DW	03000H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01900H
	DW	03f00H
	DW	02600H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01200H
	DW	01200H
	DW	0c00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	07f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0f80H
	DW	01e00H
	DW	03600H
	DW	03600H
	DW	06600H
	DW	06600H
	DW	07f80H
	DW	06600H
	DW	06600H
	DW	06600H
	DW	06600H
	DW	06600H
	DW	06780H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	0c00H
	DW	0400H
	DW	01200H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07e00H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	03f00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	03f00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	03f00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	03f00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	03f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	07e00H
	DW	06300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	0f980H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06300H
	DW	07e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01900H
	DW	03f00H
	DW	02600H
	DW	00H
	DW	04180H
	DW	06180H
	DW	07180H
	DW	07980H
	DW	07d80H
	DW	06f80H
	DW	06780H
	DW	06380H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01900H
	DW	03f00H
	DW	02600H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	02080H
	DW	03180H
	DW	01b00H
	DW	0e00H
	DW	0e00H
	DW	01b00H
	DW	03180H
	DW	02080H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	080H
	DW	01f00H
	DW	03300H
	DW	06380H
	DW	06380H
	DW	06580H
	DW	06580H
	DW	06580H
	DW	06980H
	DW	06980H
	DW	06980H
	DW	07180H
	DW	03300H
	DW	03e00H
	DW	04000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0300H
	DW	0600H
	DW	0c00H
	DW	00H
	DW	04080H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03c00H
	DW	01800H
	DW	01f00H
	DW	01980H
	DW	01980H
	DW	01980H
	DW	01f00H
	DW	01800H
	DW	01800H
	DW	01800H
	DW	03c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01c00H
	DW	03e00H
	DW	07300H
	DW	06300H
	DW	06300H
	DW	06600H
	DW	06c00H
	DW	06600H
	DW	06300H
	DW	06100H
	DW	06300H
	DW	06e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	00H
	DW	03f00H
	DW	06180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	00H
	DW	03f00H
	DW	06180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	00H
	DW	03f00H
	DW	06180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01900H
	DW	03f00H
	DW	02600H
	DW	00H
	DW	00H
	DW	03f00H
	DW	06180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	03f00H
	DW	06180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01200H
	DW	01200H
	DW	0c00H
	DW	03f00H
	DW	06180H
	DW	0180H
	DW	03f80H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03e80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03b00H
	DW	04d80H
	DW	0d80H
	DW	0f00H
	DW	03c00H
	DW	06c00H
	DW	06c80H
	DW	03700H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01f00H
	DW	03180H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	0c00H
	DW	0400H
	DW	01200H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	07f80H
	DW	06000H
	DW	06000H
	DW	03180H
	DW	01f00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	00H
	DW	03c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	00H
	DW	03c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	00H
	DW	03c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	03c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	0c00H
	DW	07f80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	04400H
	DW	06c00H
	DW	03800H
	DW	03800H
	DW	06c00H
	DW	04600H
	DW	01f00H
	DW	03380H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01900H
	DW	03f00H
	DW	02600H
	DW	00H
	DW	00H
	DW	06e00H
	DW	07300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	01900H
	DW	03f00H
	DW	02600H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	01e00H
	DW	03300H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	07f80H
	DW	07f80H
	DW	00H
	DW	00H
	DW	0c00H
	DW	0c00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	080H
	DW	01f00H
	DW	03300H
	DW	06580H
	DW	06580H
	DW	06980H
	DW	06980H
	DW	03300H
	DW	03e00H
	DW	04000H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03000H
	DW	01800H
	DW	0c00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0c00H
	DW	01e00H
	DW	03300H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	0600H
	DW	0c00H
	DW	01800H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	0180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03800H
	DW	01e00H
	DW	01b00H
	DW	01b00H
	DW	01e00H
	DW	01800H
	DW	01800H
	DW	03800H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	03300H
	DW	03300H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	06180H
	DW	03380H
	DW	01d80H
	DW	0180H
	DW	06180H
	DW	03300H
	DW	01e00H
	DW	00H
PUBLIC	??$DrawDigit@G@@YAXAAVPVideoFrame@@HHHHHH_N@Z	; DrawDigit<unsigned short>
PUBLIC	??$DrawDigit@E@@YAXAAVPVideoFrame@@HHHHHH_N@Z	; DrawDigit<unsigned char>
PUBLIC	?DrawStringYUY2@@YAXAAVPVideoFrame@@HHPBD@Z	; DrawStringYUY2
PUBLIC	?DrawDigitYUY2@@YAXAAVPVideoFrame@@HHH@Z	; DrawDigitYUY2
PUBLIC	?DrawString@@YAXAAVPVideoFrame@@AAUVideoInfo@@HHPBD@Z ; DrawString
PUBLIC	??CPVideoFrame@@QBEPAVVideoFrame@@XZ		; PVideoFrame::operator->
PUBLIC	?GetWritePtr@VideoFrame@@QBEPAEH@Z		; VideoFrame::GetWritePtr
PUBLIC	?GetPitch@VideoFrame@@QBEHH@Z			; VideoFrame::GetPitch
PUBLIC	?IsY@VideoInfo@@QBE_NXZ				; VideoInfo::IsY
PUBLIC	?BitsPerComponent@VideoInfo@@QBEHXZ		; VideoInfo::BitsPerComponent
PUBLIC	?GetPlaneHeightSubsampling@VideoInfo@@QBEHH@Z	; VideoInfo::GetPlaneHeightSubsampling
PUBLIC	?GetPlaneWidthSubsampling@VideoInfo@@QBEHH@Z	; VideoInfo::GetPlaneWidthSubsampling
PUBLIC	?IsYUY2@VideoInfo@@QBE_NXZ			; VideoInfo::IsYUY2
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ?IsYUY2@VideoInfo@@QBE_NXZ
_TEXT	SEGMENT
?IsYUY2@VideoInfo@@QBE_NXZ PROC				; VideoInfo::IsYUY2, COMDAT
; _this$ = ecx

; 624  :   bool IsYUY2() const AVS_BakedCode(return AVS_LinkCall(IsYUY2)())

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN3@IsYUY2
	cmp	DWORD PTR [eax], 28			; 0000001cH
	jbe	SHORT $LN3@IsYUY2
	mov	eax, DWORD PTR [eax+28]
	call	eax
	movzx	eax, al
	ret	0
$LN3@IsYUY2:
	xor	al, al
	ret	0
?IsYUY2@VideoInfo@@QBE_NXZ ENDP				; VideoInfo::IsYUY2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ?GetPlaneWidthSubsampling@VideoInfo@@QBEHH@Z
_TEXT	SEGMENT
_plane$dead$ = 8					; size = 4
?GetPlaneWidthSubsampling@VideoInfo@@QBEHH@Z PROC	; VideoInfo::GetPlaneWidthSubsampling, COMDAT
; _this$ = ecx

; 661  :   int GetPlaneWidthSubsampling(int plane) const AVS_BakedCode(return AVS_LinkCall(GetPlaneWidthSubsampling)(plane))

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN3@GetPlaneWi
	cmp	DWORD PTR [eax], 144			; 00000090H
	jbe	SHORT $LN3@GetPlaneWi
	mov	DWORD PTR _plane$dead$[esp-4], 2
	mov	eax, DWORD PTR [eax+144]
	jmp	eax
$LN3@GetPlaneWi:
	xor	eax, eax
	ret	4
?GetPlaneWidthSubsampling@VideoInfo@@QBEHH@Z ENDP	; VideoInfo::GetPlaneWidthSubsampling
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ?GetPlaneHeightSubsampling@VideoInfo@@QBEHH@Z
_TEXT	SEGMENT
_plane$dead$ = 8					; size = 4
?GetPlaneHeightSubsampling@VideoInfo@@QBEHH@Z PROC	; VideoInfo::GetPlaneHeightSubsampling, COMDAT
; _this$ = ecx

; 662  :   int GetPlaneHeightSubsampling(int plane) const AVS_BakedCode(return AVS_LinkCall(GetPlaneHeightSubsampling)(plane))

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN3@GetPlaneHe
	cmp	DWORD PTR [eax], 148			; 00000094H
	jbe	SHORT $LN3@GetPlaneHe
	mov	DWORD PTR _plane$dead$[esp-4], 2
	mov	eax, DWORD PTR [eax+148]
	jmp	eax
$LN3@GetPlaneHe:
	xor	eax, eax
	ret	4
?GetPlaneHeightSubsampling@VideoInfo@@QBEHH@Z ENDP	; VideoInfo::GetPlaneHeightSubsampling
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ?BitsPerComponent@VideoInfo@@QBEHXZ
_TEXT	SEGMENT
?BitsPerComponent@VideoInfo@@QBEHXZ PROC		; VideoInfo::BitsPerComponent, COMDAT
; _this$ = ecx

; 695  :   int BitsPerComponent() const AVS_BakedCode(return AVS_LinkCallOptDefault(BitsPerComponent, 8))

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN3@BitsPerCom
	cmp	DWORD PTR [eax], 536			; 00000218H
	jbe	SHORT $LN3@BitsPerCom
	mov	eax, DWORD PTR [eax+536]
	jmp	eax
$LN3@BitsPerCom:
	mov	eax, 8
	ret	0
?BitsPerComponent@VideoInfo@@QBEHXZ ENDP		; VideoInfo::BitsPerComponent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ?IsY@VideoInfo@@QBE_NXZ
_TEXT	SEGMENT
?IsY@VideoInfo@@QBE_NXZ PROC				; VideoInfo::IsY, COMDAT
; _this$ = ecx

; 707  :   bool IsY()   const AVS_BakedCode( return AVS_LinkCallOpt(IsY, IsY8) )

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	edx, ecx
	test	eax, eax
	jne	SHORT $LN7@IsY
$LN10@IsY:
	xor	al, al
	ret	0
$LN7@IsY:
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, 552				; 00000228H
	ja	SHORT $LN5@IsY
	cmp	ecx, 48					; 00000030H
	jbe	SHORT $LN10@IsY
	mov	eax, DWORD PTR [eax+48]
	mov	ecx, edx
	call	eax
	movzx	eax, al
	ret	0
$LN5@IsY:
	mov	eax, DWORD PTR [eax+552]
	mov	ecx, edx
	call	eax
	movzx	eax, al
	ret	0
?IsY@VideoInfo@@QBE_NXZ ENDP				; VideoInfo::IsY
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ?GetPitch@VideoFrame@@QBEHH@Z
_TEXT	SEGMENT
_plane$ = 8						; size = 4
?GetPitch@VideoFrame@@QBEHH@Z PROC			; VideoFrame::GetPitch, COMDAT
; _this$ = ecx

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN3@GetPitch
	cmp	DWORD PTR [eax], 192			; 000000c0H
	jbe	SHORT $LN3@GetPitch
	mov	eax, DWORD PTR [eax+192]
	jmp	eax
$LN3@GetPitch:
	xor	eax, eax
	ret	4
?GetPitch@VideoFrame@@QBEHH@Z ENDP			; VideoFrame::GetPitch
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ?GetWritePtr@VideoFrame@@QBEPAEH@Z
_TEXT	SEGMENT
_plane$ = 8						; size = 4
?GetWritePtr@VideoFrame@@QBEPAEH@Z PROC			; VideoFrame::GetWritePtr, COMDAT
; _this$ = ecx

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	test	eax, eax
	je	SHORT $LN3@GetWritePt
	cmp	DWORD PTR [eax], 220			; 000000dcH
	jbe	SHORT $LN3@GetWritePt
	mov	eax, DWORD PTR [eax+220]
	jmp	eax
$LN3@GetWritePt:
	xor	eax, eax
	ret	4
?GetWritePtr@VideoFrame@@QBEPAEH@Z ENDP			; VideoFrame::GetWritePtr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\include\avisynth.h
;	COMDAT ??CPVideoFrame@@QBEPAVVideoFrame@@XZ
_TEXT	SEGMENT
??CPVideoFrame@@QBEPAVVideoFrame@@XZ PROC		; PVideoFrame::operator->, COMDAT
; _this$ = ecx

; 976  :   VideoFrame* operator->() const { return p; }

	mov	eax, DWORD PTR [ecx]
	ret	0
??CPVideoFrame@@QBEPAVVideoFrame@@XZ ENDP		; PVideoFrame::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
;	COMDAT ?DrawString@@YAXAAVPVideoFrame@@AAUVideoInfo@@HHPBD@Z
_TEXT	SEGMENT
_xRatioShift$1$ = -12					; size = 4
_dst$1$ = -8						; size = 4
tv268 = -4						; size = 4
_x$dead$ = 8						; size = 4
_y$ = 12						; size = 4
_s$ = 16						; size = 4
?DrawString@@YAXAAVPVideoFrame@@AAUVideoInfo@@HHPBD@Z PROC ; DrawString, COMDAT
; _dst$ = ecx
; _vi$ = edx

; 1628 : {

	sub	esp, 12					; 0000000cH
; File c:\github\mvtools\sources\include\avisynth.h

; 624  :   bool IsYUY2() const AVS_BakedCode(return AVS_LinkCall(IsYUY2)())

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	push	ebx
; File c:\github\mvtools\sources\info.cpp

; 1628 : {

	mov	ebx, ecx
	mov	DWORD PTR _dst$1$[esp+16], ebx
	push	esi
	mov	esi, edx
; File c:\github\mvtools\sources\include\avisynth.h

; 624  :   bool IsYUY2() const AVS_BakedCode(return AVS_LinkCall(IsYUY2)())

	test	eax, eax
	je	SHORT $LN15@DrawString
	cmp	DWORD PTR [eax], 28			; 0000001cH
	jbe	SHORT $LN5@DrawString
	mov	eax, DWORD PTR [eax+28]
	mov	ecx, esi
	call	eax
	movzx	eax, al
; File c:\github\mvtools\sources\info.cpp

; 1629 :   if (vi.IsYUY2()) {

	test	al, al
	je	SHORT $LN37@DrawString

; 1630 :     DrawStringYUY2(dst, x, y, s);

	push	DWORD PTR _s$[esp+16]
	mov	ecx, ebx
	push	DWORD PTR _y$[esp+20]
	call	?DrawStringYUY2@@YAXAAVPVideoFrame@@HHPBD@Z ; DrawStringYUY2
	add	esp, 8
	pop	esi
	pop	ebx

; 1643 :   }
; 1644 : }

	add	esp, 12					; 0000000cH
	ret	0
$LN37@DrawString:

; 1631 :     return;

	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
$LN5@DrawString:
; File c:\github\mvtools\sources\include\avisynth.h

; 695  :   int BitsPerComponent() const AVS_BakedCode(return AVS_LinkCallOptDefault(BitsPerComponent, 8))

	test	eax, eax
	je	SHORT $LN15@DrawString
	cmp	DWORD PTR [eax], 536			; 00000218H
	jbe	SHORT $LN15@DrawString
	mov	eax, DWORD PTR [eax+536]
	mov	ecx, esi
	call	eax
	mov	ebx, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN16@DrawString
$LN15@DrawString:
	mov	ebx, 8
$LN16@DrawString:

; 661  :   int GetPlaneWidthSubsampling(int plane) const AVS_BakedCode(return AVS_LinkCall(GetPlaneWidthSubsampling)(plane))

	test	eax, eax
	je	SHORT $LN19@DrawString
	cmp	DWORD PTR [eax], 144			; 00000090H
	jbe	SHORT $LN19@DrawString
	mov	eax, DWORD PTR [eax+144]
	mov	ecx, esi
	push	2
	call	eax
	mov	DWORD PTR _xRatioShift$1$[esp+20], eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN20@DrawString
$LN19@DrawString:
	mov	DWORD PTR _xRatioShift$1$[esp+20], 0
$LN20@DrawString:
	push	ebp

; 662  :   int GetPlaneHeightSubsampling(int plane) const AVS_BakedCode(return AVS_LinkCall(GetPlaneHeightSubsampling)(plane))

	test	eax, eax
	je	SHORT $LN23@DrawString
	cmp	DWORD PTR [eax], 148			; 00000094H
	jbe	SHORT $LN23@DrawString
	mov	eax, DWORD PTR [eax+148]
	mov	ecx, esi
	push	2
	call	eax
	mov	ebp, eax
	mov	eax, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	jmp	SHORT $LN24@DrawString
$LN23@DrawString:
	xor	ebp, ebp
$LN24@DrawString:

; 707  :   bool IsY()   const AVS_BakedCode( return AVS_LinkCallOpt(IsY, IsY8) )

	test	eax, eax
	jne	SHORT $LN31@DrawString
	xor	al, al
	jmp	SHORT $LN30@DrawString
$LN31@DrawString:
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, 552				; 00000228H
	ja	SHORT $LN29@DrawString
	cmp	ecx, 48					; 00000030H
	ja	SHORT $LN27@DrawString
	xor	al, al
	jmp	SHORT $LN30@DrawString
$LN27@DrawString:
	mov	eax, DWORD PTR [eax+48]
	jmp	SHORT $LN40@DrawString
$LN29@DrawString:
	mov	eax, DWORD PTR [eax+552]
$LN40@DrawString:
	mov	ecx, esi
	call	eax
$LN30@DrawString:
	push	edi
; File c:\github\mvtools\sources\info.cpp

; 1638 :   for (int xx = 0; *s; ++s, ++xx) {

	mov	edi, DWORD PTR _s$[esp+24]
	xor	esi, esi
	mov	cl, BYTE PTR [edi]
	test	cl, cl
	je	SHORT $LN39@DrawString

; 1642 :       DrawDigit<uint16_t>(dst, x + xx, y, *s - ' ', bits_per_pixel, xRatioShift, yRatioShift, !grey);

	mov	edx, DWORD PTR _y$[esp+24]
	test	al, al
	sete	al
	mov	DWORD PTR tv268[esp+28], eax
	npad	3
$LL4@DrawString:

; 1639 :     if(bits_per_pixel == 8)
; 1640 :       DrawDigit<uint8_t>(dst, x + xx, y, *s - ' ', bits_per_pixel, xRatioShift, yRatioShift, !grey);

	push	eax
	movsx	eax, cl
	mov	ecx, DWORD PTR _dst$1$[esp+32]
	sub	eax, 32					; 00000020H
	push	ebp
	push	DWORD PTR _xRatioShift$1$[esp+36]
	cmp	ebx, 8
	jne	SHORT $LN6@DrawString
	push	ebx
	push	eax
	push	edx
	mov	edx, esi
	call	??$DrawDigit@E@@YAXAAVPVideoFrame@@HHHHHH_N@Z ; DrawDigit<unsigned char>

; 1641 :     else

	jmp	SHORT $LN41@DrawString
$LN6@DrawString:

; 1642 :       DrawDigit<uint16_t>(dst, x + xx, y, *s - ' ', bits_per_pixel, xRatioShift, yRatioShift, !grey);

	push	ebx
	push	eax
	push	edx
	mov	edx, esi
	call	??$DrawDigit@G@@YAXAAVPVideoFrame@@HHHHHH_N@Z ; DrawDigit<unsigned short>
$LN41@DrawString:

; 1638 :   for (int xx = 0; *s; ++s, ++xx) {

	mov	cl, BYTE PTR [edi+1]
	inc	edi
	mov	eax, DWORD PTR tv268[esp+52]

; 1642 :       DrawDigit<uint16_t>(dst, x + xx, y, *s - ' ', bits_per_pixel, xRatioShift, yRatioShift, !grey);

	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _y$[esp+24]
	inc	esi
	test	cl, cl
	jne	SHORT $LL4@DrawString
$LN39@DrawString:
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx

; 1643 :   }
; 1644 : }

	add	esp, 12					; 0000000cH
	ret	0
?DrawString@@YAXAAVPVideoFrame@@AAUVideoInfo@@HHPBD@Z ENDP ; DrawString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
;	COMDAT ?DrawDigitYUY2@@YAXAAVPVideoFrame@@HHH@Z
_TEXT	SEGMENT
_tx$1$ = -24						; size = 4
tv452 = -20						; size = 4
tv455 = -16						; size = 4
tv462 = -12						; size = 4
_dst$1$ = -8						; size = 4
tv453 = -4						; size = 4
_pitch$1$ = 8						; size = 4
_y$ = 8							; size = 4
_num$ = 12						; size = 4
?DrawDigitYUY2@@YAXAAVPVideoFrame@@HHH@Z PROC		; DrawDigitYUY2, COMDAT
; _dst$ = ecx
; _x$ = edx

; 1699 : {

	sub	esp, 24					; 00000018H

; 1703 : 	y = y * 20;

	mov	eax, DWORD PTR _y$[esp+20]
	push	ebx
	push	ebp
	push	esi
	push	edi
	lea	esi, DWORD PTR [edx+edx*4]
	mov	DWORD PTR _dst$1$[esp+40], ecx
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	mov	edx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\info.cpp

; 1703 : 	y = y * 20;

	lea	edi, DWORD PTR [eax+eax*4]
	add	esi, esi
	shl	edi, 2
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edx, edx
	je	SHORT $LN19@DrawDigitY
	cmp	DWORD PTR [edx], 192			; 000000c0H
	jbe	SHORT $LN19@DrawDigitY
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+192]
	push	0
	call	eax
	mov	edx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	ecx, eax
	mov	DWORD PTR _pitch$1$[esp+36], eax
	jmp	SHORT $LN20@DrawDigitY
$LN19@DrawDigitY:
	xor	ecx, ecx
	mov	DWORD PTR _pitch$1$[esp+36], ecx
$LN20@DrawDigitY:
	mov	eax, DWORD PTR _num$[esp+36]
; File c:\github\mvtools\sources\info.cpp

; 1706 : 	for (int tx = 0; tx < 10; tx++) {

	xor	ebp, ebp
	mov	ebx, 15					; 0000000fH
	mov	DWORD PTR _tx$1$[esp+40], ebp
	mov	DWORD PTR tv455[esp+40], ebx
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR ?font@@3PAY0BE@GA[eax*8]
	mov	DWORD PTR tv462[esp+40], eax
	mov	eax, ecx
	imul	eax, edi
	lea	edi, DWORD PTR [eax+esi*2]
	mov	DWORD PTR tv452[esp+40], edi
	npad	7
$LL4@DrawDigitY:

; 1707 : 		for (int ty = 0; ty < 20; ty++) {

	mov	esi, DWORD PTR tv462[esp+40]
	mov	ecx, ebx
	mov	eax, 1
	mov	ebx, ebp
	shl	eax, cl
	mov	ebp, 20					; 00000014H
	mov	DWORD PTR tv453[esp+40], eax
	and	ebx, 1
	npad	5
$LL7@DrawDigitY:
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	edx, edx
	je	SHORT $LN25@DrawDigitY
	cmp	DWORD PTR [edx], 220			; 000000dcH
	jbe	SHORT $LN25@DrawDigitY
	mov	eax, DWORD PTR _dst$1$[esp+40]
	push	0
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+220]
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN26@DrawDigitY
$LN25@DrawDigitY:
	xor	ecx, ecx
$LN26@DrawDigitY:
; File c:\github\mvtools\sources\info.cpp

; 1709 : 			if (font[num][ty] & (1 << (15 - tx))) {

	movzx	eax, WORD PTR [esi]
	test	eax, DWORD PTR tv453[esp+40]
	je	SHORT $LN8@DrawDigitY
	test	ebx, ebx

; 1710 : 				if (tx & 1) {

	je	SHORT $LN10@DrawDigitY

; 1711 : 					dp[0] = 250;
; 1712 : 					dp[-1] = 128;

	mov	WORD PTR [edi+ecx-1], 64128		; 0000fa80H

; 1713 : 					dp[1] = 128;

	mov	BYTE PTR [edi+ecx+1], 128		; 00000080H

; 1714 : 				} else {

	jmp	SHORT $LN5@DrawDigitY
$LN10@DrawDigitY:

; 1715 : 					dp[0] = 250;

	mov	WORD PTR [edi+ecx], 33018		; 000080faH

; 1716 : 					dp[1] = 128;
; 1717 : 					dp[3] = 128;

	mov	BYTE PTR [edi+ecx+3], 128		; 00000080H

; 1718 : 				}
; 1719 : 			} else {

	jmp	SHORT $LN5@DrawDigitY
$LN8@DrawDigitY:

; 1720 : 				if (tx & 1) {
; 1721 : 					dp[0] = (unsigned char) ((dp[0] * 3) >> 2);

	movzx	eax, BYTE PTR [edi+ecx]
	lea	eax, DWORD PTR [eax+eax*2]
	sar	eax, 2
	mov	BYTE PTR [edi+ecx], al
	test	ebx, ebx
	je	SHORT $LN12@DrawDigitY

; 1722 : 					dp[-1] = (unsigned char) ((dp[-1] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx-1]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx-1], al

; 1723 : 					dp[1] = (unsigned char) ((dp[1] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx+1]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx+1], al

; 1724 : 				} else {

	jmp	SHORT $LN5@DrawDigitY
$LN12@DrawDigitY:

; 1725 : 					dp[0] = (unsigned char) ((dp[0] * 3) >> 2);
; 1726 : 					dp[1] = (unsigned char) ((dp[1] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx+1]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx+1], al

; 1727 : 					dp[3] = (unsigned char) ((dp[3] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx+3]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx+3], al
$LN5@DrawDigitY:

; 1707 : 		for (int ty = 0; ty < 20; ty++) {

	add	edi, DWORD PTR _pitch$1$[esp+36]
	add	esi, 2
	mov	edx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	sub	ebp, 1
	jne	$LL7@DrawDigitY

; 1706 : 	for (int tx = 0; tx < 10; tx++) {

	mov	ebx, DWORD PTR tv455[esp+40]
	mov	ebp, DWORD PTR _tx$1$[esp+40]
	dec	ebx
	mov	edi, DWORD PTR tv452[esp+40]
	inc	ebp
	add	edi, 2
	mov	DWORD PTR _tx$1$[esp+40], ebp
	mov	DWORD PTR tv452[esp+40], edi
	mov	DWORD PTR tv455[esp+40], ebx
	cmp	ebx, 5
	jg	$LL4@DrawDigitY
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1728 : 				}
; 1729 : 			}
; 1730 : 		}
; 1731 : 	}
; 1732 : }

	add	esp, 24					; 00000018H
	ret	0
?DrawDigitYUY2@@YAXAAVPVideoFrame@@HHH@Z ENDP		; DrawDigitYUY2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
;	COMDAT ?DrawStringYUY2@@YAXAAVPVideoFrame@@HHPBD@Z
_TEXT	SEGMENT
tv497 = -36						; size = 4
_pitch$1$ = -32						; size = 4
_tx$1$ = -28						; size = 4
tv501 = -24						; size = 4
tv505 = -20						; size = 4
_dst$1$ = -16						; size = 4
_y$1$ = -12						; size = 4
tv504 = -8						; size = 4
tv507 = -4						; size = 4
_y$ = 8							; size = 4
_s$ = 12						; size = 4
?DrawStringYUY2@@YAXAAVPVideoFrame@@HHPBD@Z PROC	; DrawStringYUY2, COMDAT
; _dst$ = ecx
; _x$dead$ = edx

; 1735 : {

	sub	esp, 36					; 00000024H

; 1736 : 	for (int xx = 0; *s; ++s, ++xx) {

	mov	eax, DWORD PTR _s$[esp+32]
	push	ebx
	mov	DWORD PTR _dst$1$[esp+40], ecx
	mov	bl, BYTE PTR [eax]
	test	bl, bl
	je	$LN3@DrawString
	mov	eax, DWORD PTR _y$[esp+36]
	mov	edx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	push	ebp
	push	esi
	lea	eax, DWORD PTR [eax+eax*4]
	mov	DWORD PTR tv497[esp+48], 0
	shl	eax, 2
	mov	DWORD PTR _y$1$[esp+48], eax
	push	edi
$LL4@DrawString:

; 1737 : 		DrawDigitYUY2(dst, x + xx, y, *s - ' ');

	movsx	esi, bl
	sub	esi, 32					; 00000020H
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	edx, edx
	je	SHORT $LN24@DrawString
	cmp	DWORD PTR [edx], 192			; 000000c0H
	jbe	SHORT $LN24@DrawString
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+192]
	push	0
	call	eax
	mov	edx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	ecx, eax
	mov	DWORD PTR _pitch$1$[esp+52], eax
	jmp	SHORT $LN25@DrawString
$LN24@DrawString:
	xor	ecx, ecx
	mov	DWORD PTR _pitch$1$[esp+52], ecx
$LN25@DrawString:
	mov	ebp, ecx
	lea	eax, DWORD PTR [esi+esi*4]
	imul	ebp, DWORD PTR _y$1$[esp+52]
	lea	esi, DWORD PTR ?font@@3PAY0BE@GA[eax*8]
; File c:\github\mvtools\sources\info.cpp

; 1706 : 	for (int tx = 0; tx < 10; tx++) {

	xor	edi, edi
	mov	DWORD PTR tv507[esp+52], esi
	mov	ebx, 15					; 0000000fH
	mov	DWORD PTR _tx$1$[esp+52], edi
	mov	DWORD PTR tv505[esp+52], ebx
	add	ebp, DWORD PTR tv497[esp+52]
	mov	DWORD PTR tv501[esp+52], ebp
$LL9@DrawString:
	mov	ecx, ebx
	mov	eax, 1
	shl	eax, cl
	mov	ebx, edi

; 1707 : 		for (int ty = 0; ty < 20; ty++) {

	mov	edi, ebp
	mov	DWORD PTR tv504[esp+52], eax
	and	ebx, 1
	mov	ebp, 20					; 00000014H
	npad	4
$LL12@DrawString:
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	edx, edx
	je	SHORT $LN30@DrawString
	cmp	DWORD PTR [edx], 220			; 000000dcH
	jbe	SHORT $LN30@DrawString
	mov	eax, DWORD PTR _dst$1$[esp+52]
	push	0
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+220]
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN31@DrawString
$LN30@DrawString:
	xor	ecx, ecx
$LN31@DrawString:
; File c:\github\mvtools\sources\info.cpp

; 1709 : 			if (font[num][ty] & (1 << (15 - tx))) {

	movzx	eax, WORD PTR [esi]
	test	eax, DWORD PTR tv504[esp+52]
	je	SHORT $LN13@DrawString
	test	ebx, ebx

; 1710 : 				if (tx & 1) {

	je	SHORT $LN15@DrawString

; 1711 : 					dp[0] = 250;
; 1712 : 					dp[-1] = 128;

	mov	WORD PTR [edi+ecx-1], 64128		; 0000fa80H

; 1713 : 					dp[1] = 128;

	mov	BYTE PTR [edi+ecx+1], 128		; 00000080H

; 1714 : 				} else {

	jmp	SHORT $LN10@DrawString
$LN15@DrawString:

; 1715 : 					dp[0] = 250;

	mov	WORD PTR [edi+ecx], 33018		; 000080faH

; 1716 : 					dp[1] = 128;
; 1717 : 					dp[3] = 128;

	mov	BYTE PTR [edi+ecx+3], 128		; 00000080H

; 1718 : 				}
; 1719 : 			} else {

	jmp	SHORT $LN10@DrawString
$LN13@DrawString:

; 1721 : 					dp[0] = (unsigned char) ((dp[0] * 3) >> 2);

	movzx	eax, BYTE PTR [edi+ecx]
	lea	eax, DWORD PTR [eax+eax*2]
	sar	eax, 2
	mov	BYTE PTR [edi+ecx], al
	test	ebx, ebx

; 1720 : 				if (tx & 1) {

	je	SHORT $LN17@DrawString

; 1722 : 					dp[-1] = (unsigned char) ((dp[-1] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx-1]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx-1], al

; 1723 : 					dp[1] = (unsigned char) ((dp[1] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx+1]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx+1], al

; 1724 : 				} else {

	jmp	SHORT $LN10@DrawString
$LN17@DrawString:

; 1725 : 					dp[0] = (unsigned char) ((dp[0] * 3) >> 2);
; 1726 : 					dp[1] = (unsigned char) ((dp[1] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx+1]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx+1], al

; 1727 : 					dp[3] = (unsigned char) ((dp[3] + 128) >> 1);

	movzx	eax, BYTE PTR [edi+ecx+3]
	sub	eax, -128				; ffffff80H
	shr	eax, 1
	mov	BYTE PTR [edi+ecx+3], al
$LN10@DrawString:

; 1707 : 		for (int ty = 0; ty < 20; ty++) {

	add	edi, DWORD PTR _pitch$1$[esp+52]
	add	esi, 2
	mov	edx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	sub	ebp, 1
	jne	$LL12@DrawString

; 1706 : 	for (int tx = 0; tx < 10; tx++) {

	mov	ebx, DWORD PTR tv505[esp+52]
	mov	edi, DWORD PTR _tx$1$[esp+52]
	dec	ebx
	mov	ebp, DWORD PTR tv501[esp+52]
	inc	edi
	mov	esi, DWORD PTR tv507[esp+52]
	add	ebp, 2
	mov	DWORD PTR _tx$1$[esp+52], edi
	mov	DWORD PTR tv501[esp+52], ebp
	mov	DWORD PTR tv505[esp+52], ebx
	cmp	ebx, 5
	jg	$LL9@DrawString

; 1736 : 	for (int xx = 0; *s; ++s, ++xx) {

	mov	eax, DWORD PTR _s$[esp+48]
	add	DWORD PTR tv497[esp+52], 20		; 00000014H
	inc	eax
	mov	ecx, DWORD PTR _dst$1$[esp+52]
	mov	DWORD PTR _s$[esp+48], eax
	mov	bl, BYTE PTR [eax]
	test	bl, bl
	jne	$LL4@DrawString
	pop	edi
	pop	esi
	pop	ebp
$LN3@DrawString:
	pop	ebx

; 1738 : 	}
; 1739 : }

	add	esp, 36					; 00000024H
	ret	0
?DrawStringYUY2@@YAXAAVPVideoFrame@@HHPBD@Z ENDP	; DrawStringYUY2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
;	COMDAT ??$DrawDigit@E@@YAXAAVPVideoFrame@@HHHHHH_N@Z
_TEXT	SEGMENT
_midChroma$1$ = -32					; size = 4
_pitch$1$ = -32						; size = 4
tv719 = -28						; size = 4
tv711 = -28						; size = 4
_pitchUV$1$ = -24					; size = 4
_dst$1$ = -24						; size = 4
_x$2$ = -20						; size = 4
tv720 = -16						; size = 4
_y$1$ = -12						; size = 4
tv710 = -12						; size = 4
tv723 = -8						; size = 4
tv712 = -4						; size = 4
_dstpV$1$ = 8						; size = 4
_color$1$ = 8						; size = 1
_y$ = 8							; size = 4
_num$ = 12						; size = 4
_tx$1$ = 16						; size = 4
_bits_per_pixel$ = 16					; size = 4
_xRatioShift$ = 20					; size = 4
_yRatioShift$ = 24					; size = 4
_dstpU$1$ = 28						; size = 4
_chroma$ = 28						; size = 1
??$DrawDigit@E@@YAXAAVPVideoFrame@@HHHHHH_N@Z PROC	; DrawDigit<unsigned char>, COMDAT
; _dst$ = ecx
; _x$ = edx

; 1573 : {

	sub	esp, 32					; 00000020H
	push	ebx
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\info.cpp

; 1574 :   x = x * 10;

	lea	eax, DWORD PTR [edx+edx*4]
	add	eax, eax
	push	ebp
	mov	DWORD PTR _x$2$[esp+40], eax

; 1575 :   y = y * 20;

	mov	eax, DWORD PTR _y$[esp+36]
	push	esi
	mov	esi, ecx

; 1576 : 
; 1577 :   const pixel_t color = 235 << (bits_per_pixel - 8);

	mov	ecx, DWORD PTR _bits_per_pixel$[esp+40]
	push	edi
	lea	edi, DWORD PTR [eax+eax*4]
	mov	DWORD PTR _dst$1$[esp+48], esi
	mov	al, 235					; 000000ebH
	shl	edi, 2
	lea	ecx, DWORD PTR [ecx-8]
	mov	DWORD PTR _y$1$[esp+48], edi
	shl	al, cl
	mov	BYTE PTR _color$1$[esp+44], al
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	ebx, ebx
	je	SHORT $LN24@DrawDigit
	cmp	DWORD PTR [ebx], 192			; 000000c0H
	jbe	SHORT $LN24@DrawDigit
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+192]
	push	0
	call	eax
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	ebp, eax
	mov	DWORD PTR _pitch$1$[esp+48], eax
	jmp	SHORT $LN25@DrawDigit
$LN24@DrawDigit:
	xor	ebp, ebp
	mov	DWORD PTR _pitch$1$[esp+48], ebp
$LN25@DrawDigit:

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	ebx, ebx
	je	SHORT $LN30@DrawDigit
	cmp	DWORD PTR [ebx], 220			; 000000dcH
	jbe	SHORT $LN30@DrawDigit
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+220]
	push	0
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN31@DrawDigit
$LN30@DrawDigit:
	xor	ecx, ecx
$LN31@DrawDigit:
	mov	eax, DWORD PTR _num$[esp+44]
	mov	ebx, DWORD PTR _pitch$1$[esp+48]
; File c:\github\mvtools\sources\info.cpp

; 1584 :   for (int tx = 0; tx < 10; tx++) {

	imul	ebp, edi
	lea	eax, DWORD PTR [eax+eax*4]
	lea	edx, DWORD PTR ?font@@3PAY0BE@GA[eax*8]
	mov	eax, 15					; 0000000fH
	mov	DWORD PTR tv720[esp+48], edx
	add	ebp, ecx
	mov	DWORD PTR tv719[esp+48], eax
	add	ebp, DWORD PTR _x$2$[esp+48]
	npad	5
$LL4@DrawDigit:

; 1585 :     for (int ty = 0; ty < 20; ty++) {

	mov	ecx, eax
	mov	edi, 1
	shl	edi, cl
	mov	eax, ebp
	mov	esi, 20					; 00000014H
$LL7@DrawDigit:

; 1586 :       pixel_t* dp = &dstp[(x + tx) + (y + ty) * pitch];
; 1587 :       if (font[num][ty] & (1 << (15 - tx))) 

	movzx	ecx, WORD PTR [edx]
	test	ecx, edi
	je	SHORT $LN14@DrawDigit

; 1588 :         *dp = color;

	mov	cl, BYTE PTR _color$1$[esp+44]

; 1589 :       else 

	jmp	SHORT $LN66@DrawDigit
$LN14@DrawDigit:

; 1590 :         *dp = (*dp * 3) >> 2;

	movzx	ecx, BYTE PTR [eax]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	sar	ecx, 2
$LN66@DrawDigit:
	mov	BYTE PTR [eax], cl
	add	edx, 2
	add	eax, ebx
	sub	esi, 1
	jne	SHORT $LL7@DrawDigit

; 1584 :   for (int tx = 0; tx < 10; tx++) {

	mov	eax, DWORD PTR tv719[esp+48]
	inc	ebp
	mov	edx, DWORD PTR tv720[esp+48]
	dec	eax
	mov	DWORD PTR tv719[esp+48], eax
	cmp	eax, 5
	jg	SHORT $LL4@DrawDigit

; 1591 :     }
; 1592 :   }
; 1593 :   if (chroma)

	cmp	BYTE PTR _chroma$[esp+44], 0
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	je	$LN9@DrawDigit
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	ebx, ebx
	je	SHORT $LN36@DrawDigit
	cmp	DWORD PTR [ebx], 220			; 000000dcH
	jbe	SHORT $LN36@DrawDigit
	mov	esi, DWORD PTR _dst$1$[esp+48]
	mov	eax, DWORD PTR [ebx+220]
	push	2
	mov	ecx, DWORD PTR [esi]
	call	eax
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _dstpU$1$[esp+44], eax
	jmp	SHORT $LN37@DrawDigit
$LN36@DrawDigit:
	mov	esi, DWORD PTR _dst$1$[esp+48]
	mov	DWORD PTR _dstpU$1$[esp+44], 0
$LN37@DrawDigit:
	test	ebx, ebx
	je	SHORT $LN42@DrawDigit
	cmp	DWORD PTR [ebx], 220			; 000000dcH
	jbe	SHORT $LN42@DrawDigit
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+220]
	push	4
	call	eax
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _dstpV$1$[esp+44], eax
	jmp	SHORT $LN43@DrawDigit
$LN42@DrawDigit:
	mov	DWORD PTR _dstpV$1$[esp+44], 0
$LN43@DrawDigit:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	ebx, ebx
	je	SHORT $LN48@DrawDigit
	cmp	DWORD PTR [ebx], 192			; 000000c0H
	jbe	SHORT $LN48@DrawDigit
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+192]
	push	2
	call	eax
	jmp	SHORT $LN67@DrawDigit
$LN48@DrawDigit:
	xor	eax, eax
$LN67@DrawDigit:
; File c:\github\mvtools\sources\info.cpp

; 1599 :     int midChroma = 1 << (bits_per_pixel - 1);

	mov	ecx, DWORD PTR _bits_per_pixel$[esp+44]
	mov	edx, 1
	dec	ecx
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	mov	DWORD PTR _pitchUV$1$[esp+48], eax
; File c:\github\mvtools\sources\info.cpp

; 1599 :     int midChroma = 1 << (bits_per_pixel - 1);

	shl	edx, cl
	mov	ebp, eax

; 1600 :     for (int tx = 0; tx < 10; tx++)

	xor	ecx, ecx
	mov	DWORD PTR _midChroma$1$[esp+48], edx
	imul	ebp, DWORD PTR _y$1$[esp+48]
	mov	eax, 15					; 0000000fH
	mov	DWORD PTR _tx$1$[esp+44], ecx
	mov	DWORD PTR tv711[esp+48], eax
	mov	DWORD PTR tv712[esp+48], ebp
$LL10@DrawDigit:

; 1601 :     {
; 1602 :       for (int ty = 0; ty < 20; ty++)

	mov	esi, DWORD PTR _x$2$[esp+48]
	mov	ebx, 1
	mov	edi, ebp
	mov	ebp, 20					; 00000014H
	lea	esi, DWORD PTR [ecx+esi]
	mov	ecx, DWORD PTR _xRatioShift$[esp+44]
	sar	esi, cl
	mov	ecx, eax
	shl	ebx, cl
	mov	DWORD PTR tv710[esp+48], ebx
	mov	ebx, DWORD PTR tv720[esp+48]
	mov	DWORD PTR tv723[esp+48], esi
	npad	7
$LL13@DrawDigit:

; 1603 :       {
; 1604 :         int pos = ((x + tx) >> xRatioShift) + (((y + ty) * pitchUV) >> yRatioShift);

	mov	ecx, DWORD PTR _yRatioShift$[esp+44]
	mov	eax, edi

; 1605 :         pixel_t* dpU = &dstpU[pos];
; 1606 :         pixel_t* dpV = &dstpV[pos];
; 1607 :         if (font[num][ty] & (1 << (15 - tx)))

	mov	edx, DWORD PTR _midChroma$1$[esp+48]
	sar	eax, cl
	mov	ecx, DWORD PTR _dstpU$1$[esp+44]
	add	eax, esi
	mov	esi, DWORD PTR _dstpV$1$[esp+44]
	add	ecx, eax
	add	esi, eax
	movzx	eax, WORD PTR [ebx]
	test	eax, DWORD PTR tv710[esp+48]
	je	SHORT $LN17@DrawDigit

; 1608 :         {
; 1609 :           *dpU = midChroma;

	mov	BYTE PTR [ecx], dl

; 1610 :           *dpV = midChroma;

	mov	BYTE PTR [esi], dl

; 1611 :         }
; 1612 :         else

	jmp	SHORT $LN11@DrawDigit
$LN17@DrawDigit:

; 1613 :         {
; 1614 :           *dpU = (pixel_t)((*dpU + midChroma) >> 1);

	movzx	eax, BYTE PTR [ecx]
	add	eax, edx
	sar	eax, 1
	mov	BYTE PTR [ecx], al

; 1615 :           *dpV = (pixel_t)((*dpV + midChroma) >> 1);

	movzx	eax, BYTE PTR [esi]
	add	eax, edx
	sar	eax, 1
	mov	BYTE PTR [esi], al
$LN11@DrawDigit:

; 1601 :     {
; 1602 :       for (int ty = 0; ty < 20; ty++)

	add	edi, DWORD PTR _pitchUV$1$[esp+48]
	add	ebx, 2
	mov	esi, DWORD PTR tv723[esp+48]
	sub	ebp, 1
	jne	SHORT $LL13@DrawDigit

; 1600 :     for (int tx = 0; tx < 10; tx++)

	mov	eax, DWORD PTR tv711[esp+48]
	mov	ecx, DWORD PTR _tx$1$[esp+44]
	dec	eax
	mov	ebp, DWORD PTR tv712[esp+48]
	inc	ecx
	mov	DWORD PTR _tx$1$[esp+44], ecx
	mov	DWORD PTR tv711[esp+48], eax
	cmp	eax, 5
	jg	$LL10@DrawDigit
$LN9@DrawDigit:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1616 :         }
; 1617 :       }
; 1618 :     }
; 1619 :   }
; 1620 : }

	add	esp, 32					; 00000020H
	ret	0
??$DrawDigit@E@@YAXAAVPVideoFrame@@HHHHHH_N@Z ENDP	; DrawDigit<unsigned char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
; File c:\github\mvtools\sources\include\avisynth.h
; File c:\github\mvtools\sources\info.cpp
;	COMDAT ??$DrawDigit@G@@YAXAAVPVideoFrame@@HHHHHH_N@Z
_TEXT	SEGMENT
tv785 = -32						; size = 4
tv777 = -32						; size = 4
_pitchUV$1$ = -28					; size = 4
_dst$1$ = -28						; size = 4
_y$1$ = -24						; size = 4
tv766 = -24						; size = 4
_x$2$ = -20						; size = 4
tv778 = -16						; size = 4
_midChroma$1$ = -12					; size = 4
tv780 = -12						; size = 4
_color$1$ = -8						; size = 4
tv765 = -8						; size = 4
tv771 = -4						; size = 4
_dstpV$1$ = 8						; size = 4
tv775 = 8						; size = 4
_y$ = 8							; size = 4
_num$ = 12						; size = 4
_tx$1$ = 16						; size = 4
_bits_per_pixel$ = 16					; size = 4
_xRatioShift$ = 20					; size = 4
_yRatioShift$ = 24					; size = 4
_dstpU$1$ = 28						; size = 4
_chroma$ = 28						; size = 1
??$DrawDigit@G@@YAXAAVPVideoFrame@@HHHHHH_N@Z PROC	; DrawDigit<unsigned short>, COMDAT
; _dst$ = ecx
; _x$ = edx

; 1573 : {

	sub	esp, 32					; 00000020H
	push	ebx
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
; File c:\github\mvtools\sources\info.cpp

; 1574 :   x = x * 10;

	lea	eax, DWORD PTR [edx+edx*4]
	add	eax, eax
	mov	DWORD PTR _x$2$[esp+36], eax

; 1575 :   y = y * 20;

	mov	eax, DWORD PTR _y$[esp+32]
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	lea	eax, DWORD PTR [eax+eax*4]

; 1576 : 
; 1577 :   const pixel_t color = 235 << (bits_per_pixel - 8);

	mov	ecx, DWORD PTR _bits_per_pixel$[esp+44]
	shl	eax, 2
	mov	DWORD PTR _y$1$[esp+48], eax
	mov	eax, 235				; 000000ebH
	mov	DWORD PTR _dst$1$[esp+48], edi
	lea	ecx, DWORD PTR [ecx-8]
	shl	ax, cl
	movzx	eax, ax
	mov	DWORD PTR _color$1$[esp+48], eax
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	ebx, ebx
	je	SHORT $LN24@DrawDigit
	cmp	DWORD PTR [ebx], 192			; 000000c0H
	jbe	SHORT $LN24@DrawDigit
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx+192]
	push	0
	call	eax
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	esi, eax
	jmp	SHORT $LN25@DrawDigit
$LN24@DrawDigit:
	xor	esi, esi
$LN25@DrawDigit:
; File c:\github\mvtools\sources\info.cpp

; 1579 :   int pitch = dst->GetPitch() / sizeof(pixel_t);

	shr	esi, 1
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	ebx, ebx
	je	SHORT $LN30@DrawDigit
	cmp	DWORD PTR [ebx], 220			; 000000dcH
	jbe	SHORT $LN30@DrawDigit
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx+220]
	push	0
	call	eax
	mov	ecx, eax
	jmp	SHORT $LN31@DrawDigit
$LN30@DrawDigit:
	xor	ecx, ecx
$LN31@DrawDigit:
	lea	eax, DWORD PTR [esi+esi]
; File c:\github\mvtools\sources\info.cpp

; 1584 :   for (int tx = 0; tx < 10; tx++) {

	mov	ebp, 15					; 0000000fH
	imul	esi, DWORD PTR _y$1$[esp+48]
	mov	DWORD PTR tv780[esp+48], eax
	mov	eax, DWORD PTR _num$[esp+44]
	mov	ebx, DWORD PTR tv780[esp+48]
	mov	DWORD PTR tv777[esp+48], ebp
	add	esi, DWORD PTR _x$2$[esp+48]
	lea	eax, DWORD PTR [eax+eax*4]
	lea	edx, DWORD PTR ?font@@3PAY0BE@GA[eax*8]
	mov	DWORD PTR tv778[esp+48], edx
	lea	eax, DWORD PTR [ecx+esi*2]
	mov	DWORD PTR tv775[esp+44], eax
	npad	6
$LL4@DrawDigit:

; 1585 :     for (int ty = 0; ty < 20; ty++) {

	mov	ecx, ebp
	mov	edi, 1
	mov	ebp, DWORD PTR _color$1$[esp+48]
	mov	esi, 20					; 00000014H
	shl	edi, cl
$LL7@DrawDigit:

; 1586 :       pixel_t* dp = &dstp[(x + tx) + (y + ty) * pitch];
; 1587 :       if (font[num][ty] & (1 << (15 - tx))) 

	movzx	ecx, WORD PTR [edx]
	test	ecx, edi
	je	SHORT $LN14@DrawDigit

; 1588 :         *dp = color;

	mov	WORD PTR [eax], bp

; 1589 :       else 

	jmp	SHORT $LN5@DrawDigit
$LN14@DrawDigit:

; 1590 :         *dp = (*dp * 3) >> 2;

	movzx	ecx, WORD PTR [eax]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	sar	ecx, 2
	mov	WORD PTR [eax], cx
$LN5@DrawDigit:

; 1585 :     for (int ty = 0; ty < 20; ty++) {

	add	eax, ebx
	add	edx, 2
	sub	esi, 1
	jne	SHORT $LL7@DrawDigit

; 1584 :   for (int tx = 0; tx < 10; tx++) {

	mov	ebp, DWORD PTR tv777[esp+48]
	mov	eax, DWORD PTR tv775[esp+44]
	dec	ebp
	mov	edx, DWORD PTR tv778[esp+48]
	add	eax, 2
	mov	DWORD PTR tv775[esp+44], eax
	mov	DWORD PTR tv777[esp+48], ebp
	cmp	ebp, 5
	jg	SHORT $LL4@DrawDigit

; 1591 :     }
; 1592 :   }
; 1593 :   if (chroma)

	cmp	BYTE PTR _chroma$[esp+44], 0
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	je	$LN9@DrawDigit
; File c:\github\mvtools\sources\include\avisynth.h

; 813  :   BYTE* GetWritePtr(int plane=0) const AVS_BakedCode( return AVS_LinkCall(VFGetWritePtr)(plane) )

	test	ebx, ebx
	je	SHORT $LN36@DrawDigit
	cmp	DWORD PTR [ebx], 220			; 000000dcH
	jbe	SHORT $LN36@DrawDigit
	mov	esi, DWORD PTR _dst$1$[esp+48]
	mov	eax, DWORD PTR [ebx+220]
	push	2
	mov	ecx, DWORD PTR [esi]
	call	eax
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _dstpU$1$[esp+44], eax
	jmp	SHORT $LN37@DrawDigit
$LN36@DrawDigit:
	mov	esi, DWORD PTR _dst$1$[esp+48]
	mov	DWORD PTR _dstpU$1$[esp+44], 0
$LN37@DrawDigit:
	test	ebx, ebx
	je	SHORT $LN42@DrawDigit
	cmp	DWORD PTR [ebx], 220			; 000000dcH
	jbe	SHORT $LN42@DrawDigit
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+220]
	push	4
	call	eax
	mov	ebx, DWORD PTR ?AVS_linkage@@3PBUAVS_Linkage@@B ; AVS_linkage
	mov	DWORD PTR _dstpV$1$[esp+44], eax
	jmp	SHORT $LN43@DrawDigit
$LN42@DrawDigit:
	mov	DWORD PTR _dstpV$1$[esp+44], 0
$LN43@DrawDigit:

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	test	ebx, ebx
	je	SHORT $LN48@DrawDigit
	cmp	DWORD PTR [ebx], 192			; 000000c0H
	jbe	SHORT $LN48@DrawDigit
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+192]
	push	2
	call	eax
	jmp	SHORT $LN66@DrawDigit
$LN48@DrawDigit:
	xor	eax, eax
$LN66@DrawDigit:
; File c:\github\mvtools\sources\info.cpp

; 1599 :     int midChroma = 1 << (bits_per_pixel - 1);

	mov	ecx, DWORD PTR _bits_per_pixel$[esp+44]
	mov	edx, 1
	dec	ecx
; File c:\github\mvtools\sources\include\avisynth.h

; 797  :   int GetPitch(int plane=0) const AVS_BakedCode( return AVS_LinkCall(GetPitch)(plane) )

	mov	DWORD PTR _pitchUV$1$[esp+48], eax
; File c:\github\mvtools\sources\info.cpp

; 1599 :     int midChroma = 1 << (bits_per_pixel - 1);

	shl	edx, cl
	mov	ebp, eax

; 1600 :     for (int tx = 0; tx < 10; tx++)

	xor	ecx, ecx
	mov	DWORD PTR _midChroma$1$[esp+48], edx
	imul	ebp, DWORD PTR _y$1$[esp+48]
	mov	eax, 15					; 0000000fH
	mov	DWORD PTR _tx$1$[esp+44], ecx
	mov	DWORD PTR tv766[esp+48], eax
	mov	DWORD PTR tv771[esp+48], ebp
	npad	4
$LL10@DrawDigit:

; 1601 :     {
; 1602 :       for (int ty = 0; ty < 20; ty++)

	mov	esi, DWORD PTR _x$2$[esp+48]
	mov	ebx, 1
	mov	edi, ebp
	mov	ebp, 20					; 00000014H
	lea	esi, DWORD PTR [ecx+esi]
	mov	ecx, DWORD PTR _xRatioShift$[esp+44]
	sar	esi, cl
	mov	ecx, eax
	shl	ebx, cl
	mov	DWORD PTR tv765[esp+48], ebx
	mov	ebx, DWORD PTR tv778[esp+48]
	mov	DWORD PTR tv785[esp+48], esi
	npad	7
$LL13@DrawDigit:

; 1603 :       {
; 1604 :         int pos = ((x + tx) >> xRatioShift) + (((y + ty) * pitchUV) >> yRatioShift);

	mov	ecx, DWORD PTR _yRatioShift$[esp+44]
	mov	eax, edi

; 1605 :         pixel_t* dpU = &dstpU[pos];
; 1606 :         pixel_t* dpV = &dstpV[pos];

	mov	edx, DWORD PTR _dstpV$1$[esp+44]
	sar	eax, cl
	mov	ecx, DWORD PTR _dstpU$1$[esp+44]
	add	eax, esi
	lea	esi, DWORD PTR [edx+eax*2]

; 1607 :         if (font[num][ty] & (1 << (15 - tx)))

	mov	edx, DWORD PTR _midChroma$1$[esp+48]
	lea	ecx, DWORD PTR [ecx+eax*2]
	movzx	eax, WORD PTR [ebx]
	test	eax, DWORD PTR tv765[esp+48]
	je	SHORT $LN17@DrawDigit

; 1608 :         {
; 1609 :           *dpU = midChroma;

	mov	WORD PTR [ecx], dx

; 1610 :           *dpV = midChroma;

	mov	WORD PTR [esi], dx

; 1611 :         }
; 1612 :         else

	jmp	SHORT $LN11@DrawDigit
$LN17@DrawDigit:

; 1613 :         {
; 1614 :           *dpU = (pixel_t)((*dpU + midChroma) >> 1);

	movzx	eax, WORD PTR [ecx]
	add	eax, edx
	sar	eax, 1
	mov	WORD PTR [ecx], ax

; 1615 :           *dpV = (pixel_t)((*dpV + midChroma) >> 1);

	movzx	eax, WORD PTR [esi]
	add	eax, edx
	sar	eax, 1
	mov	WORD PTR [esi], ax
$LN11@DrawDigit:

; 1601 :     {
; 1602 :       for (int ty = 0; ty < 20; ty++)

	add	edi, DWORD PTR _pitchUV$1$[esp+48]
	add	ebx, 2
	mov	esi, DWORD PTR tv785[esp+48]
	sub	ebp, 1
	jne	SHORT $LL13@DrawDigit

; 1600 :     for (int tx = 0; tx < 10; tx++)

	mov	eax, DWORD PTR tv766[esp+48]
	mov	ecx, DWORD PTR _tx$1$[esp+44]
	dec	eax
	mov	ebp, DWORD PTR tv771[esp+48]
	inc	ecx
	mov	DWORD PTR _tx$1$[esp+44], ecx
	mov	DWORD PTR tv766[esp+48], eax
	cmp	eax, 5
	jg	$LL10@DrawDigit
$LN9@DrawDigit:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1616 :         }
; 1617 :       }
; 1618 :     }
; 1619 :   }
; 1620 : }

	add	esp, 32					; 00000020H
	ret	0
??$DrawDigit@G@@YAXAAVPVideoFrame@@HHHHHH_N@Z ENDP	; DrawDigit<unsigned short>
_TEXT	ENDS
END
