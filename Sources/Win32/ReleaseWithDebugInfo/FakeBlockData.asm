; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	c:\github\mvtools\sources\fakeblockdata.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?Update@FakeBlockData@@QAEXPBH@Z		; FakeBlockData::Update
PUBLIC	??1FakeBlockData@@QAE@XZ			; FakeBlockData::~FakeBlockData
PUBLIC	??0FakeBlockData@@QAE@XZ			; FakeBlockData::FakeBlockData
PUBLIC	?Init@FakeBlockData@@QAEXHH@Z			; FakeBlockData::Init
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\fakeblockdata.cpp
;	COMDAT ?Init@FakeBlockData@@QAEXHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
?Init@FakeBlockData@@QAEXHH@Z PROC			; FakeBlockData::Init, COMDAT
; _this$ = ecx

; 25   :     x=_x;

	mov	eax, DWORD PTR __x$[esp-4]
	mov	DWORD PTR [ecx], eax

; 26   :     y=_y;

	mov	eax, DWORD PTR __y$[esp-4]
	mov	DWORD PTR [ecx+4], eax

; 27   : }

	ret	8
?Init@FakeBlockData@@QAEXHH@Z ENDP			; FakeBlockData::Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\fakeblockdata.cpp
;	COMDAT ??0FakeBlockData@@QAE@XZ
_TEXT	SEGMENT
??0FakeBlockData@@QAE@XZ PROC				; FakeBlockData::FakeBlockData, COMDAT
; _this$ = ecx

; 37   : 	x = 0;

	mov	DWORD PTR [ecx], 0

; 38   : 	y = 0;
; 39   : }

	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0FakeBlockData@@QAE@XZ ENDP				; FakeBlockData::FakeBlockData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\fakeblockdata.cpp
;	COMDAT ??1FakeBlockData@@QAE@XZ
_TEXT	SEGMENT
??1FakeBlockData@@QAE@XZ PROC				; FakeBlockData::~FakeBlockData, COMDAT
; _this$ = ecx

; 43   : 
; 44   : }

	ret	0
??1FakeBlockData@@QAE@XZ ENDP				; FakeBlockData::~FakeBlockData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\github\mvtools\sources\fakeblockdata.cpp
;	COMDAT ?Update@FakeBlockData@@QAEXPBH@Z
_TEXT	SEGMENT
_array$ = 8						; size = 4
?Update@FakeBlockData@@QAEXPBH@Z PROC			; FakeBlockData::Update, COMDAT
; _this$ = ecx

; 48   : 	vector.x   = array [0];

	mov	edx, DWORD PTR _array$[esp-4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax

; 49   : 	vector.y   = array [1];

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], eax

; 50   : 	vector.sad = *(sad_t *)(&array [2]);

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+16], eax

; 51   : //	nLength    = SquareLength(vector);
; 52   : //	nPitch     = pitch;
; 53   : //	pRef       = ref + x + y * pitch;
; 54   : }

	ret	4
?Update@FakeBlockData@@QAEXPBH@Z ENDP			; FakeBlockData::Update
_TEXT	ENDS
END
